/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordBlockConfirmations;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordTnParticipantDetails;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnParticipant
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnParticipant {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LEGAL_ADDRESS = "legalAddress";
  @SerializedName(SERIALIZED_NAME_LEGAL_ADDRESS)
  private String legalAddress;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_LOGO_BASE64 = "logoBase64";
  @SerializedName(SERIALIZED_NAME_LOGO_BASE64)
  private String logoBase64;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "publicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private String publicKey;

  public static final String SERIALIZED_NAME_SHIELD = "shield";
  @SerializedName(SERIALIZED_NAME_SHIELD)
  private String shield;

  public static final String SERIALIZED_NAME_ORIGIN_REGISTRATION_DATE = "originRegistrationDate";
  @SerializedName(SERIALIZED_NAME_ORIGIN_REGISTRATION_DATE)
  private OffsetDateTime originRegistrationDate;

  public static final String SERIALIZED_NAME_ORIGIN_DELETION_DATE = "originDeletionDate";
  @SerializedName(SERIALIZED_NAME_ORIGIN_DELETION_DATE)
  private OffsetDateTime originDeletionDate;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private TgvalidatordTnParticipantDetails details;

  public static final String SERIALIZED_NAME_BLOCK_CONFIRMATIONS = "blockConfirmations";
  @SerializedName(SERIALIZED_NAME_BLOCK_CONFIRMATIONS)
  private List<TgvalidatordBlockConfirmations> blockConfirmations = new ArrayList<>();

  public static final String SERIALIZED_NAME_OWNED_SHARED_ADDRESSES_COUNT = "ownedSharedAddressesCount";
  @SerializedName(SERIALIZED_NAME_OWNED_SHARED_ADDRESSES_COUNT)
  private String ownedSharedAddressesCount;

  public static final String SERIALIZED_NAME_TARGETED_SHARED_ADDRESSES_COUNT = "targetedSharedAddressesCount";
  @SerializedName(SERIALIZED_NAME_TARGETED_SHARED_ADDRESSES_COUNT)
  private String targetedSharedAddressesCount;

  public static final String SERIALIZED_NAME_OUTGOING_TOTAL_PLEDGES_VALUATION_BASE_CURRENCY = "outgoingTotalPledgesValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_OUTGOING_TOTAL_PLEDGES_VALUATION_BASE_CURRENCY)
  private String outgoingTotalPledgesValuationBaseCurrency;

  public static final String SERIALIZED_NAME_INCOMING_TOTAL_PLEDGES_VALUATION_BASE_CURRENCY = "incomingTotalPledgesValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_INCOMING_TOTAL_PLEDGES_VALUATION_BASE_CURRENCY)
  private String incomingTotalPledgesValuationBaseCurrency;

  public TgvalidatordTnParticipant() {
  }

  public TgvalidatordTnParticipant id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordTnParticipant name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TgvalidatordTnParticipant legalAddress(String legalAddress) {
    this.legalAddress = legalAddress;
    return this;
  }

  /**
   * Get legalAddress
   * @return legalAddress
   */
  @javax.annotation.Nullable
  public String getLegalAddress() {
    return legalAddress;
  }

  public void setLegalAddress(String legalAddress) {
    this.legalAddress = legalAddress;
  }


  public TgvalidatordTnParticipant country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public TgvalidatordTnParticipant logoBase64(String logoBase64) {
    this.logoBase64 = logoBase64;
    return this;
  }

  /**
   * Get logoBase64
   * @return logoBase64
   */
  @javax.annotation.Nullable
  public String getLogoBase64() {
    return logoBase64;
  }

  public void setLogoBase64(String logoBase64) {
    this.logoBase64 = logoBase64;
  }


  public TgvalidatordTnParticipant publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

  /**
   * Get publicKey
   * @return publicKey
   */
  @javax.annotation.Nullable
  public String getPublicKey() {
    return publicKey;
  }

  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public TgvalidatordTnParticipant shield(String shield) {
    this.shield = shield;
    return this;
  }

  /**
   * Get shield
   * @return shield
   */
  @javax.annotation.Nullable
  public String getShield() {
    return shield;
  }

  public void setShield(String shield) {
    this.shield = shield;
  }


  public TgvalidatordTnParticipant originRegistrationDate(OffsetDateTime originRegistrationDate) {
    this.originRegistrationDate = originRegistrationDate;
    return this;
  }

  /**
   * Get originRegistrationDate
   * @return originRegistrationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOriginRegistrationDate() {
    return originRegistrationDate;
  }

  public void setOriginRegistrationDate(OffsetDateTime originRegistrationDate) {
    this.originRegistrationDate = originRegistrationDate;
  }


  public TgvalidatordTnParticipant originDeletionDate(OffsetDateTime originDeletionDate) {
    this.originDeletionDate = originDeletionDate;
    return this;
  }

  /**
   * Get originDeletionDate
   * @return originDeletionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOriginDeletionDate() {
    return originDeletionDate;
  }

  public void setOriginDeletionDate(OffsetDateTime originDeletionDate) {
    this.originDeletionDate = originDeletionDate;
  }


  public TgvalidatordTnParticipant createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public TgvalidatordTnParticipant updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public TgvalidatordTnParticipant details(TgvalidatordTnParticipantDetails details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  public TgvalidatordTnParticipantDetails getDetails() {
    return details;
  }

  public void setDetails(TgvalidatordTnParticipantDetails details) {
    this.details = details;
  }


  public TgvalidatordTnParticipant blockConfirmations(List<TgvalidatordBlockConfirmations> blockConfirmations) {
    this.blockConfirmations = blockConfirmations;
    return this;
  }

  public TgvalidatordTnParticipant addBlockConfirmationsItem(TgvalidatordBlockConfirmations blockConfirmationsItem) {
    if (this.blockConfirmations == null) {
      this.blockConfirmations = new ArrayList<>();
    }
    this.blockConfirmations.add(blockConfirmationsItem);
    return this;
  }

  /**
   * Get blockConfirmations
   * @return blockConfirmations
   */
  @javax.annotation.Nullable
  public List<TgvalidatordBlockConfirmations> getBlockConfirmations() {
    return blockConfirmations;
  }

  public void setBlockConfirmations(List<TgvalidatordBlockConfirmations> blockConfirmations) {
    this.blockConfirmations = blockConfirmations;
  }


  public TgvalidatordTnParticipant ownedSharedAddressesCount(String ownedSharedAddressesCount) {
    this.ownedSharedAddressesCount = ownedSharedAddressesCount;
    return this;
  }

  /**
   * Count of shared addresses where the participant is the owner.
   * @return ownedSharedAddressesCount
   */
  @javax.annotation.Nullable
  public String getOwnedSharedAddressesCount() {
    return ownedSharedAddressesCount;
  }

  public void setOwnedSharedAddressesCount(String ownedSharedAddressesCount) {
    this.ownedSharedAddressesCount = ownedSharedAddressesCount;
  }


  public TgvalidatordTnParticipant targetedSharedAddressesCount(String targetedSharedAddressesCount) {
    this.targetedSharedAddressesCount = targetedSharedAddressesCount;
    return this;
  }

  /**
   * Count of shared addresses where the participant is the target.
   * @return targetedSharedAddressesCount
   */
  @javax.annotation.Nullable
  public String getTargetedSharedAddressesCount() {
    return targetedSharedAddressesCount;
  }

  public void setTargetedSharedAddressesCount(String targetedSharedAddressesCount) {
    this.targetedSharedAddressesCount = targetedSharedAddressesCount;
  }


  public TgvalidatordTnParticipant outgoingTotalPledgesValuationBaseCurrency(String outgoingTotalPledgesValuationBaseCurrency) {
    this.outgoingTotalPledgesValuationBaseCurrency = outgoingTotalPledgesValuationBaseCurrency;
    return this;
  }

  /**
   * Total valuation of all outgoing pledges in base currency in main unit (ex. CHF).
   * @return outgoingTotalPledgesValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getOutgoingTotalPledgesValuationBaseCurrency() {
    return outgoingTotalPledgesValuationBaseCurrency;
  }

  public void setOutgoingTotalPledgesValuationBaseCurrency(String outgoingTotalPledgesValuationBaseCurrency) {
    this.outgoingTotalPledgesValuationBaseCurrency = outgoingTotalPledgesValuationBaseCurrency;
  }


  public TgvalidatordTnParticipant incomingTotalPledgesValuationBaseCurrency(String incomingTotalPledgesValuationBaseCurrency) {
    this.incomingTotalPledgesValuationBaseCurrency = incomingTotalPledgesValuationBaseCurrency;
    return this;
  }

  /**
   * Total valuation of all incoming pledges in base currency in main unit (ex. CHF).
   * @return incomingTotalPledgesValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getIncomingTotalPledgesValuationBaseCurrency() {
    return incomingTotalPledgesValuationBaseCurrency;
  }

  public void setIncomingTotalPledgesValuationBaseCurrency(String incomingTotalPledgesValuationBaseCurrency) {
    this.incomingTotalPledgesValuationBaseCurrency = incomingTotalPledgesValuationBaseCurrency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnParticipant tgvalidatordTnParticipant = (TgvalidatordTnParticipant) o;
    return Objects.equals(this.id, tgvalidatordTnParticipant.id) &&
        Objects.equals(this.name, tgvalidatordTnParticipant.name) &&
        Objects.equals(this.legalAddress, tgvalidatordTnParticipant.legalAddress) &&
        Objects.equals(this.country, tgvalidatordTnParticipant.country) &&
        Objects.equals(this.logoBase64, tgvalidatordTnParticipant.logoBase64) &&
        Objects.equals(this.publicKey, tgvalidatordTnParticipant.publicKey) &&
        Objects.equals(this.shield, tgvalidatordTnParticipant.shield) &&
        Objects.equals(this.originRegistrationDate, tgvalidatordTnParticipant.originRegistrationDate) &&
        Objects.equals(this.originDeletionDate, tgvalidatordTnParticipant.originDeletionDate) &&
        Objects.equals(this.createdAt, tgvalidatordTnParticipant.createdAt) &&
        Objects.equals(this.updatedAt, tgvalidatordTnParticipant.updatedAt) &&
        Objects.equals(this.details, tgvalidatordTnParticipant.details) &&
        Objects.equals(this.blockConfirmations, tgvalidatordTnParticipant.blockConfirmations) &&
        Objects.equals(this.ownedSharedAddressesCount, tgvalidatordTnParticipant.ownedSharedAddressesCount) &&
        Objects.equals(this.targetedSharedAddressesCount, tgvalidatordTnParticipant.targetedSharedAddressesCount) &&
        Objects.equals(this.outgoingTotalPledgesValuationBaseCurrency, tgvalidatordTnParticipant.outgoingTotalPledgesValuationBaseCurrency) &&
        Objects.equals(this.incomingTotalPledgesValuationBaseCurrency, tgvalidatordTnParticipant.incomingTotalPledgesValuationBaseCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, legalAddress, country, logoBase64, publicKey, shield, originRegistrationDate, originDeletionDate, createdAt, updatedAt, details, blockConfirmations, ownedSharedAddressesCount, targetedSharedAddressesCount, outgoingTotalPledgesValuationBaseCurrency, incomingTotalPledgesValuationBaseCurrency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnParticipant {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    legalAddress: ").append(toIndentedString(legalAddress)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    logoBase64: ").append(toIndentedString(logoBase64)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    shield: ").append(toIndentedString(shield)).append("\n");
    sb.append("    originRegistrationDate: ").append(toIndentedString(originRegistrationDate)).append("\n");
    sb.append("    originDeletionDate: ").append(toIndentedString(originDeletionDate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    blockConfirmations: ").append(toIndentedString(blockConfirmations)).append("\n");
    sb.append("    ownedSharedAddressesCount: ").append(toIndentedString(ownedSharedAddressesCount)).append("\n");
    sb.append("    targetedSharedAddressesCount: ").append(toIndentedString(targetedSharedAddressesCount)).append("\n");
    sb.append("    outgoingTotalPledgesValuationBaseCurrency: ").append(toIndentedString(outgoingTotalPledgesValuationBaseCurrency)).append("\n");
    sb.append("    incomingTotalPledgesValuationBaseCurrency: ").append(toIndentedString(incomingTotalPledgesValuationBaseCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("legalAddress");
    openapiFields.add("country");
    openapiFields.add("logoBase64");
    openapiFields.add("publicKey");
    openapiFields.add("shield");
    openapiFields.add("originRegistrationDate");
    openapiFields.add("originDeletionDate");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("details");
    openapiFields.add("blockConfirmations");
    openapiFields.add("ownedSharedAddressesCount");
    openapiFields.add("targetedSharedAddressesCount");
    openapiFields.add("outgoingTotalPledgesValuationBaseCurrency");
    openapiFields.add("incomingTotalPledgesValuationBaseCurrency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnParticipant
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnParticipant.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnParticipant is not found in the empty JSON string", TgvalidatordTnParticipant.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnParticipant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnParticipant` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("legalAddress") != null && !jsonObj.get("legalAddress").isJsonNull()) && !jsonObj.get("legalAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalAddress").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("logoBase64") != null && !jsonObj.get("logoBase64").isJsonNull()) && !jsonObj.get("logoBase64").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoBase64` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoBase64").toString()));
      }
      if ((jsonObj.get("publicKey") != null && !jsonObj.get("publicKey").isJsonNull()) && !jsonObj.get("publicKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicKey").toString()));
      }
      if ((jsonObj.get("shield") != null && !jsonObj.get("shield").isJsonNull()) && !jsonObj.get("shield").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shield` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shield").toString()));
      }
      // validate the optional field `details`
      if (jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) {
        TgvalidatordTnParticipantDetails.validateJsonElement(jsonObj.get("details"));
      }
      if (jsonObj.get("blockConfirmations") != null && !jsonObj.get("blockConfirmations").isJsonNull()) {
        JsonArray jsonArrayblockConfirmations = jsonObj.getAsJsonArray("blockConfirmations");
        if (jsonArrayblockConfirmations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("blockConfirmations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `blockConfirmations` to be an array in the JSON string but got `%s`", jsonObj.get("blockConfirmations").toString()));
          }

          // validate the optional field `blockConfirmations` (array)
          for (int i = 0; i < jsonArrayblockConfirmations.size(); i++) {
            TgvalidatordBlockConfirmations.validateJsonElement(jsonArrayblockConfirmations.get(i));
          };
        }
      }
      if ((jsonObj.get("ownedSharedAddressesCount") != null && !jsonObj.get("ownedSharedAddressesCount").isJsonNull()) && !jsonObj.get("ownedSharedAddressesCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownedSharedAddressesCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownedSharedAddressesCount").toString()));
      }
      if ((jsonObj.get("targetedSharedAddressesCount") != null && !jsonObj.get("targetedSharedAddressesCount").isJsonNull()) && !jsonObj.get("targetedSharedAddressesCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetedSharedAddressesCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetedSharedAddressesCount").toString()));
      }
      if ((jsonObj.get("outgoingTotalPledgesValuationBaseCurrency") != null && !jsonObj.get("outgoingTotalPledgesValuationBaseCurrency").isJsonNull()) && !jsonObj.get("outgoingTotalPledgesValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outgoingTotalPledgesValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outgoingTotalPledgesValuationBaseCurrency").toString()));
      }
      if ((jsonObj.get("incomingTotalPledgesValuationBaseCurrency") != null && !jsonObj.get("incomingTotalPledgesValuationBaseCurrency").isJsonNull()) && !jsonObj.get("incomingTotalPledgesValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingTotalPledgesValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingTotalPledgesValuationBaseCurrency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnParticipant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnParticipant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnParticipant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnParticipant.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnParticipant>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnParticipant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnParticipant read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnParticipant given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnParticipant
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnParticipant
   */
  public static TgvalidatordTnParticipant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnParticipant.class);
  }

  /**
   * Convert an instance of TgvalidatordTnParticipant to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

