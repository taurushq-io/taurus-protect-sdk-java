/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCurrency;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordBusinessRule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordBusinessRule {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  private String walletId;

  public static final String SERIALIZED_NAME_RULE_KEY = "ruleKey";
  @SerializedName(SERIALIZED_NAME_RULE_KEY)
  private String ruleKey;

  public static final String SERIALIZED_NAME_RULE_VALUE = "ruleValue";
  @SerializedName(SERIALIZED_NAME_RULE_VALUE)
  private String ruleValue;

  public static final String SERIALIZED_NAME_RULE_GROUP = "ruleGroup";
  @SerializedName(SERIALIZED_NAME_RULE_GROUP)
  private String ruleGroup;

  public static final String SERIALIZED_NAME_RULE_DESCRIPTION = "ruleDescription";
  @SerializedName(SERIALIZED_NAME_RULE_DESCRIPTION)
  private String ruleDescription;

  public static final String SERIALIZED_NAME_RULE_VALIDATION = "ruleValidation";
  @SerializedName(SERIALIZED_NAME_RULE_VALIDATION)
  private String ruleValidation;

  public static final String SERIALIZED_NAME_ADDRESS_ID = "addressId";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ID)
  private String addressId;

  public static final String SERIALIZED_NAME_CURRENCY_INFO = "currencyInfo";
  @SerializedName(SERIALIZED_NAME_CURRENCY_INFO)
  private TgvalidatordCurrency currencyInfo;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entityType";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ENTITY_I_D = "entityID";
  @SerializedName(SERIALIZED_NAME_ENTITY_I_D)
  private String entityID;

  public TgvalidatordBusinessRule() {
  }

  public TgvalidatordBusinessRule id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordBusinessRule tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public TgvalidatordBusinessRule currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public TgvalidatordBusinessRule walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Deprecated. This field will be empty from v3.32. Use entityType and entityID instead.
   * @return walletId
   */
  @javax.annotation.Nullable
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }


  public TgvalidatordBusinessRule ruleKey(String ruleKey) {
    this.ruleKey = ruleKey;
    return this;
  }

  /**
   * Get ruleKey
   * @return ruleKey
   */
  @javax.annotation.Nullable
  public String getRuleKey() {
    return ruleKey;
  }

  public void setRuleKey(String ruleKey) {
    this.ruleKey = ruleKey;
  }


  public TgvalidatordBusinessRule ruleValue(String ruleValue) {
    this.ruleValue = ruleValue;
    return this;
  }

  /**
   * Get ruleValue
   * @return ruleValue
   */
  @javax.annotation.Nullable
  public String getRuleValue() {
    return ruleValue;
  }

  public void setRuleValue(String ruleValue) {
    this.ruleValue = ruleValue;
  }


  public TgvalidatordBusinessRule ruleGroup(String ruleGroup) {
    this.ruleGroup = ruleGroup;
    return this;
  }

  /**
   * Get ruleGroup
   * @return ruleGroup
   */
  @javax.annotation.Nullable
  public String getRuleGroup() {
    return ruleGroup;
  }

  public void setRuleGroup(String ruleGroup) {
    this.ruleGroup = ruleGroup;
  }


  public TgvalidatordBusinessRule ruleDescription(String ruleDescription) {
    this.ruleDescription = ruleDescription;
    return this;
  }

  /**
   * Get ruleDescription
   * @return ruleDescription
   */
  @javax.annotation.Nullable
  public String getRuleDescription() {
    return ruleDescription;
  }

  public void setRuleDescription(String ruleDescription) {
    this.ruleDescription = ruleDescription;
  }


  public TgvalidatordBusinessRule ruleValidation(String ruleValidation) {
    this.ruleValidation = ruleValidation;
    return this;
  }

  /**
   * Get ruleValidation
   * @return ruleValidation
   */
  @javax.annotation.Nullable
  public String getRuleValidation() {
    return ruleValidation;
  }

  public void setRuleValidation(String ruleValidation) {
    this.ruleValidation = ruleValidation;
  }


  public TgvalidatordBusinessRule addressId(String addressId) {
    this.addressId = addressId;
    return this;
  }

  /**
   * Deprecated. This field will be empty from v3.32. Use entityType and entityID instead.
   * @return addressId
   */
  @javax.annotation.Nullable
  public String getAddressId() {
    return addressId;
  }

  public void setAddressId(String addressId) {
    this.addressId = addressId;
  }


  public TgvalidatordBusinessRule currencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
    return this;
  }

  /**
   * Get currencyInfo
   * @return currencyInfo
   */
  @javax.annotation.Nullable
  public TgvalidatordCurrency getCurrencyInfo() {
    return currencyInfo;
  }

  public void setCurrencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
  }


  public TgvalidatordBusinessRule entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * entityType indicates what this rule applies to. This can be one of &#x60;global&#x60;, &#x60;currency&#x60;, &#x60;wallet&#x60;, &#x60;address&#x60;, &#x60;exchange&#x60;, &#x60;exchange_account&#x60;.
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public TgvalidatordBusinessRule entityID(String entityID) {
    this.entityID = entityID;
    return this;
  }

  /**
   * entityID is the identifier of the affected entity. For wallets, addresses, and currencies this is their ID. For exchanges this is the exchange label. This field is blank for global rules.
   * @return entityID
   */
  @javax.annotation.Nullable
  public String getEntityID() {
    return entityID;
  }

  public void setEntityID(String entityID) {
    this.entityID = entityID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordBusinessRule tgvalidatordBusinessRule = (TgvalidatordBusinessRule) o;
    return Objects.equals(this.id, tgvalidatordBusinessRule.id) &&
        Objects.equals(this.tenantId, tgvalidatordBusinessRule.tenantId) &&
        Objects.equals(this.currency, tgvalidatordBusinessRule.currency) &&
        Objects.equals(this.walletId, tgvalidatordBusinessRule.walletId) &&
        Objects.equals(this.ruleKey, tgvalidatordBusinessRule.ruleKey) &&
        Objects.equals(this.ruleValue, tgvalidatordBusinessRule.ruleValue) &&
        Objects.equals(this.ruleGroup, tgvalidatordBusinessRule.ruleGroup) &&
        Objects.equals(this.ruleDescription, tgvalidatordBusinessRule.ruleDescription) &&
        Objects.equals(this.ruleValidation, tgvalidatordBusinessRule.ruleValidation) &&
        Objects.equals(this.addressId, tgvalidatordBusinessRule.addressId) &&
        Objects.equals(this.currencyInfo, tgvalidatordBusinessRule.currencyInfo) &&
        Objects.equals(this.entityType, tgvalidatordBusinessRule.entityType) &&
        Objects.equals(this.entityID, tgvalidatordBusinessRule.entityID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, currency, walletId, ruleKey, ruleValue, ruleGroup, ruleDescription, ruleValidation, addressId, currencyInfo, entityType, entityID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordBusinessRule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    ruleKey: ").append(toIndentedString(ruleKey)).append("\n");
    sb.append("    ruleValue: ").append(toIndentedString(ruleValue)).append("\n");
    sb.append("    ruleGroup: ").append(toIndentedString(ruleGroup)).append("\n");
    sb.append("    ruleDescription: ").append(toIndentedString(ruleDescription)).append("\n");
    sb.append("    ruleValidation: ").append(toIndentedString(ruleValidation)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    currencyInfo: ").append(toIndentedString(currencyInfo)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityID: ").append(toIndentedString(entityID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tenantId");
    openapiFields.add("currency");
    openapiFields.add("walletId");
    openapiFields.add("ruleKey");
    openapiFields.add("ruleValue");
    openapiFields.add("ruleGroup");
    openapiFields.add("ruleDescription");
    openapiFields.add("ruleValidation");
    openapiFields.add("addressId");
    openapiFields.add("currencyInfo");
    openapiFields.add("entityType");
    openapiFields.add("entityID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordBusinessRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordBusinessRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordBusinessRule is not found in the empty JSON string", TgvalidatordBusinessRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordBusinessRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordBusinessRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("walletId") != null && !jsonObj.get("walletId").isJsonNull()) && !jsonObj.get("walletId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletId").toString()));
      }
      if ((jsonObj.get("ruleKey") != null && !jsonObj.get("ruleKey").isJsonNull()) && !jsonObj.get("ruleKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleKey").toString()));
      }
      if ((jsonObj.get("ruleValue") != null && !jsonObj.get("ruleValue").isJsonNull()) && !jsonObj.get("ruleValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleValue").toString()));
      }
      if ((jsonObj.get("ruleGroup") != null && !jsonObj.get("ruleGroup").isJsonNull()) && !jsonObj.get("ruleGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleGroup").toString()));
      }
      if ((jsonObj.get("ruleDescription") != null && !jsonObj.get("ruleDescription").isJsonNull()) && !jsonObj.get("ruleDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleDescription").toString()));
      }
      if ((jsonObj.get("ruleValidation") != null && !jsonObj.get("ruleValidation").isJsonNull()) && !jsonObj.get("ruleValidation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleValidation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleValidation").toString()));
      }
      if ((jsonObj.get("addressId") != null && !jsonObj.get("addressId").isJsonNull()) && !jsonObj.get("addressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressId").toString()));
      }
      // validate the optional field `currencyInfo`
      if (jsonObj.get("currencyInfo") != null && !jsonObj.get("currencyInfo").isJsonNull()) {
        TgvalidatordCurrency.validateJsonElement(jsonObj.get("currencyInfo"));
      }
      if ((jsonObj.get("entityType") != null && !jsonObj.get("entityType").isJsonNull()) && !jsonObj.get("entityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityType").toString()));
      }
      if ((jsonObj.get("entityID") != null && !jsonObj.get("entityID").isJsonNull()) && !jsonObj.get("entityID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordBusinessRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordBusinessRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordBusinessRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordBusinessRule.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordBusinessRule>() {
           @Override
           public void write(JsonWriter out, TgvalidatordBusinessRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordBusinessRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordBusinessRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordBusinessRule
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordBusinessRule
   */
  public static TgvalidatordBusinessRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordBusinessRule.class);
  }

  /**
   * Convert an instance of TgvalidatordBusinessRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

