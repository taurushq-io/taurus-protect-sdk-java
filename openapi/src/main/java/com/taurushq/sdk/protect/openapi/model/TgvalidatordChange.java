/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordChange
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordChange {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_CREATOR_ID = "creatorId";
  @SerializedName(SERIALIZED_NAME_CREATOR_ID)
  private String creatorId;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entityId";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private String entity;

  public static final String SERIALIZED_NAME_CHANGES = "changes";
  @SerializedName(SERIALIZED_NAME_CHANGES)
  private Map<String, String> changes = new HashMap<>();

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_ENTITY_U_U_I_D = "entityUUID";
  @SerializedName(SERIALIZED_NAME_ENTITY_U_U_I_D)
  private String entityUUID;

  public static final String SERIALIZED_NAME_CREATOR_EXTERNAL_ID = "creatorExternalId";
  @SerializedName(SERIALIZED_NAME_CREATOR_EXTERNAL_ID)
  private String creatorExternalId;

  public TgvalidatordChange() {
  }

  public TgvalidatordChange id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordChange tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public TgvalidatordChange creatorId(String creatorId) {
    this.creatorId = creatorId;
    return this;
  }

  /**
   * Get creatorId
   * @return creatorId
   */
  @javax.annotation.Nullable
  public String getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(String creatorId) {
    this.creatorId = creatorId;
  }


  public TgvalidatordChange action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Can be one of the following: create update delete resetpassword resettotp
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public TgvalidatordChange entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Get entityId
   * @return entityId
   */
  @javax.annotation.Nullable
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public TgvalidatordChange entity(String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * Can be one of the following: user group usergroup businessrule exchange price action feepayer securitydomain taurusnetworkparticipant
   * @return entity
   */
  @javax.annotation.Nullable
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }


  public TgvalidatordChange changes(Map<String, String> changes) {
    this.changes = changes;
    return this;
  }

  public TgvalidatordChange putChangesItem(String key, String changesItem) {
    if (this.changes == null) {
      this.changes = new HashMap<>();
    }
    this.changes.put(key, changesItem);
    return this;
  }

  /**
   * Get changes
   * @return changes
   */
  @javax.annotation.Nullable
  public Map<String, String> getChanges() {
    return changes;
  }

  public void setChanges(Map<String, String> changes) {
    this.changes = changes;
  }


  public TgvalidatordChange creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordChange comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * An optional comment about the change
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordChange entityUUID(String entityUUID) {
    this.entityUUID = entityUUID;
    return this;
  }

  /**
   * Identification for entities that use UUID
   * @return entityUUID
   */
  @javax.annotation.Nullable
  public String getEntityUUID() {
    return entityUUID;
  }

  public void setEntityUUID(String entityUUID) {
    this.entityUUID = entityUUID;
  }


  public TgvalidatordChange creatorExternalId(String creatorExternalId) {
    this.creatorExternalId = creatorExternalId;
    return this;
  }

  /**
   * The externalUserID of the user that created the change.
   * @return creatorExternalId
   */
  @javax.annotation.Nullable
  public String getCreatorExternalId() {
    return creatorExternalId;
  }

  public void setCreatorExternalId(String creatorExternalId) {
    this.creatorExternalId = creatorExternalId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordChange tgvalidatordChange = (TgvalidatordChange) o;
    return Objects.equals(this.id, tgvalidatordChange.id) &&
        Objects.equals(this.tenantId, tgvalidatordChange.tenantId) &&
        Objects.equals(this.creatorId, tgvalidatordChange.creatorId) &&
        Objects.equals(this.action, tgvalidatordChange.action) &&
        Objects.equals(this.entityId, tgvalidatordChange.entityId) &&
        Objects.equals(this.entity, tgvalidatordChange.entity) &&
        Objects.equals(this.changes, tgvalidatordChange.changes) &&
        Objects.equals(this.creationDate, tgvalidatordChange.creationDate) &&
        Objects.equals(this.comment, tgvalidatordChange.comment) &&
        Objects.equals(this.entityUUID, tgvalidatordChange.entityUUID) &&
        Objects.equals(this.creatorExternalId, tgvalidatordChange.creatorExternalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, creatorId, action, entityId, entity, changes, creationDate, comment, entityUUID, creatorExternalId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordChange {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    entityUUID: ").append(toIndentedString(entityUUID)).append("\n");
    sb.append("    creatorExternalId: ").append(toIndentedString(creatorExternalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tenantId");
    openapiFields.add("creatorId");
    openapiFields.add("action");
    openapiFields.add("entityId");
    openapiFields.add("entity");
    openapiFields.add("changes");
    openapiFields.add("creationDate");
    openapiFields.add("comment");
    openapiFields.add("entityUUID");
    openapiFields.add("creatorExternalId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordChange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordChange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordChange is not found in the empty JSON string", TgvalidatordChange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordChange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordChange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("creatorId") != null && !jsonObj.get("creatorId").isJsonNull()) && !jsonObj.get("creatorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creatorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creatorId").toString()));
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("entityId") != null && !jsonObj.get("entityId").isJsonNull()) && !jsonObj.get("entityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityId").toString()));
      }
      if ((jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) && !jsonObj.get("entity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("entityUUID") != null && !jsonObj.get("entityUUID").isJsonNull()) && !jsonObj.get("entityUUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityUUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityUUID").toString()));
      }
      if ((jsonObj.get("creatorExternalId") != null && !jsonObj.get("creatorExternalId").isJsonNull()) && !jsonObj.get("creatorExternalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creatorExternalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creatorExternalId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordChange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordChange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordChange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordChange.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordChange>() {
           @Override
           public void write(JsonWriter out, TgvalidatordChange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordChange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordChange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordChange
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordChange
   */
  public static TgvalidatordChange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordChange.class);
  }

  /**
   * Convert an instance of TgvalidatordChange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

