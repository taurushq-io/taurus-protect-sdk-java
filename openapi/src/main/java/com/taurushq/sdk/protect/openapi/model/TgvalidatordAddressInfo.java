/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordTransactionScore;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordAddressInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordAddressInfo {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_CONTAINER = "container";
  @SerializedName(SERIALIZED_NAME_CONTAINER)
  private String container;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_AMOUNT_MAIN_UNIT = "amountMainUnit";
  @SerializedName(SERIALIZED_NAME_AMOUNT_MAIN_UNIT)
  private String amountMainUnit;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_IDX = "idx";
  @SerializedName(SERIALIZED_NAME_IDX)
  private String idx;

  public static final String SERIALIZED_NAME_INTERNAL_ADDRESS_ID = "internalAddressId";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ADDRESS_ID)
  private String internalAddressId;

  public static final String SERIALIZED_NAME_WHITELISTED_ADDRESS_ID = "whitelistedAddressId";
  @SerializedName(SERIALIZED_NAME_WHITELISTED_ADDRESS_ID)
  private String whitelistedAddressId;

  public static final String SERIALIZED_NAME_SCORES = "scores";
  @SerializedName(SERIALIZED_NAME_SCORES)
  private List<TgvalidatordTransactionScore> scores = new ArrayList<>();

  public TgvalidatordAddressInfo() {
  }

  public TgvalidatordAddressInfo address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public TgvalidatordAddressInfo label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Label of the address if it is known to Taurus-PROTECT (i.e. if it&#39;s an internal or a whitelisted address)
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public TgvalidatordAddressInfo container(String container) {
    this.container = container;
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }


  public TgvalidatordAddressInfo customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * Get customerId
   * @return customerId
   */
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public TgvalidatordAddressInfo amount(String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Amount in the smallest currency unit, based on the currency decimals. Example: 1500000000000000000 WEI (smallest ETH unit) corresponds to 1.5 ETH (ETH has 18 decimals places)
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }


  public TgvalidatordAddressInfo amountMainUnit(String amountMainUnit) {
    this.amountMainUnit = amountMainUnit;
    return this;
  }

  /**
   * Get amountMainUnit
   * @return amountMainUnit
   */
  @javax.annotation.Nullable
  public String getAmountMainUnit() {
    return amountMainUnit;
  }

  public void setAmountMainUnit(String amountMainUnit) {
    this.amountMainUnit = amountMainUnit;
  }


  public TgvalidatordAddressInfo type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the transaction element (one of source or destination)
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public TgvalidatordAddressInfo idx(String idx) {
    this.idx = idx;
    return this;
  }

  /**
   * Get idx
   * @return idx
   */
  @javax.annotation.Nullable
  public String getIdx() {
    return idx;
  }

  public void setIdx(String idx) {
    this.idx = idx;
  }


  public TgvalidatordAddressInfo internalAddressId(String internalAddressId) {
    this.internalAddressId = internalAddressId;
    return this;
  }

  /**
   * ID of the internal address, if the address is an internal one. Otherwise this field is left empty (or 0)
   * @return internalAddressId
   */
  @javax.annotation.Nullable
  public String getInternalAddressId() {
    return internalAddressId;
  }

  public void setInternalAddressId(String internalAddressId) {
    this.internalAddressId = internalAddressId;
  }


  public TgvalidatordAddressInfo whitelistedAddressId(String whitelistedAddressId) {
    this.whitelistedAddressId = whitelistedAddressId;
    return this;
  }

  /**
   * ID of the whitelisted address, if the address is an whitelisted one. Otherwise this field is left empty (or 0)
   * @return whitelistedAddressId
   */
  @javax.annotation.Nullable
  public String getWhitelistedAddressId() {
    return whitelistedAddressId;
  }

  public void setWhitelistedAddressId(String whitelistedAddressId) {
    this.whitelistedAddressId = whitelistedAddressId;
  }


  public TgvalidatordAddressInfo scores(List<TgvalidatordTransactionScore> scores) {
    this.scores = scores;
    return this;
  }

  public TgvalidatordAddressInfo addScoresItem(TgvalidatordTransactionScore scoresItem) {
    if (this.scores == null) {
      this.scores = new ArrayList<>();
    }
    this.scores.add(scoresItem);
    return this;
  }

  /**
   * Transaction scores related to this address (only for destinations). Up to one score per [KYT provider, score type].
   * @return scores
   */
  @javax.annotation.Nullable
  public List<TgvalidatordTransactionScore> getScores() {
    return scores;
  }

  public void setScores(List<TgvalidatordTransactionScore> scores) {
    this.scores = scores;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordAddressInfo tgvalidatordAddressInfo = (TgvalidatordAddressInfo) o;
    return Objects.equals(this.address, tgvalidatordAddressInfo.address) &&
        Objects.equals(this.label, tgvalidatordAddressInfo.label) &&
        Objects.equals(this.container, tgvalidatordAddressInfo.container) &&
        Objects.equals(this.customerId, tgvalidatordAddressInfo.customerId) &&
        Objects.equals(this.amount, tgvalidatordAddressInfo.amount) &&
        Objects.equals(this.amountMainUnit, tgvalidatordAddressInfo.amountMainUnit) &&
        Objects.equals(this.type, tgvalidatordAddressInfo.type) &&
        Objects.equals(this.idx, tgvalidatordAddressInfo.idx) &&
        Objects.equals(this.internalAddressId, tgvalidatordAddressInfo.internalAddressId) &&
        Objects.equals(this.whitelistedAddressId, tgvalidatordAddressInfo.whitelistedAddressId) &&
        Objects.equals(this.scores, tgvalidatordAddressInfo.scores);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, label, container, customerId, amount, amountMainUnit, type, idx, internalAddressId, whitelistedAddressId, scores);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordAddressInfo {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountMainUnit: ").append(toIndentedString(amountMainUnit)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    idx: ").append(toIndentedString(idx)).append("\n");
    sb.append("    internalAddressId: ").append(toIndentedString(internalAddressId)).append("\n");
    sb.append("    whitelistedAddressId: ").append(toIndentedString(whitelistedAddressId)).append("\n");
    sb.append("    scores: ").append(toIndentedString(scores)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("label");
    openapiFields.add("container");
    openapiFields.add("customerId");
    openapiFields.add("amount");
    openapiFields.add("amountMainUnit");
    openapiFields.add("type");
    openapiFields.add("idx");
    openapiFields.add("internalAddressId");
    openapiFields.add("whitelistedAddressId");
    openapiFields.add("scores");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordAddressInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordAddressInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordAddressInfo is not found in the empty JSON string", TgvalidatordAddressInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordAddressInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordAddressInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("container") != null && !jsonObj.get("container").isJsonNull()) && !jsonObj.get("container").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `container` to be a primitive type in the JSON string but got `%s`", jsonObj.get("container").toString()));
      }
      if ((jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull()) && !jsonObj.get("customerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("amountMainUnit") != null && !jsonObj.get("amountMainUnit").isJsonNull()) && !jsonObj.get("amountMainUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amountMainUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amountMainUnit").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("idx") != null && !jsonObj.get("idx").isJsonNull()) && !jsonObj.get("idx").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idx` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idx").toString()));
      }
      if ((jsonObj.get("internalAddressId") != null && !jsonObj.get("internalAddressId").isJsonNull()) && !jsonObj.get("internalAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalAddressId").toString()));
      }
      if ((jsonObj.get("whitelistedAddressId") != null && !jsonObj.get("whitelistedAddressId").isJsonNull()) && !jsonObj.get("whitelistedAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `whitelistedAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("whitelistedAddressId").toString()));
      }
      if (jsonObj.get("scores") != null && !jsonObj.get("scores").isJsonNull()) {
        JsonArray jsonArrayscores = jsonObj.getAsJsonArray("scores");
        if (jsonArrayscores != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scores").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scores` to be an array in the JSON string but got `%s`", jsonObj.get("scores").toString()));
          }

          // validate the optional field `scores` (array)
          for (int i = 0; i < jsonArrayscores.size(); i++) {
            TgvalidatordTransactionScore.validateJsonElement(jsonArrayscores.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordAddressInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordAddressInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordAddressInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordAddressInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordAddressInfo>() {
           @Override
           public void write(JsonWriter out, TgvalidatordAddressInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordAddressInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordAddressInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordAddressInfo
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordAddressInfo
   */
  public static TgvalidatordAddressInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordAddressInfo.class);
  }

  /**
   * Convert an instance of TgvalidatordAddressInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

