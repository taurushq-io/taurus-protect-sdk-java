/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnPledgeTrail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnPledgeTrail {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PLEDGE_I_D = "pledgeID";
  @SerializedName(SERIALIZED_NAME_PLEDGE_I_D)
  private String pledgeID;

  public static final String SERIALIZED_NAME_ADDRESS_COMMAND_I_D = "addressCommandID";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COMMAND_I_D)
  private String addressCommandID;

  public static final String SERIALIZED_NAME_PARTICIPANT_I_D = "participantID";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_I_D)
  private String participantID;

  public static final String SERIALIZED_NAME_PLEDGE_AMOUNT = "pledgeAmount";
  @SerializedName(SERIALIZED_NAME_PLEDGE_AMOUNT)
  private String pledgeAmount;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public TgvalidatordTnPledgeTrail() {
  }

  public TgvalidatordTnPledgeTrail id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordTnPledgeTrail pledgeID(String pledgeID) {
    this.pledgeID = pledgeID;
    return this;
  }

  /**
   * Get pledgeID
   * @return pledgeID
   */
  @javax.annotation.Nullable
  public String getPledgeID() {
    return pledgeID;
  }

  public void setPledgeID(String pledgeID) {
    this.pledgeID = pledgeID;
  }


  public TgvalidatordTnPledgeTrail addressCommandID(String addressCommandID) {
    this.addressCommandID = addressCommandID;
    return this;
  }

  /**
   * Get addressCommandID
   * @return addressCommandID
   */
  @javax.annotation.Nullable
  public String getAddressCommandID() {
    return addressCommandID;
  }

  public void setAddressCommandID(String addressCommandID) {
    this.addressCommandID = addressCommandID;
  }


  public TgvalidatordTnPledgeTrail participantID(String participantID) {
    this.participantID = participantID;
    return this;
  }

  /**
   * Get participantID
   * @return participantID
   */
  @javax.annotation.Nullable
  public String getParticipantID() {
    return participantID;
  }

  public void setParticipantID(String participantID) {
    this.participantID = participantID;
  }


  public TgvalidatordTnPledgeTrail pledgeAmount(String pledgeAmount) {
    this.pledgeAmount = pledgeAmount;
    return this;
  }

  /**
   * Get pledgeAmount
   * @return pledgeAmount
   */
  @javax.annotation.Nullable
  public String getPledgeAmount() {
    return pledgeAmount;
  }

  public void setPledgeAmount(String pledgeAmount) {
    this.pledgeAmount = pledgeAmount;
  }


  public TgvalidatordTnPledgeTrail action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public TgvalidatordTnPledgeTrail comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordTnPledgeTrail createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnPledgeTrail tgvalidatordTnPledgeTrail = (TgvalidatordTnPledgeTrail) o;
    return Objects.equals(this.id, tgvalidatordTnPledgeTrail.id) &&
        Objects.equals(this.pledgeID, tgvalidatordTnPledgeTrail.pledgeID) &&
        Objects.equals(this.addressCommandID, tgvalidatordTnPledgeTrail.addressCommandID) &&
        Objects.equals(this.participantID, tgvalidatordTnPledgeTrail.participantID) &&
        Objects.equals(this.pledgeAmount, tgvalidatordTnPledgeTrail.pledgeAmount) &&
        Objects.equals(this.action, tgvalidatordTnPledgeTrail.action) &&
        Objects.equals(this.comment, tgvalidatordTnPledgeTrail.comment) &&
        Objects.equals(this.createdAt, tgvalidatordTnPledgeTrail.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, pledgeID, addressCommandID, participantID, pledgeAmount, action, comment, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnPledgeTrail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pledgeID: ").append(toIndentedString(pledgeID)).append("\n");
    sb.append("    addressCommandID: ").append(toIndentedString(addressCommandID)).append("\n");
    sb.append("    participantID: ").append(toIndentedString(participantID)).append("\n");
    sb.append("    pledgeAmount: ").append(toIndentedString(pledgeAmount)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("pledgeID");
    openapiFields.add("addressCommandID");
    openapiFields.add("participantID");
    openapiFields.add("pledgeAmount");
    openapiFields.add("action");
    openapiFields.add("comment");
    openapiFields.add("createdAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnPledgeTrail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnPledgeTrail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnPledgeTrail is not found in the empty JSON string", TgvalidatordTnPledgeTrail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnPledgeTrail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnPledgeTrail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("pledgeID") != null && !jsonObj.get("pledgeID").isJsonNull()) && !jsonObj.get("pledgeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pledgeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pledgeID").toString()));
      }
      if ((jsonObj.get("addressCommandID") != null && !jsonObj.get("addressCommandID").isJsonNull()) && !jsonObj.get("addressCommandID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCommandID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCommandID").toString()));
      }
      if ((jsonObj.get("participantID") != null && !jsonObj.get("participantID").isJsonNull()) && !jsonObj.get("participantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `participantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("participantID").toString()));
      }
      if ((jsonObj.get("pledgeAmount") != null && !jsonObj.get("pledgeAmount").isJsonNull()) && !jsonObj.get("pledgeAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pledgeAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pledgeAmount").toString()));
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnPledgeTrail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnPledgeTrail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnPledgeTrail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnPledgeTrail.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnPledgeTrail>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnPledgeTrail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnPledgeTrail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnPledgeTrail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnPledgeTrail
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnPledgeTrail
   */
  public static TgvalidatordTnPledgeTrail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnPledgeTrail.class);
  }

  /**
   * Convert an instance of TgvalidatordTnPledgeTrail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

