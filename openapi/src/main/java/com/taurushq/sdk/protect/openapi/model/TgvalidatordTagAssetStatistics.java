/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCurrency;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTagAssetStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTagAssetStatistics {
  public static final String SERIALIZED_NAME_TAG_I_D = "tagID";
  @SerializedName(SERIALIZED_NAME_TAG_I_D)
  private String tagID;

  public static final String SERIALIZED_NAME_CURRENCY_I_D = "currencyID";
  @SerializedName(SERIALIZED_NAME_CURRENCY_I_D)
  private String currencyID;

  public static final String SERIALIZED_NAME_TOTAL_BALANCE = "totalBalance";
  @SerializedName(SERIALIZED_NAME_TOTAL_BALANCE)
  private String totalBalance;

  public static final String SERIALIZED_NAME_TOTAL_BALANCE_VALUATION = "totalBalanceValuation";
  @SerializedName(SERIALIZED_NAME_TOTAL_BALANCE_VALUATION)
  private String totalBalanceValuation;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_CURRENCY_INFO = "currencyInfo";
  @SerializedName(SERIALIZED_NAME_CURRENCY_INFO)
  private TgvalidatordCurrency currencyInfo;

  public TgvalidatordTagAssetStatistics() {
  }

  public TgvalidatordTagAssetStatistics tagID(String tagID) {
    this.tagID = tagID;
    return this;
  }

  /**
   * Get tagID
   * @return tagID
   */
  @javax.annotation.Nullable
  public String getTagID() {
    return tagID;
  }

  public void setTagID(String tagID) {
    this.tagID = tagID;
  }


  public TgvalidatordTagAssetStatistics currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

  /**
   * Get currencyID
   * @return currencyID
   */
  @javax.annotation.Nullable
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }


  public TgvalidatordTagAssetStatistics totalBalance(String totalBalance) {
    this.totalBalance = totalBalance;
    return this;
  }

  /**
   * Balance in the smallest currency unit, based on the currency decimals. Example: 1500000000000000000 WEI (smallest ETH unit) corresponds to 1.5 ETH (ETH has 18 decimals places)
   * @return totalBalance
   */
  @javax.annotation.Nullable
  public String getTotalBalance() {
    return totalBalance;
  }

  public void setTotalBalance(String totalBalance) {
    this.totalBalance = totalBalance;
  }


  public TgvalidatordTagAssetStatistics totalBalanceValuation(String totalBalanceValuation) {
    this.totalBalanceValuation = totalBalanceValuation;
    return this;
  }

  /**
   * Valuation in the base currency main unit (CHF, EUR, USD etc...)
   * @return totalBalanceValuation
   */
  @javax.annotation.Nullable
  public String getTotalBalanceValuation() {
    return totalBalanceValuation;
  }

  public void setTotalBalanceValuation(String totalBalanceValuation) {
    this.totalBalanceValuation = totalBalanceValuation;
  }


  public TgvalidatordTagAssetStatistics creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordTagAssetStatistics currencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
    return this;
  }

  /**
   * Get currencyInfo
   * @return currencyInfo
   */
  @javax.annotation.Nullable
  public TgvalidatordCurrency getCurrencyInfo() {
    return currencyInfo;
  }

  public void setCurrencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTagAssetStatistics tgvalidatordTagAssetStatistics = (TgvalidatordTagAssetStatistics) o;
    return Objects.equals(this.tagID, tgvalidatordTagAssetStatistics.tagID) &&
        Objects.equals(this.currencyID, tgvalidatordTagAssetStatistics.currencyID) &&
        Objects.equals(this.totalBalance, tgvalidatordTagAssetStatistics.totalBalance) &&
        Objects.equals(this.totalBalanceValuation, tgvalidatordTagAssetStatistics.totalBalanceValuation) &&
        Objects.equals(this.creationDate, tgvalidatordTagAssetStatistics.creationDate) &&
        Objects.equals(this.currencyInfo, tgvalidatordTagAssetStatistics.currencyInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tagID, currencyID, totalBalance, totalBalanceValuation, creationDate, currencyInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTagAssetStatistics {\n");
    sb.append("    tagID: ").append(toIndentedString(tagID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    totalBalance: ").append(toIndentedString(totalBalance)).append("\n");
    sb.append("    totalBalanceValuation: ").append(toIndentedString(totalBalanceValuation)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    currencyInfo: ").append(toIndentedString(currencyInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tagID");
    openapiFields.add("currencyID");
    openapiFields.add("totalBalance");
    openapiFields.add("totalBalanceValuation");
    openapiFields.add("creationDate");
    openapiFields.add("currencyInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTagAssetStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTagAssetStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTagAssetStatistics is not found in the empty JSON string", TgvalidatordTagAssetStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTagAssetStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTagAssetStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("tagID") != null && !jsonObj.get("tagID").isJsonNull()) && !jsonObj.get("tagID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tagID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tagID").toString()));
      }
      if ((jsonObj.get("currencyID") != null && !jsonObj.get("currencyID").isJsonNull()) && !jsonObj.get("currencyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyID").toString()));
      }
      if ((jsonObj.get("totalBalance") != null && !jsonObj.get("totalBalance").isJsonNull()) && !jsonObj.get("totalBalance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalBalance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalBalance").toString()));
      }
      if ((jsonObj.get("totalBalanceValuation") != null && !jsonObj.get("totalBalanceValuation").isJsonNull()) && !jsonObj.get("totalBalanceValuation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalBalanceValuation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalBalanceValuation").toString()));
      }
      // validate the optional field `currencyInfo`
      if (jsonObj.get("currencyInfo") != null && !jsonObj.get("currencyInfo").isJsonNull()) {
        TgvalidatordCurrency.validateJsonElement(jsonObj.get("currencyInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTagAssetStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTagAssetStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTagAssetStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTagAssetStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTagAssetStatistics>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTagAssetStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTagAssetStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTagAssetStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTagAssetStatistics
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTagAssetStatistics
   */
  public static TgvalidatordTagAssetStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTagAssetStatistics.class);
  }

  /**
   * Convert an instance of TgvalidatordTagAssetStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

