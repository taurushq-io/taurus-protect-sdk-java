/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordProofOfReserve;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordSignedProofOfOwnershipPayload;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordProofOfOwnership
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordProofOfOwnership {
  public static final String SERIALIZED_NAME_SIGNED_PAYLOAD = "signedPayload";
  @SerializedName(SERIALIZED_NAME_SIGNED_PAYLOAD)
  private TgvalidatordSignedProofOfOwnershipPayload signedPayload;

  public static final String SERIALIZED_NAME_SIGNED_PAYLOAD_HASH = "signedPayloadHash";
  @SerializedName(SERIALIZED_NAME_SIGNED_PAYLOAD_HASH)
  private String signedPayloadHash;

  public static final String SERIALIZED_NAME_PROOF_OF_RESERVE = "proofOfReserve";
  @SerializedName(SERIALIZED_NAME_PROOF_OF_RESERVE)
  private TgvalidatordProofOfReserve proofOfReserve;

  public static final String SERIALIZED_NAME_SIGNED_PAYLOAD_AS_STRING = "signedPayloadAsString";
  @SerializedName(SERIALIZED_NAME_SIGNED_PAYLOAD_AS_STRING)
  private String signedPayloadAsString;

  public TgvalidatordProofOfOwnership() {
  }

  public TgvalidatordProofOfOwnership signedPayload(TgvalidatordSignedProofOfOwnershipPayload signedPayload) {
    this.signedPayload = signedPayload;
    return this;
  }

  /**
   * Get signedPayload
   * @return signedPayload
   */
  @javax.annotation.Nullable
  public TgvalidatordSignedProofOfOwnershipPayload getSignedPayload() {
    return signedPayload;
  }

  public void setSignedPayload(TgvalidatordSignedProofOfOwnershipPayload signedPayload) {
    this.signedPayload = signedPayload;
  }


  public TgvalidatordProofOfOwnership signedPayloadHash(String signedPayloadHash) {
    this.signedPayloadHash = signedPayloadHash;
    return this;
  }

  /**
   * The hex encoded SHA256 hash of the payload. The SHA256 hash is sliced to take the first 30 bytes out of 32. The total length after hex encoding is 60 characters. This hash will be provided to the proof of reserve challenge concatenated with a &#39;TN-&#39; Taurus Network domain prefix.
   * @return signedPayloadHash
   */
  @javax.annotation.Nullable
  public String getSignedPayloadHash() {
    return signedPayloadHash;
  }

  public void setSignedPayloadHash(String signedPayloadHash) {
    this.signedPayloadHash = signedPayloadHash;
  }


  public TgvalidatordProofOfOwnership proofOfReserve(TgvalidatordProofOfReserve proofOfReserve) {
    this.proofOfReserve = proofOfReserve;
    return this;
  }

  /**
   * Get proofOfReserve
   * @return proofOfReserve
   */
  @javax.annotation.Nullable
  public TgvalidatordProofOfReserve getProofOfReserve() {
    return proofOfReserve;
  }

  public void setProofOfReserve(TgvalidatordProofOfReserve proofOfReserve) {
    this.proofOfReserve = proofOfReserve;
  }


  public TgvalidatordProofOfOwnership signedPayloadAsString(String signedPayloadAsString) {
    this.signedPayloadAsString = signedPayloadAsString;
    return this;
  }

  /**
   * The signed payload as a string. This field is used to to obtain the hash.
   * @return signedPayloadAsString
   */
  @javax.annotation.Nullable
  public String getSignedPayloadAsString() {
    return signedPayloadAsString;
  }

  public void setSignedPayloadAsString(String signedPayloadAsString) {
    this.signedPayloadAsString = signedPayloadAsString;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordProofOfOwnership tgvalidatordProofOfOwnership = (TgvalidatordProofOfOwnership) o;
    return Objects.equals(this.signedPayload, tgvalidatordProofOfOwnership.signedPayload) &&
        Objects.equals(this.signedPayloadHash, tgvalidatordProofOfOwnership.signedPayloadHash) &&
        Objects.equals(this.proofOfReserve, tgvalidatordProofOfOwnership.proofOfReserve) &&
        Objects.equals(this.signedPayloadAsString, tgvalidatordProofOfOwnership.signedPayloadAsString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signedPayload, signedPayloadHash, proofOfReserve, signedPayloadAsString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordProofOfOwnership {\n");
    sb.append("    signedPayload: ").append(toIndentedString(signedPayload)).append("\n");
    sb.append("    signedPayloadHash: ").append(toIndentedString(signedPayloadHash)).append("\n");
    sb.append("    proofOfReserve: ").append(toIndentedString(proofOfReserve)).append("\n");
    sb.append("    signedPayloadAsString: ").append(toIndentedString(signedPayloadAsString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("signedPayload");
    openapiFields.add("signedPayloadHash");
    openapiFields.add("proofOfReserve");
    openapiFields.add("signedPayloadAsString");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordProofOfOwnership
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordProofOfOwnership.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordProofOfOwnership is not found in the empty JSON string", TgvalidatordProofOfOwnership.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordProofOfOwnership.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordProofOfOwnership` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `signedPayload`
      if (jsonObj.get("signedPayload") != null && !jsonObj.get("signedPayload").isJsonNull()) {
        TgvalidatordSignedProofOfOwnershipPayload.validateJsonElement(jsonObj.get("signedPayload"));
      }
      if ((jsonObj.get("signedPayloadHash") != null && !jsonObj.get("signedPayloadHash").isJsonNull()) && !jsonObj.get("signedPayloadHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signedPayloadHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signedPayloadHash").toString()));
      }
      // validate the optional field `proofOfReserve`
      if (jsonObj.get("proofOfReserve") != null && !jsonObj.get("proofOfReserve").isJsonNull()) {
        TgvalidatordProofOfReserve.validateJsonElement(jsonObj.get("proofOfReserve"));
      }
      if ((jsonObj.get("signedPayloadAsString") != null && !jsonObj.get("signedPayloadAsString").isJsonNull()) && !jsonObj.get("signedPayloadAsString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signedPayloadAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signedPayloadAsString").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordProofOfOwnership.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordProofOfOwnership' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordProofOfOwnership> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordProofOfOwnership.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordProofOfOwnership>() {
           @Override
           public void write(JsonWriter out, TgvalidatordProofOfOwnership value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordProofOfOwnership read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordProofOfOwnership given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordProofOfOwnership
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordProofOfOwnership
   */
  public static TgvalidatordProofOfOwnership fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordProofOfOwnership.class);
  }

  /**
   * Convert an instance of TgvalidatordProofOfOwnership to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

