/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.CosmosMessageValueArray;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCosmosMessageValue;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCosmosMessageValueDestination;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCosmosMessageValueSource;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * CosmosMessageValueValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class CosmosMessageValueValue {
  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private TgvalidatordCosmosMessageValueSource source;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private TgvalidatordCosmosMessageValueDestination destination;

  public static final String SERIALIZED_NAME_STRING = "string";
  @SerializedName(SERIALIZED_NAME_STRING)
  private String string;

  public static final String SERIALIZED_NAME_INT = "int";
  @SerializedName(SERIALIZED_NAME_INT)
  private String _int;

  public static final String SERIALIZED_NAME_BYTES = "bytes";
  @SerializedName(SERIALIZED_NAME_BYTES)
  private byte[] bytes;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private List<TgvalidatordCosmosMessageValue> message = new ArrayList<>();

  public static final String SERIALIZED_NAME_ARRAY = "array";
  @SerializedName(SERIALIZED_NAME_ARRAY)
  private CosmosMessageValueArray array;

  public CosmosMessageValueValue() {
  }

  public CosmosMessageValueValue source(TgvalidatordCosmosMessageValueSource source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public TgvalidatordCosmosMessageValueSource getSource() {
    return source;
  }

  public void setSource(TgvalidatordCosmosMessageValueSource source) {
    this.source = source;
  }


  public CosmosMessageValueValue destination(TgvalidatordCosmosMessageValueDestination destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public TgvalidatordCosmosMessageValueDestination getDestination() {
    return destination;
  }

  public void setDestination(TgvalidatordCosmosMessageValueDestination destination) {
    this.destination = destination;
  }


  public CosmosMessageValueValue string(String string) {
    this.string = string;
    return this;
  }

  /**
   * Get string
   * @return string
   */
  @javax.annotation.Nullable
  public String getString() {
    return string;
  }

  public void setString(String string) {
    this.string = string;
  }


  public CosmosMessageValueValue _int(String _int) {
    this._int = _int;
    return this;
  }

  /**
   * Get _int
   * @return _int
   */
  @javax.annotation.Nullable
  public String getInt() {
    return _int;
  }

  public void setInt(String _int) {
    this._int = _int;
  }


  public CosmosMessageValueValue bytes(byte[] bytes) {
    this.bytes = bytes;
    return this;
  }

  /**
   * Get bytes
   * @return bytes
   */
  @javax.annotation.Nullable
  public byte[] getBytes() {
    return bytes;
  }

  public void setBytes(byte[] bytes) {
    this.bytes = bytes;
  }


  public CosmosMessageValueValue message(List<TgvalidatordCosmosMessageValue> message) {
    this.message = message;
    return this;
  }

  public CosmosMessageValueValue addMessageItem(TgvalidatordCosmosMessageValue messageItem) {
    if (this.message == null) {
      this.message = new ArrayList<>();
    }
    this.message.add(messageItem);
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public List<TgvalidatordCosmosMessageValue> getMessage() {
    return message;
  }

  public void setMessage(List<TgvalidatordCosmosMessageValue> message) {
    this.message = message;
  }


  public CosmosMessageValueValue array(CosmosMessageValueArray array) {
    this.array = array;
    return this;
  }

  /**
   * Get array
   * @return array
   */
  @javax.annotation.Nullable
  public CosmosMessageValueArray getArray() {
    return array;
  }

  public void setArray(CosmosMessageValueArray array) {
    this.array = array;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CosmosMessageValueValue cosmosMessageValueValue = (CosmosMessageValueValue) o;
    return Objects.equals(this.source, cosmosMessageValueValue.source) &&
        Objects.equals(this.destination, cosmosMessageValueValue.destination) &&
        Objects.equals(this.string, cosmosMessageValueValue.string) &&
        Objects.equals(this._int, cosmosMessageValueValue._int) &&
        Arrays.equals(this.bytes, cosmosMessageValueValue.bytes) &&
        Objects.equals(this.message, cosmosMessageValueValue.message) &&
        Objects.equals(this.array, cosmosMessageValueValue.array);
  }

  @Override
  public int hashCode() {
    return Objects.hash(source, destination, string, _int, Arrays.hashCode(bytes), message, array);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CosmosMessageValueValue {\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    string: ").append(toIndentedString(string)).append("\n");
    sb.append("    _int: ").append(toIndentedString(_int)).append("\n");
    sb.append("    bytes: ").append(toIndentedString(bytes)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    array: ").append(toIndentedString(array)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("source");
    openapiFields.add("destination");
    openapiFields.add("string");
    openapiFields.add("int");
    openapiFields.add("bytes");
    openapiFields.add("message");
    openapiFields.add("array");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CosmosMessageValueValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CosmosMessageValueValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CosmosMessageValueValue is not found in the empty JSON string", CosmosMessageValueValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CosmosMessageValueValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CosmosMessageValueValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        TgvalidatordCosmosMessageValueSource.validateJsonElement(jsonObj.get("source"));
      }
      // validate the optional field `destination`
      if (jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) {
        TgvalidatordCosmosMessageValueDestination.validateJsonElement(jsonObj.get("destination"));
      }
      if ((jsonObj.get("string") != null && !jsonObj.get("string").isJsonNull()) && !jsonObj.get("string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("string").toString()));
      }
      if ((jsonObj.get("int") != null && !jsonObj.get("int").isJsonNull()) && !jsonObj.get("int").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `int` to be a primitive type in the JSON string but got `%s`", jsonObj.get("int").toString()));
      }
      if (jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) {
        JsonArray jsonArraymessage = jsonObj.getAsJsonArray("message");
        if (jsonArraymessage != null) {
          // ensure the json data is an array
          if (!jsonObj.get("message").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `message` to be an array in the JSON string but got `%s`", jsonObj.get("message").toString()));
          }

          // validate the optional field `message` (array)
          for (int i = 0; i < jsonArraymessage.size(); i++) {
            TgvalidatordCosmosMessageValue.validateJsonElement(jsonArraymessage.get(i));
          };
        }
      }
      // validate the optional field `array`
      if (jsonObj.get("array") != null && !jsonObj.get("array").isJsonNull()) {
        CosmosMessageValueArray.validateJsonElement(jsonObj.get("array"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CosmosMessageValueValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CosmosMessageValueValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CosmosMessageValueValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CosmosMessageValueValue.class));

       return (TypeAdapter<T>) new TypeAdapter<CosmosMessageValueValue>() {
           @Override
           public void write(JsonWriter out, CosmosMessageValueValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CosmosMessageValueValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CosmosMessageValueValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CosmosMessageValueValue
   * @throws IOException if the JSON string is invalid with respect to CosmosMessageValueValue
   */
  public static CosmosMessageValueValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CosmosMessageValueValue.class);
  }

  /**
   * Convert an instance of CosmosMessageValueValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

