/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.RequestSignedRequest;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordApprovers;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCurrency;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordMetadata;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRequestAttribute;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRequestTrail;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordRequest {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_ENVELOPE = "envelope";
  @SerializedName(SERIALIZED_NAME_ENVELOPE)
  private String envelope;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TRAILS = "trails";
  @SerializedName(SERIALIZED_NAME_TRAILS)
  private List<TgvalidatordRequestTrail> trails = new ArrayList<>();

  public static final String SERIALIZED_NAME_SIGNED_REQUESTS = "signedRequests";
  @SerializedName(SERIALIZED_NAME_SIGNED_REQUESTS)
  private List<RequestSignedRequest> signedRequests = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private TgvalidatordMetadata metadata;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<TgvalidatordRequestAttribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_RULE = "rule";
  @SerializedName(SERIALIZED_NAME_RULE)
  private String rule;

  public static final String SERIALIZED_NAME_APPROVERS = "approvers";
  @SerializedName(SERIALIZED_NAME_APPROVERS)
  private TgvalidatordApprovers approvers;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_CURRENCY_INFO = "currencyInfo";
  @SerializedName(SERIALIZED_NAME_CURRENCY_INFO)
  private TgvalidatordCurrency currencyInfo;

  public static final String SERIALIZED_NAME_NEEDS_APPROVAL_FROM = "needsApprovalFrom";
  @SerializedName(SERIALIZED_NAME_NEEDS_APPROVAL_FROM)
  private List<String> needsApprovalFrom = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUEST_BUNDLE_ID = "requestBundleId";
  @SerializedName(SERIALIZED_NAME_REQUEST_BUNDLE_ID)
  private String requestBundleId;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUEST_ID = "externalRequestId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUEST_ID)
  private String externalRequestId;

  public TgvalidatordRequest() {
  }

  public TgvalidatordRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordRequest tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public TgvalidatordRequest currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public TgvalidatordRequest envelope(String envelope) {
    this.envelope = envelope;
    return this;
  }

  /**
   * Get envelope
   * @return envelope
   */
  @javax.annotation.Nullable
  public String getEnvelope() {
    return envelope;
  }

  public void setEnvelope(String envelope) {
    this.envelope = envelope;
  }


  public TgvalidatordRequest status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordRequest trails(List<TgvalidatordRequestTrail> trails) {
    this.trails = trails;
    return this;
  }

  public TgvalidatordRequest addTrailsItem(TgvalidatordRequestTrail trailsItem) {
    if (this.trails == null) {
      this.trails = new ArrayList<>();
    }
    this.trails.add(trailsItem);
    return this;
  }

  /**
   * Get trails
   * @return trails
   */
  @javax.annotation.Nullable
  public List<TgvalidatordRequestTrail> getTrails() {
    return trails;
  }

  public void setTrails(List<TgvalidatordRequestTrail> trails) {
    this.trails = trails;
  }


  public TgvalidatordRequest signedRequests(List<RequestSignedRequest> signedRequests) {
    this.signedRequests = signedRequests;
    return this;
  }

  public TgvalidatordRequest addSignedRequestsItem(RequestSignedRequest signedRequestsItem) {
    if (this.signedRequests == null) {
      this.signedRequests = new ArrayList<>();
    }
    this.signedRequests.add(signedRequestsItem);
    return this;
  }

  /**
   * Get signedRequests
   * @return signedRequests
   */
  @javax.annotation.Nullable
  public List<RequestSignedRequest> getSignedRequests() {
    return signedRequests;
  }

  public void setSignedRequests(List<RequestSignedRequest> signedRequests) {
    this.signedRequests = signedRequests;
  }


  public TgvalidatordRequest creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordRequest updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  public TgvalidatordRequest metadata(TgvalidatordMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public TgvalidatordMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(TgvalidatordMetadata metadata) {
    this.metadata = metadata;
  }


  public TgvalidatordRequest attributes(List<TgvalidatordRequestAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TgvalidatordRequest addAttributesItem(TgvalidatordRequestAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<TgvalidatordRequestAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<TgvalidatordRequestAttribute> attributes) {
    this.attributes = attributes;
  }


  public TgvalidatordRequest rule(String rule) {
    this.rule = rule;
    return this;
  }

  /**
   * Get rule
   * @return rule
   */
  @javax.annotation.Nullable
  public String getRule() {
    return rule;
  }

  public void setRule(String rule) {
    this.rule = rule;
  }


  public TgvalidatordRequest approvers(TgvalidatordApprovers approvers) {
    this.approvers = approvers;
    return this;
  }

  /**
   * Get approvers
   * @return approvers
   */
  @javax.annotation.Nullable
  public TgvalidatordApprovers getApprovers() {
    return approvers;
  }

  public void setApprovers(TgvalidatordApprovers approvers) {
    this.approvers = approvers;
  }


  public TgvalidatordRequest type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public TgvalidatordRequest currencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
    return this;
  }

  /**
   * Get currencyInfo
   * @return currencyInfo
   */
  @javax.annotation.Nullable
  public TgvalidatordCurrency getCurrencyInfo() {
    return currencyInfo;
  }

  public void setCurrencyInfo(TgvalidatordCurrency currencyInfo) {
    this.currencyInfo = currencyInfo;
  }


  public TgvalidatordRequest needsApprovalFrom(List<String> needsApprovalFrom) {
    this.needsApprovalFrom = needsApprovalFrom;
    return this;
  }

  public TgvalidatordRequest addNeedsApprovalFromItem(String needsApprovalFromItem) {
    if (this.needsApprovalFrom == null) {
      this.needsApprovalFrom = new ArrayList<>();
    }
    this.needsApprovalFrom.add(needsApprovalFromItem);
    return this;
  }

  /**
   * Get needsApprovalFrom
   * @return needsApprovalFrom
   */
  @javax.annotation.Nullable
  public List<String> getNeedsApprovalFrom() {
    return needsApprovalFrom;
  }

  public void setNeedsApprovalFrom(List<String> needsApprovalFrom) {
    this.needsApprovalFrom = needsApprovalFrom;
  }


  public TgvalidatordRequest requestBundleId(String requestBundleId) {
    this.requestBundleId = requestBundleId;
    return this;
  }

  /**
   * Get requestBundleId
   * @return requestBundleId
   */
  @javax.annotation.Nullable
  public String getRequestBundleId() {
    return requestBundleId;
  }

  public void setRequestBundleId(String requestBundleId) {
    this.requestBundleId = requestBundleId;
  }


  public TgvalidatordRequest externalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
    return this;
  }

  /**
   * Identifier for the request in the user&#39;s system. This must be unique.
   * @return externalRequestId
   */
  @javax.annotation.Nullable
  public String getExternalRequestId() {
    return externalRequestId;
  }

  public void setExternalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordRequest tgvalidatordRequest = (TgvalidatordRequest) o;
    return Objects.equals(this.id, tgvalidatordRequest.id) &&
        Objects.equals(this.tenantId, tgvalidatordRequest.tenantId) &&
        Objects.equals(this.currency, tgvalidatordRequest.currency) &&
        Objects.equals(this.envelope, tgvalidatordRequest.envelope) &&
        Objects.equals(this.status, tgvalidatordRequest.status) &&
        Objects.equals(this.trails, tgvalidatordRequest.trails) &&
        Objects.equals(this.signedRequests, tgvalidatordRequest.signedRequests) &&
        Objects.equals(this.creationDate, tgvalidatordRequest.creationDate) &&
        Objects.equals(this.updateDate, tgvalidatordRequest.updateDate) &&
        Objects.equals(this.metadata, tgvalidatordRequest.metadata) &&
        Objects.equals(this.attributes, tgvalidatordRequest.attributes) &&
        Objects.equals(this.rule, tgvalidatordRequest.rule) &&
        Objects.equals(this.approvers, tgvalidatordRequest.approvers) &&
        Objects.equals(this.type, tgvalidatordRequest.type) &&
        Objects.equals(this.currencyInfo, tgvalidatordRequest.currencyInfo) &&
        Objects.equals(this.needsApprovalFrom, tgvalidatordRequest.needsApprovalFrom) &&
        Objects.equals(this.requestBundleId, tgvalidatordRequest.requestBundleId) &&
        Objects.equals(this.externalRequestId, tgvalidatordRequest.externalRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, currency, envelope, status, trails, signedRequests, creationDate, updateDate, metadata, attributes, rule, approvers, type, currencyInfo, needsApprovalFrom, requestBundleId, externalRequestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    envelope: ").append(toIndentedString(envelope)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trails: ").append(toIndentedString(trails)).append("\n");
    sb.append("    signedRequests: ").append(toIndentedString(signedRequests)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    approvers: ").append(toIndentedString(approvers)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currencyInfo: ").append(toIndentedString(currencyInfo)).append("\n");
    sb.append("    needsApprovalFrom: ").append(toIndentedString(needsApprovalFrom)).append("\n");
    sb.append("    requestBundleId: ").append(toIndentedString(requestBundleId)).append("\n");
    sb.append("    externalRequestId: ").append(toIndentedString(externalRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tenantId");
    openapiFields.add("currency");
    openapiFields.add("envelope");
    openapiFields.add("status");
    openapiFields.add("trails");
    openapiFields.add("signedRequests");
    openapiFields.add("creationDate");
    openapiFields.add("updateDate");
    openapiFields.add("metadata");
    openapiFields.add("attributes");
    openapiFields.add("rule");
    openapiFields.add("approvers");
    openapiFields.add("type");
    openapiFields.add("currencyInfo");
    openapiFields.add("needsApprovalFrom");
    openapiFields.add("requestBundleId");
    openapiFields.add("externalRequestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordRequest is not found in the empty JSON string", TgvalidatordRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("envelope") != null && !jsonObj.get("envelope").isJsonNull()) && !jsonObj.get("envelope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `envelope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("envelope").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("trails") != null && !jsonObj.get("trails").isJsonNull()) {
        JsonArray jsonArraytrails = jsonObj.getAsJsonArray("trails");
        if (jsonArraytrails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trails` to be an array in the JSON string but got `%s`", jsonObj.get("trails").toString()));
          }

          // validate the optional field `trails` (array)
          for (int i = 0; i < jsonArraytrails.size(); i++) {
            TgvalidatordRequestTrail.validateJsonElement(jsonArraytrails.get(i));
          };
        }
      }
      if (jsonObj.get("signedRequests") != null && !jsonObj.get("signedRequests").isJsonNull()) {
        JsonArray jsonArraysignedRequests = jsonObj.getAsJsonArray("signedRequests");
        if (jsonArraysignedRequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("signedRequests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `signedRequests` to be an array in the JSON string but got `%s`", jsonObj.get("signedRequests").toString()));
          }

          // validate the optional field `signedRequests` (array)
          for (int i = 0; i < jsonArraysignedRequests.size(); i++) {
            RequestSignedRequest.validateJsonElement(jsonArraysignedRequests.get(i));
          };
        }
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        TgvalidatordMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            TgvalidatordRequestAttribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      if ((jsonObj.get("rule") != null && !jsonObj.get("rule").isJsonNull()) && !jsonObj.get("rule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rule").toString()));
      }
      // validate the optional field `approvers`
      if (jsonObj.get("approvers") != null && !jsonObj.get("approvers").isJsonNull()) {
        TgvalidatordApprovers.validateJsonElement(jsonObj.get("approvers"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `currencyInfo`
      if (jsonObj.get("currencyInfo") != null && !jsonObj.get("currencyInfo").isJsonNull()) {
        TgvalidatordCurrency.validateJsonElement(jsonObj.get("currencyInfo"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("needsApprovalFrom") != null && !jsonObj.get("needsApprovalFrom").isJsonNull() && !jsonObj.get("needsApprovalFrom").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `needsApprovalFrom` to be an array in the JSON string but got `%s`", jsonObj.get("needsApprovalFrom").toString()));
      }
      if ((jsonObj.get("requestBundleId") != null && !jsonObj.get("requestBundleId").isJsonNull()) && !jsonObj.get("requestBundleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestBundleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestBundleId").toString()));
      }
      if ((jsonObj.get("externalRequestId") != null && !jsonObj.get("externalRequestId").isJsonNull()) && !jsonObj.get("externalRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalRequestId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordRequest
   */
  public static TgvalidatordRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

