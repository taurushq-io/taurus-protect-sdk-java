/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordAction;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordActionAttribute;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordActionEnvelopeTrail;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordActionEnvelope
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordActionEnvelope {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private TgvalidatordAction action;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public static final String SERIALIZED_NAME_LASTCHECKEDDATE = "lastcheckeddate";
  @SerializedName(SERIALIZED_NAME_LASTCHECKEDDATE)
  private OffsetDateTime lastcheckeddate;

  public static final String SERIALIZED_NAME_AUTO_APPROVE = "autoApprove";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVE)
  private Boolean autoApprove;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<TgvalidatordActionAttribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRAILS = "trails";
  @SerializedName(SERIALIZED_NAME_TRAILS)
  private List<TgvalidatordActionEnvelopeTrail> trails = new ArrayList<>();

  public TgvalidatordActionEnvelope() {
  }

  public TgvalidatordActionEnvelope id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordActionEnvelope tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public TgvalidatordActionEnvelope label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public TgvalidatordActionEnvelope action(TgvalidatordAction action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public TgvalidatordAction getAction() {
    return action;
  }

  public void setAction(TgvalidatordAction action) {
    this.action = action;
  }


  public TgvalidatordActionEnvelope status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordActionEnvelope creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordActionEnvelope updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  public TgvalidatordActionEnvelope lastcheckeddate(OffsetDateTime lastcheckeddate) {
    this.lastcheckeddate = lastcheckeddate;
    return this;
  }

  /**
   * Get lastcheckeddate
   * @return lastcheckeddate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastcheckeddate() {
    return lastcheckeddate;
  }

  public void setLastcheckeddate(OffsetDateTime lastcheckeddate) {
    this.lastcheckeddate = lastcheckeddate;
  }


  public TgvalidatordActionEnvelope autoApprove(Boolean autoApprove) {
    this.autoApprove = autoApprove;
    return this;
  }

  /**
   * Get autoApprove
   * @return autoApprove
   */
  @javax.annotation.Nullable
  public Boolean getAutoApprove() {
    return autoApprove;
  }

  public void setAutoApprove(Boolean autoApprove) {
    this.autoApprove = autoApprove;
  }


  public TgvalidatordActionEnvelope attributes(List<TgvalidatordActionAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TgvalidatordActionEnvelope addAttributesItem(TgvalidatordActionAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<TgvalidatordActionAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<TgvalidatordActionAttribute> attributes) {
    this.attributes = attributes;
  }


  public TgvalidatordActionEnvelope trails(List<TgvalidatordActionEnvelopeTrail> trails) {
    this.trails = trails;
    return this;
  }

  public TgvalidatordActionEnvelope addTrailsItem(TgvalidatordActionEnvelopeTrail trailsItem) {
    if (this.trails == null) {
      this.trails = new ArrayList<>();
    }
    this.trails.add(trailsItem);
    return this;
  }

  /**
   * Get trails
   * @return trails
   */
  @javax.annotation.Nullable
  public List<TgvalidatordActionEnvelopeTrail> getTrails() {
    return trails;
  }

  public void setTrails(List<TgvalidatordActionEnvelopeTrail> trails) {
    this.trails = trails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordActionEnvelope tgvalidatordActionEnvelope = (TgvalidatordActionEnvelope) o;
    return Objects.equals(this.id, tgvalidatordActionEnvelope.id) &&
        Objects.equals(this.tenantId, tgvalidatordActionEnvelope.tenantId) &&
        Objects.equals(this.label, tgvalidatordActionEnvelope.label) &&
        Objects.equals(this.action, tgvalidatordActionEnvelope.action) &&
        Objects.equals(this.status, tgvalidatordActionEnvelope.status) &&
        Objects.equals(this.creationDate, tgvalidatordActionEnvelope.creationDate) &&
        Objects.equals(this.updateDate, tgvalidatordActionEnvelope.updateDate) &&
        Objects.equals(this.lastcheckeddate, tgvalidatordActionEnvelope.lastcheckeddate) &&
        Objects.equals(this.autoApprove, tgvalidatordActionEnvelope.autoApprove) &&
        Objects.equals(this.attributes, tgvalidatordActionEnvelope.attributes) &&
        Objects.equals(this.trails, tgvalidatordActionEnvelope.trails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, label, action, status, creationDate, updateDate, lastcheckeddate, autoApprove, attributes, trails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordActionEnvelope {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    lastcheckeddate: ").append(toIndentedString(lastcheckeddate)).append("\n");
    sb.append("    autoApprove: ").append(toIndentedString(autoApprove)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    trails: ").append(toIndentedString(trails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tenantId");
    openapiFields.add("label");
    openapiFields.add("action");
    openapiFields.add("status");
    openapiFields.add("creationDate");
    openapiFields.add("updateDate");
    openapiFields.add("lastcheckeddate");
    openapiFields.add("autoApprove");
    openapiFields.add("attributes");
    openapiFields.add("trails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordActionEnvelope
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordActionEnvelope.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordActionEnvelope is not found in the empty JSON string", TgvalidatordActionEnvelope.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordActionEnvelope.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordActionEnvelope` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        TgvalidatordAction.validateJsonElement(jsonObj.get("action"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            TgvalidatordActionAttribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      if (jsonObj.get("trails") != null && !jsonObj.get("trails").isJsonNull()) {
        JsonArray jsonArraytrails = jsonObj.getAsJsonArray("trails");
        if (jsonArraytrails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trails` to be an array in the JSON string but got `%s`", jsonObj.get("trails").toString()));
          }

          // validate the optional field `trails` (array)
          for (int i = 0; i < jsonArraytrails.size(); i++) {
            TgvalidatordActionEnvelopeTrail.validateJsonElement(jsonArraytrails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordActionEnvelope.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordActionEnvelope' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordActionEnvelope> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordActionEnvelope.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordActionEnvelope>() {
           @Override
           public void write(JsonWriter out, TgvalidatordActionEnvelope value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordActionEnvelope read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordActionEnvelope given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordActionEnvelope
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordActionEnvelope
   */
  public static TgvalidatordActionEnvelope fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordActionEnvelope.class);
  }

  /**
   * Convert an instance of TgvalidatordActionEnvelope to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

