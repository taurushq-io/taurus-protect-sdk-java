/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.RequestBundleSignedRequestBundle;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRequest;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRequestBundleDetails;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordRequestBundle
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordRequestBundle {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_BLOCKCHAIN = "blockchain";
  @SerializedName(SERIALIZED_NAME_BLOCKCHAIN)
  private String blockchain;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private TgvalidatordRequestBundleDetails details;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public static final String SERIALIZED_NAME_REQUESTS = "requests";
  @SerializedName(SERIALIZED_NAME_REQUESTS)
  private List<TgvalidatordRequest> requests = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_SIGNED_REQUEST_BUNDLES = "signedRequestBundles";
  @SerializedName(SERIALIZED_NAME_SIGNED_REQUEST_BUNDLES)
  private List<RequestBundleSignedRequestBundle> signedRequestBundles = new ArrayList<>();

  public TgvalidatordRequestBundle() {
  }

  public TgvalidatordRequestBundle id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordRequestBundle tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public TgvalidatordRequestBundle blockchain(String blockchain) {
    this.blockchain = blockchain;
    return this;
  }

  /**
   * Get blockchain
   * @return blockchain
   */
  @javax.annotation.Nullable
  public String getBlockchain() {
    return blockchain;
  }

  public void setBlockchain(String blockchain) {
    this.blockchain = blockchain;
  }


  public TgvalidatordRequestBundle details(TgvalidatordRequestBundleDetails details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  public TgvalidatordRequestBundleDetails getDetails() {
    return details;
  }

  public void setDetails(TgvalidatordRequestBundleDetails details) {
    this.details = details;
  }


  public TgvalidatordRequestBundle status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordRequestBundle creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordRequestBundle updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  public TgvalidatordRequestBundle requests(List<TgvalidatordRequest> requests) {
    this.requests = requests;
    return this;
  }

  public TgvalidatordRequestBundle addRequestsItem(TgvalidatordRequest requestsItem) {
    if (this.requests == null) {
      this.requests = new ArrayList<>();
    }
    this.requests.add(requestsItem);
    return this;
  }

  /**
   * This field is not always filled in, as there can be many associated requests.
   * @return requests
   */
  @javax.annotation.Nullable
  public List<TgvalidatordRequest> getRequests() {
    return requests;
  }

  public void setRequests(List<TgvalidatordRequest> requests) {
    this.requests = requests;
  }


  public TgvalidatordRequestBundle network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public TgvalidatordRequestBundle signedRequestBundles(List<RequestBundleSignedRequestBundle> signedRequestBundles) {
    this.signedRequestBundles = signedRequestBundles;
    return this;
  }

  public TgvalidatordRequestBundle addSignedRequestBundlesItem(RequestBundleSignedRequestBundle signedRequestBundlesItem) {
    if (this.signedRequestBundles == null) {
      this.signedRequestBundles = new ArrayList<>();
    }
    this.signedRequestBundles.add(signedRequestBundlesItem);
    return this;
  }

  /**
   * Get signedRequestBundles
   * @return signedRequestBundles
   */
  @javax.annotation.Nullable
  public List<RequestBundleSignedRequestBundle> getSignedRequestBundles() {
    return signedRequestBundles;
  }

  public void setSignedRequestBundles(List<RequestBundleSignedRequestBundle> signedRequestBundles) {
    this.signedRequestBundles = signedRequestBundles;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordRequestBundle tgvalidatordRequestBundle = (TgvalidatordRequestBundle) o;
    return Objects.equals(this.id, tgvalidatordRequestBundle.id) &&
        Objects.equals(this.tenantId, tgvalidatordRequestBundle.tenantId) &&
        Objects.equals(this.blockchain, tgvalidatordRequestBundle.blockchain) &&
        Objects.equals(this.details, tgvalidatordRequestBundle.details) &&
        Objects.equals(this.status, tgvalidatordRequestBundle.status) &&
        Objects.equals(this.creationDate, tgvalidatordRequestBundle.creationDate) &&
        Objects.equals(this.updateDate, tgvalidatordRequestBundle.updateDate) &&
        Objects.equals(this.requests, tgvalidatordRequestBundle.requests) &&
        Objects.equals(this.network, tgvalidatordRequestBundle.network) &&
        Objects.equals(this.signedRequestBundles, tgvalidatordRequestBundle.signedRequestBundles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, blockchain, details, status, creationDate, updateDate, requests, network, signedRequestBundles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordRequestBundle {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    signedRequestBundles: ").append(toIndentedString(signedRequestBundles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tenantId");
    openapiFields.add("blockchain");
    openapiFields.add("details");
    openapiFields.add("status");
    openapiFields.add("creationDate");
    openapiFields.add("updateDate");
    openapiFields.add("requests");
    openapiFields.add("network");
    openapiFields.add("signedRequestBundles");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordRequestBundle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordRequestBundle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordRequestBundle is not found in the empty JSON string", TgvalidatordRequestBundle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordRequestBundle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordRequestBundle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("blockchain") != null && !jsonObj.get("blockchain").isJsonNull()) && !jsonObj.get("blockchain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockchain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blockchain").toString()));
      }
      // validate the optional field `details`
      if (jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) {
        TgvalidatordRequestBundleDetails.validateJsonElement(jsonObj.get("details"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("requests") != null && !jsonObj.get("requests").isJsonNull()) {
        JsonArray jsonArrayrequests = jsonObj.getAsJsonArray("requests");
        if (jsonArrayrequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("requests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `requests` to be an array in the JSON string but got `%s`", jsonObj.get("requests").toString()));
          }

          // validate the optional field `requests` (array)
          for (int i = 0; i < jsonArrayrequests.size(); i++) {
            TgvalidatordRequest.validateJsonElement(jsonArrayrequests.get(i));
          };
        }
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if (jsonObj.get("signedRequestBundles") != null && !jsonObj.get("signedRequestBundles").isJsonNull()) {
        JsonArray jsonArraysignedRequestBundles = jsonObj.getAsJsonArray("signedRequestBundles");
        if (jsonArraysignedRequestBundles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("signedRequestBundles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `signedRequestBundles` to be an array in the JSON string but got `%s`", jsonObj.get("signedRequestBundles").toString()));
          }

          // validate the optional field `signedRequestBundles` (array)
          for (int i = 0; i < jsonArraysignedRequestBundles.size(); i++) {
            RequestBundleSignedRequestBundle.validateJsonElement(jsonArraysignedRequestBundles.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordRequestBundle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordRequestBundle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordRequestBundle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordRequestBundle.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordRequestBundle>() {
           @Override
           public void write(JsonWriter out, TgvalidatordRequestBundle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordRequestBundle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordRequestBundle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordRequestBundle
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordRequestBundle
   */
  public static TgvalidatordRequestBundle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordRequestBundle.class);
  }

  /**
   * Convert an instance of TgvalidatordRequestBundle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

