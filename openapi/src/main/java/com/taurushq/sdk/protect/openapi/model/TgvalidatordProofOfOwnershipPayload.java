/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordProofOfOwnershipPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordProofOfOwnershipPayload {
  public static final String SERIALIZED_NAME_OWNER_PARTICIPANT_I_D = "ownerParticipantID";
  @SerializedName(SERIALIZED_NAME_OWNER_PARTICIPANT_I_D)
  private String ownerParticipantID;

  public static final String SERIALIZED_NAME_TARGET_PARTICIPANT_I_D = "targetParticipantID";
  @SerializedName(SERIALIZED_NAME_TARGET_PARTICIPANT_I_D)
  private String targetParticipantID;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BLOCKCHAIN = "blockchain";
  @SerializedName(SERIALIZED_NAME_BLOCKCHAIN)
  private String blockchain;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public TgvalidatordProofOfOwnershipPayload() {
  }

  public TgvalidatordProofOfOwnershipPayload ownerParticipantID(String ownerParticipantID) {
    this.ownerParticipantID = ownerParticipantID;
    return this;
  }

  /**
   * Get ownerParticipantID
   * @return ownerParticipantID
   */
  @javax.annotation.Nullable
  public String getOwnerParticipantID() {
    return ownerParticipantID;
  }

  public void setOwnerParticipantID(String ownerParticipantID) {
    this.ownerParticipantID = ownerParticipantID;
  }


  public TgvalidatordProofOfOwnershipPayload targetParticipantID(String targetParticipantID) {
    this.targetParticipantID = targetParticipantID;
    return this;
  }

  /**
   * Get targetParticipantID
   * @return targetParticipantID
   */
  @javax.annotation.Nullable
  public String getTargetParticipantID() {
    return targetParticipantID;
  }

  public void setTargetParticipantID(String targetParticipantID) {
    this.targetParticipantID = targetParticipantID;
  }


  public TgvalidatordProofOfOwnershipPayload address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public TgvalidatordProofOfOwnershipPayload blockchain(String blockchain) {
    this.blockchain = blockchain;
    return this;
  }

  /**
   * Get blockchain
   * @return blockchain
   */
  @javax.annotation.Nullable
  public String getBlockchain() {
    return blockchain;
  }

  public void setBlockchain(String blockchain) {
    this.blockchain = blockchain;
  }


  public TgvalidatordProofOfOwnershipPayload network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordProofOfOwnershipPayload tgvalidatordProofOfOwnershipPayload = (TgvalidatordProofOfOwnershipPayload) o;
    return Objects.equals(this.ownerParticipantID, tgvalidatordProofOfOwnershipPayload.ownerParticipantID) &&
        Objects.equals(this.targetParticipantID, tgvalidatordProofOfOwnershipPayload.targetParticipantID) &&
        Objects.equals(this.address, tgvalidatordProofOfOwnershipPayload.address) &&
        Objects.equals(this.blockchain, tgvalidatordProofOfOwnershipPayload.blockchain) &&
        Objects.equals(this.network, tgvalidatordProofOfOwnershipPayload.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ownerParticipantID, targetParticipantID, address, blockchain, network);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordProofOfOwnershipPayload {\n");
    sb.append("    ownerParticipantID: ").append(toIndentedString(ownerParticipantID)).append("\n");
    sb.append("    targetParticipantID: ").append(toIndentedString(targetParticipantID)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ownerParticipantID");
    openapiFields.add("targetParticipantID");
    openapiFields.add("address");
    openapiFields.add("blockchain");
    openapiFields.add("network");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordProofOfOwnershipPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordProofOfOwnershipPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordProofOfOwnershipPayload is not found in the empty JSON string", TgvalidatordProofOfOwnershipPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordProofOfOwnershipPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordProofOfOwnershipPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ownerParticipantID") != null && !jsonObj.get("ownerParticipantID").isJsonNull()) && !jsonObj.get("ownerParticipantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerParticipantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerParticipantID").toString()));
      }
      if ((jsonObj.get("targetParticipantID") != null && !jsonObj.get("targetParticipantID").isJsonNull()) && !jsonObj.get("targetParticipantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetParticipantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetParticipantID").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("blockchain") != null && !jsonObj.get("blockchain").isJsonNull()) && !jsonObj.get("blockchain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockchain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blockchain").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordProofOfOwnershipPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordProofOfOwnershipPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordProofOfOwnershipPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordProofOfOwnershipPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordProofOfOwnershipPayload>() {
           @Override
           public void write(JsonWriter out, TgvalidatordProofOfOwnershipPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordProofOfOwnershipPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordProofOfOwnershipPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordProofOfOwnershipPayload
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordProofOfOwnershipPayload
   */
  public static TgvalidatordProofOfOwnershipPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordProofOfOwnershipPayload.class);
  }

  /**
   * Convert an instance of TgvalidatordProofOfOwnershipPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

