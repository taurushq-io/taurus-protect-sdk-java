/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigAuthenticationScheme;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigBulk;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigChangePassword;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigEtag;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigFilter;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigPatch;
import com.taurushq.sdk.protect.openapi.model.ScimServiceProviderConfigSort;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordScimMeta;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordScimServiceProviderConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordScimServiceProviderConfig {
  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<String> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENTATION_URI = "documentationUri";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_URI)
  private String documentationUri;

  public static final String SERIALIZED_NAME_PATCH = "patch";
  @SerializedName(SERIALIZED_NAME_PATCH)
  private ScimServiceProviderConfigPatch patch;

  public static final String SERIALIZED_NAME_BULK = "bulk";
  @SerializedName(SERIALIZED_NAME_BULK)
  private ScimServiceProviderConfigBulk bulk;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private ScimServiceProviderConfigFilter filter;

  public static final String SERIALIZED_NAME_CHANGE_PASSWORD = "changePassword";
  @SerializedName(SERIALIZED_NAME_CHANGE_PASSWORD)
  private ScimServiceProviderConfigChangePassword changePassword;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  private ScimServiceProviderConfigSort sort;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private ScimServiceProviderConfigEtag etag;

  public static final String SERIALIZED_NAME_AUTHENTICATION_SCHEMES = "authenticationSchemes";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_SCHEMES)
  private List<ScimServiceProviderConfigAuthenticationScheme> authenticationSchemes = new ArrayList<>();

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private TgvalidatordScimMeta meta;

  public TgvalidatordScimServiceProviderConfig() {
  }

  public TgvalidatordScimServiceProviderConfig schemas(List<String> schemas) {
    this.schemas = schemas;
    return this;
  }

  public TgvalidatordScimServiceProviderConfig addSchemasItem(String schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

  /**
   * Get schemas
   * @return schemas
   */
  @javax.annotation.Nullable
  public List<String> getSchemas() {
    return schemas;
  }

  public void setSchemas(List<String> schemas) {
    this.schemas = schemas;
  }


  public TgvalidatordScimServiceProviderConfig documentationUri(String documentationUri) {
    this.documentationUri = documentationUri;
    return this;
  }

  /**
   * Get documentationUri
   * @return documentationUri
   */
  @javax.annotation.Nullable
  public String getDocumentationUri() {
    return documentationUri;
  }

  public void setDocumentationUri(String documentationUri) {
    this.documentationUri = documentationUri;
  }


  public TgvalidatordScimServiceProviderConfig patch(ScimServiceProviderConfigPatch patch) {
    this.patch = patch;
    return this;
  }

  /**
   * Get patch
   * @return patch
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigPatch getPatch() {
    return patch;
  }

  public void setPatch(ScimServiceProviderConfigPatch patch) {
    this.patch = patch;
  }


  public TgvalidatordScimServiceProviderConfig bulk(ScimServiceProviderConfigBulk bulk) {
    this.bulk = bulk;
    return this;
  }

  /**
   * Get bulk
   * @return bulk
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigBulk getBulk() {
    return bulk;
  }

  public void setBulk(ScimServiceProviderConfigBulk bulk) {
    this.bulk = bulk;
  }


  public TgvalidatordScimServiceProviderConfig filter(ScimServiceProviderConfigFilter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigFilter getFilter() {
    return filter;
  }

  public void setFilter(ScimServiceProviderConfigFilter filter) {
    this.filter = filter;
  }


  public TgvalidatordScimServiceProviderConfig changePassword(ScimServiceProviderConfigChangePassword changePassword) {
    this.changePassword = changePassword;
    return this;
  }

  /**
   * Get changePassword
   * @return changePassword
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigChangePassword getChangePassword() {
    return changePassword;
  }

  public void setChangePassword(ScimServiceProviderConfigChangePassword changePassword) {
    this.changePassword = changePassword;
  }


  public TgvalidatordScimServiceProviderConfig sort(ScimServiceProviderConfigSort sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigSort getSort() {
    return sort;
  }

  public void setSort(ScimServiceProviderConfigSort sort) {
    this.sort = sort;
  }


  public TgvalidatordScimServiceProviderConfig etag(ScimServiceProviderConfigEtag etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Get etag
   * @return etag
   */
  @javax.annotation.Nullable
  public ScimServiceProviderConfigEtag getEtag() {
    return etag;
  }

  public void setEtag(ScimServiceProviderConfigEtag etag) {
    this.etag = etag;
  }


  public TgvalidatordScimServiceProviderConfig authenticationSchemes(List<ScimServiceProviderConfigAuthenticationScheme> authenticationSchemes) {
    this.authenticationSchemes = authenticationSchemes;
    return this;
  }

  public TgvalidatordScimServiceProviderConfig addAuthenticationSchemesItem(ScimServiceProviderConfigAuthenticationScheme authenticationSchemesItem) {
    if (this.authenticationSchemes == null) {
      this.authenticationSchemes = new ArrayList<>();
    }
    this.authenticationSchemes.add(authenticationSchemesItem);
    return this;
  }

  /**
   * Get authenticationSchemes
   * @return authenticationSchemes
   */
  @javax.annotation.Nullable
  public List<ScimServiceProviderConfigAuthenticationScheme> getAuthenticationSchemes() {
    return authenticationSchemes;
  }

  public void setAuthenticationSchemes(List<ScimServiceProviderConfigAuthenticationScheme> authenticationSchemes) {
    this.authenticationSchemes = authenticationSchemes;
  }


  public TgvalidatordScimServiceProviderConfig meta(TgvalidatordScimMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nullable
  public TgvalidatordScimMeta getMeta() {
    return meta;
  }

  public void setMeta(TgvalidatordScimMeta meta) {
    this.meta = meta;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordScimServiceProviderConfig tgvalidatordScimServiceProviderConfig = (TgvalidatordScimServiceProviderConfig) o;
    return Objects.equals(this.schemas, tgvalidatordScimServiceProviderConfig.schemas) &&
        Objects.equals(this.documentationUri, tgvalidatordScimServiceProviderConfig.documentationUri) &&
        Objects.equals(this.patch, tgvalidatordScimServiceProviderConfig.patch) &&
        Objects.equals(this.bulk, tgvalidatordScimServiceProviderConfig.bulk) &&
        Objects.equals(this.filter, tgvalidatordScimServiceProviderConfig.filter) &&
        Objects.equals(this.changePassword, tgvalidatordScimServiceProviderConfig.changePassword) &&
        Objects.equals(this.sort, tgvalidatordScimServiceProviderConfig.sort) &&
        Objects.equals(this.etag, tgvalidatordScimServiceProviderConfig.etag) &&
        Objects.equals(this.authenticationSchemes, tgvalidatordScimServiceProviderConfig.authenticationSchemes) &&
        Objects.equals(this.meta, tgvalidatordScimServiceProviderConfig.meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemas, documentationUri, patch, bulk, filter, changePassword, sort, etag, authenticationSchemes, meta);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordScimServiceProviderConfig {\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    documentationUri: ").append(toIndentedString(documentationUri)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("    bulk: ").append(toIndentedString(bulk)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    changePassword: ").append(toIndentedString(changePassword)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    authenticationSchemes: ").append(toIndentedString(authenticationSchemes)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("schemas");
    openapiFields.add("documentationUri");
    openapiFields.add("patch");
    openapiFields.add("bulk");
    openapiFields.add("filter");
    openapiFields.add("changePassword");
    openapiFields.add("sort");
    openapiFields.add("etag");
    openapiFields.add("authenticationSchemes");
    openapiFields.add("meta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordScimServiceProviderConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordScimServiceProviderConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordScimServiceProviderConfig is not found in the empty JSON string", TgvalidatordScimServiceProviderConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordScimServiceProviderConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordScimServiceProviderConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("schemas") != null && !jsonObj.get("schemas").isJsonNull() && !jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("documentationUri") != null && !jsonObj.get("documentationUri").isJsonNull()) && !jsonObj.get("documentationUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentationUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentationUri").toString()));
      }
      // validate the optional field `patch`
      if (jsonObj.get("patch") != null && !jsonObj.get("patch").isJsonNull()) {
        ScimServiceProviderConfigPatch.validateJsonElement(jsonObj.get("patch"));
      }
      // validate the optional field `bulk`
      if (jsonObj.get("bulk") != null && !jsonObj.get("bulk").isJsonNull()) {
        ScimServiceProviderConfigBulk.validateJsonElement(jsonObj.get("bulk"));
      }
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        ScimServiceProviderConfigFilter.validateJsonElement(jsonObj.get("filter"));
      }
      // validate the optional field `changePassword`
      if (jsonObj.get("changePassword") != null && !jsonObj.get("changePassword").isJsonNull()) {
        ScimServiceProviderConfigChangePassword.validateJsonElement(jsonObj.get("changePassword"));
      }
      // validate the optional field `sort`
      if (jsonObj.get("sort") != null && !jsonObj.get("sort").isJsonNull()) {
        ScimServiceProviderConfigSort.validateJsonElement(jsonObj.get("sort"));
      }
      // validate the optional field `etag`
      if (jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) {
        ScimServiceProviderConfigEtag.validateJsonElement(jsonObj.get("etag"));
      }
      if (jsonObj.get("authenticationSchemes") != null && !jsonObj.get("authenticationSchemes").isJsonNull()) {
        JsonArray jsonArrayauthenticationSchemes = jsonObj.getAsJsonArray("authenticationSchemes");
        if (jsonArrayauthenticationSchemes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authenticationSchemes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authenticationSchemes` to be an array in the JSON string but got `%s`", jsonObj.get("authenticationSchemes").toString()));
          }

          // validate the optional field `authenticationSchemes` (array)
          for (int i = 0; i < jsonArrayauthenticationSchemes.size(); i++) {
            ScimServiceProviderConfigAuthenticationScheme.validateJsonElement(jsonArrayauthenticationSchemes.get(i));
          };
        }
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        TgvalidatordScimMeta.validateJsonElement(jsonObj.get("meta"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordScimServiceProviderConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordScimServiceProviderConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordScimServiceProviderConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordScimServiceProviderConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordScimServiceProviderConfig>() {
           @Override
           public void write(JsonWriter out, TgvalidatordScimServiceProviderConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordScimServiceProviderConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordScimServiceProviderConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordScimServiceProviderConfig
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordScimServiceProviderConfig
   */
  public static TgvalidatordScimServiceProviderConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordScimServiceProviderConfig.class);
  }

  /**
   * Convert an instance of TgvalidatordScimServiceProviderConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

