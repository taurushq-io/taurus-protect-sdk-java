/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * Creates (or modifies an existing) XLM Buy Offer Request. Selling asset is the asset associated to the address identified by &#x60;fromAddressId&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_FEE_LIMIT = "feeLimit";
  @SerializedName(SERIALIZED_NAME_FEE_LIMIT)
  private String feeLimit;

  public static final String SERIALIZED_NAME_FROM_ADDRESS_I_D = "fromAddressID";
  @SerializedName(SERIALIZED_NAME_FROM_ADDRESS_I_D)
  private String fromAddressID;

  public static final String SERIALIZED_NAME_BUYING_ASSET_I_D = "buyingAssetID";
  @SerializedName(SERIALIZED_NAME_BUYING_ASSET_I_D)
  private String buyingAssetID;

  public static final String SERIALIZED_NAME_BUYING_ASSET_ISSUER = "buyingAssetIssuer";
  @SerializedName(SERIALIZED_NAME_BUYING_ASSET_ISSUER)
  private String buyingAssetIssuer;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private String price;

  public static final String SERIALIZED_NAME_OFFER_I_D = "offerID";
  @SerializedName(SERIALIZED_NAME_OFFER_I_D)
  private String offerID;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUEST_ID = "externalRequestId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUEST_ID)
  private String externalRequestId;

  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest() {
  }

  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest amount(String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Amount of the buying asset to buy, in the smallest currency unit, based on the currency decimals. For example, 1 corresponds to 1 &#39;stroop&#39; (one ten-millionth of XLM), and 1 XLM corresponds to 10000000 (7 decimals). If set to 0, deletes the offer identified by &#x60;offerID&#x60;
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest feeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
    return this;
  }

  /**
   * Get feeLimit
   * @return feeLimit
   */
  @javax.annotation.Nullable
  public String getFeeLimit() {
    return feeLimit;
  }

  public void setFeeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest fromAddressID(String fromAddressID) {
    this.fromAddressID = fromAddressID;
    return this;
  }

  /**
   * Get fromAddressID
   * @return fromAddressID
   */
  @javax.annotation.Nonnull
  public String getFromAddressID() {
    return fromAddressID;
  }

  public void setFromAddressID(String fromAddressID) {
    this.fromAddressID = fromAddressID;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest buyingAssetID(String buyingAssetID) {
    this.buyingAssetID = buyingAssetID;
    return this;
  }

  /**
   * Specify asset to be bought in the offer. Leave empty for XLM native
   * @return buyingAssetID
   */
  @javax.annotation.Nullable
  public String getBuyingAssetID() {
    return buyingAssetID;
  }

  public void setBuyingAssetID(String buyingAssetID) {
    this.buyingAssetID = buyingAssetID;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest buyingAssetIssuer(String buyingAssetIssuer) {
    this.buyingAssetIssuer = buyingAssetIssuer;
    return this;
  }

  /**
   * Specify asset to be bought in the offer. Leave Empty for XLM native
   * @return buyingAssetIssuer
   */
  @javax.annotation.Nullable
  public String getBuyingAssetIssuer() {
    return buyingAssetIssuer;
  }

  public void setBuyingAssetIssuer(String buyingAssetIssuer) {
    this.buyingAssetIssuer = buyingAssetIssuer;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest price(String price) {
    this.price = price;
    return this;
  }

  /**
   * Price of 1 unit of buying in terms of selling, as a string representing a floating point number. For example, if you wanted to buy 30 XLM and sell 5 BTC, the price would be 5/30 &#x3D; &#39;0.1666667&#39;
   * @return price
   */
  @javax.annotation.Nonnull
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest offerID(String offerID) {
    this.offerID = offerID;
    return this;
  }

  /**
   * ID of the offer to be modified. If 0, a new offer is created
   * @return offerID
   */
  @javax.annotation.Nullable
  public String getOfferID() {
    return offerID;
  }

  public void setOfferID(String offerID) {
    this.offerID = offerID;
  }


  public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest externalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
    return this;
  }

  /**
   * Identifier for the request in the user&#39;s system. This must be unique. Attempting to create a request with an existing externalRequestId will do nothing and return the originally created request
   * @return externalRequestId
   */
  @javax.annotation.Nullable
  public String getExternalRequestId() {
    return externalRequestId;
  }

  public void setExternalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest = (TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest) o;
    return Objects.equals(this.amount, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.amount) &&
        Objects.equals(this.feeLimit, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.feeLimit) &&
        Objects.equals(this.fromAddressID, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.fromAddressID) &&
        Objects.equals(this.buyingAssetID, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.buyingAssetID) &&
        Objects.equals(this.buyingAssetIssuer, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.buyingAssetIssuer) &&
        Objects.equals(this.comment, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.comment) &&
        Objects.equals(this.price, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.price) &&
        Objects.equals(this.offerID, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.offerID) &&
        Objects.equals(this.externalRequestId, tgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.externalRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, feeLimit, fromAddressID, buyingAssetID, buyingAssetIssuer, comment, price, offerID, externalRequestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    feeLimit: ").append(toIndentedString(feeLimit)).append("\n");
    sb.append("    fromAddressID: ").append(toIndentedString(fromAddressID)).append("\n");
    sb.append("    buyingAssetID: ").append(toIndentedString(buyingAssetID)).append("\n");
    sb.append("    buyingAssetIssuer: ").append(toIndentedString(buyingAssetIssuer)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    offerID: ").append(toIndentedString(offerID)).append("\n");
    sb.append("    externalRequestId: ").append(toIndentedString(externalRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("feeLimit");
    openapiFields.add("fromAddressID");
    openapiFields.add("buyingAssetID");
    openapiFields.add("buyingAssetIssuer");
    openapiFields.add("comment");
    openapiFields.add("price");
    openapiFields.add("offerID");
    openapiFields.add("externalRequestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fromAddressID");
    openapiRequiredFields.add("price");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest is not found in the empty JSON string", TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("feeLimit") != null && !jsonObj.get("feeLimit").isJsonNull()) && !jsonObj.get("feeLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feeLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feeLimit").toString()));
      }
      if (!jsonObj.get("fromAddressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromAddressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromAddressID").toString()));
      }
      if ((jsonObj.get("buyingAssetID") != null && !jsonObj.get("buyingAssetID").isJsonNull()) && !jsonObj.get("buyingAssetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyingAssetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyingAssetID").toString()));
      }
      if ((jsonObj.get("buyingAssetIssuer") != null && !jsonObj.get("buyingAssetIssuer").isJsonNull()) && !jsonObj.get("buyingAssetIssuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyingAssetIssuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyingAssetIssuer").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if (!jsonObj.get("price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price").toString()));
      }
      if ((jsonObj.get("offerID") != null && !jsonObj.get("offerID").isJsonNull()) && !jsonObj.get("offerID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerID").toString()));
      }
      if ((jsonObj.get("externalRequestId") != null && !jsonObj.get("externalRequestId").isJsonNull()) && !jsonObj.get("externalRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalRequestId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest
   */
  public static TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordCreateOutgoingXLMBuyOfferRequestRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

