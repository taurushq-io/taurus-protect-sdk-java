/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRuleUserSignature;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRulesTrail;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordRules
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordRules {
  public static final String SERIALIZED_NAME_RULES_CONTAINER = "rulesContainer";
  @SerializedName(SERIALIZED_NAME_RULES_CONTAINER)
  private String rulesContainer;

  public static final String SERIALIZED_NAME_RULES_SIGNATURES = "rulesSignatures";
  @SerializedName(SERIALIZED_NAME_RULES_SIGNATURES)
  private List<TgvalidatordRuleUserSignature> rulesSignatures = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public static final String SERIALIZED_NAME_TRAILS = "trails";
  @SerializedName(SERIALIZED_NAME_TRAILS)
  private List<TgvalidatordRulesTrail> trails = new ArrayList<>();

  public TgvalidatordRules() {
  }

  public TgvalidatordRules rulesContainer(String rulesContainer) {
    this.rulesContainer = rulesContainer;
    return this;
  }

  /**
   * Get rulesContainer
   * @return rulesContainer
   */
  @javax.annotation.Nullable
  public String getRulesContainer() {
    return rulesContainer;
  }

  public void setRulesContainer(String rulesContainer) {
    this.rulesContainer = rulesContainer;
  }


  public TgvalidatordRules rulesSignatures(List<TgvalidatordRuleUserSignature> rulesSignatures) {
    this.rulesSignatures = rulesSignatures;
    return this;
  }

  public TgvalidatordRules addRulesSignaturesItem(TgvalidatordRuleUserSignature rulesSignaturesItem) {
    if (this.rulesSignatures == null) {
      this.rulesSignatures = new ArrayList<>();
    }
    this.rulesSignatures.add(rulesSignaturesItem);
    return this;
  }

  /**
   * Get rulesSignatures
   * @return rulesSignatures
   */
  @javax.annotation.Nullable
  public List<TgvalidatordRuleUserSignature> getRulesSignatures() {
    return rulesSignatures;
  }

  public void setRulesSignatures(List<TgvalidatordRuleUserSignature> rulesSignatures) {
    this.rulesSignatures = rulesSignatures;
  }


  public TgvalidatordRules locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

  /**
   * Get locked
   * @return locked
   */
  @javax.annotation.Nullable
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public TgvalidatordRules creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordRules updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  public TgvalidatordRules trails(List<TgvalidatordRulesTrail> trails) {
    this.trails = trails;
    return this;
  }

  public TgvalidatordRules addTrailsItem(TgvalidatordRulesTrail trailsItem) {
    if (this.trails == null) {
      this.trails = new ArrayList<>();
    }
    this.trails.add(trailsItem);
    return this;
  }

  /**
   * Get trails
   * @return trails
   */
  @javax.annotation.Nullable
  public List<TgvalidatordRulesTrail> getTrails() {
    return trails;
  }

  public void setTrails(List<TgvalidatordRulesTrail> trails) {
    this.trails = trails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordRules tgvalidatordRules = (TgvalidatordRules) o;
    return Objects.equals(this.rulesContainer, tgvalidatordRules.rulesContainer) &&
        Objects.equals(this.rulesSignatures, tgvalidatordRules.rulesSignatures) &&
        Objects.equals(this.locked, tgvalidatordRules.locked) &&
        Objects.equals(this.creationDate, tgvalidatordRules.creationDate) &&
        Objects.equals(this.updateDate, tgvalidatordRules.updateDate) &&
        Objects.equals(this.trails, tgvalidatordRules.trails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rulesContainer, rulesSignatures, locked, creationDate, updateDate, trails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordRules {\n");
    sb.append("    rulesContainer: ").append(toIndentedString(rulesContainer)).append("\n");
    sb.append("    rulesSignatures: ").append(toIndentedString(rulesSignatures)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    trails: ").append(toIndentedString(trails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("rulesContainer");
    openapiFields.add("rulesSignatures");
    openapiFields.add("locked");
    openapiFields.add("creationDate");
    openapiFields.add("updateDate");
    openapiFields.add("trails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordRules
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordRules.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordRules is not found in the empty JSON string", TgvalidatordRules.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordRules.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordRules` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("rulesContainer") != null && !jsonObj.get("rulesContainer").isJsonNull()) && !jsonObj.get("rulesContainer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rulesContainer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rulesContainer").toString()));
      }
      if (jsonObj.get("rulesSignatures") != null && !jsonObj.get("rulesSignatures").isJsonNull()) {
        JsonArray jsonArrayrulesSignatures = jsonObj.getAsJsonArray("rulesSignatures");
        if (jsonArrayrulesSignatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rulesSignatures").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rulesSignatures` to be an array in the JSON string but got `%s`", jsonObj.get("rulesSignatures").toString()));
          }

          // validate the optional field `rulesSignatures` (array)
          for (int i = 0; i < jsonArrayrulesSignatures.size(); i++) {
            TgvalidatordRuleUserSignature.validateJsonElement(jsonArrayrulesSignatures.get(i));
          };
        }
      }
      if (jsonObj.get("trails") != null && !jsonObj.get("trails").isJsonNull()) {
        JsonArray jsonArraytrails = jsonObj.getAsJsonArray("trails");
        if (jsonArraytrails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trails` to be an array in the JSON string but got `%s`", jsonObj.get("trails").toString()));
          }

          // validate the optional field `trails` (array)
          for (int i = 0; i < jsonArraytrails.size(); i++) {
            TgvalidatordRulesTrail.validateJsonElement(jsonArraytrails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordRules.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordRules' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordRules> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordRules.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordRules>() {
           @Override
           public void write(JsonWriter out, TgvalidatordRules value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordRules read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordRules given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordRules
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordRules
   */
  public static TgvalidatordRules fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordRules.class);
  }

  /**
   * Convert an instance of TgvalidatordRules to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

