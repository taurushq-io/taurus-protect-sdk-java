/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordTnPledgeWithdrawalTrail;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnPledgeWithdrawal
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnPledgeWithdrawal {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PLEDGE_I_D = "pledgeID";
  @SerializedName(SERIALIZED_NAME_PLEDGE_I_D)
  private String pledgeID;

  public static final String SERIALIZED_NAME_DESTINATION_SHARED_ADDRESS_I_D = "destinationSharedAddressID";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SHARED_ADDRESS_I_D)
  private String destinationSharedAddressID;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TX_HASH = "txHash";
  @SerializedName(SERIALIZED_NAME_TX_HASH)
  private String txHash;

  public static final String SERIALIZED_NAME_TX_I_D = "txID";
  @SerializedName(SERIALIZED_NAME_TX_I_D)
  private String txID;

  public static final String SERIALIZED_NAME_REQUEST_I_D = "requestID";
  @SerializedName(SERIALIZED_NAME_REQUEST_I_D)
  private String requestID;

  public static final String SERIALIZED_NAME_TX_BLOCK_NUMBER = "txBlockNumber";
  @SerializedName(SERIALIZED_NAME_TX_BLOCK_NUMBER)
  private String txBlockNumber;

  public static final String SERIALIZED_NAME_TRAILS = "trails";
  @SerializedName(SERIALIZED_NAME_TRAILS)
  private List<TgvalidatordTnPledgeWithdrawalTrail> trails = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public TgvalidatordTnPledgeWithdrawal() {
  }

  public TgvalidatordTnPledgeWithdrawal id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordTnPledgeWithdrawal pledgeID(String pledgeID) {
    this.pledgeID = pledgeID;
    return this;
  }

  /**
   * Get pledgeID
   * @return pledgeID
   */
  @javax.annotation.Nullable
  public String getPledgeID() {
    return pledgeID;
  }

  public void setPledgeID(String pledgeID) {
    this.pledgeID = pledgeID;
  }


  public TgvalidatordTnPledgeWithdrawal destinationSharedAddressID(String destinationSharedAddressID) {
    this.destinationSharedAddressID = destinationSharedAddressID;
    return this;
  }

  /**
   * Get destinationSharedAddressID
   * @return destinationSharedAddressID
   */
  @javax.annotation.Nullable
  public String getDestinationSharedAddressID() {
    return destinationSharedAddressID;
  }

  public void setDestinationSharedAddressID(String destinationSharedAddressID) {
    this.destinationSharedAddressID = destinationSharedAddressID;
  }


  public TgvalidatordTnPledgeWithdrawal amount(String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }


  public TgvalidatordTnPledgeWithdrawal status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordTnPledgeWithdrawal txHash(String txHash) {
    this.txHash = txHash;
    return this;
  }

  /**
   * Get txHash
   * @return txHash
   */
  @javax.annotation.Nullable
  public String getTxHash() {
    return txHash;
  }

  public void setTxHash(String txHash) {
    this.txHash = txHash;
  }


  public TgvalidatordTnPledgeWithdrawal txID(String txID) {
    this.txID = txID;
    return this;
  }

  /**
   * Get txID
   * @return txID
   */
  @javax.annotation.Nullable
  public String getTxID() {
    return txID;
  }

  public void setTxID(String txID) {
    this.txID = txID;
  }


  public TgvalidatordTnPledgeWithdrawal requestID(String requestID) {
    this.requestID = requestID;
    return this;
  }

  /**
   * Get requestID
   * @return requestID
   */
  @javax.annotation.Nullable
  public String getRequestID() {
    return requestID;
  }

  public void setRequestID(String requestID) {
    this.requestID = requestID;
  }


  public TgvalidatordTnPledgeWithdrawal txBlockNumber(String txBlockNumber) {
    this.txBlockNumber = txBlockNumber;
    return this;
  }

  /**
   * Get txBlockNumber
   * @return txBlockNumber
   */
  @javax.annotation.Nullable
  public String getTxBlockNumber() {
    return txBlockNumber;
  }

  public void setTxBlockNumber(String txBlockNumber) {
    this.txBlockNumber = txBlockNumber;
  }


  public TgvalidatordTnPledgeWithdrawal trails(List<TgvalidatordTnPledgeWithdrawalTrail> trails) {
    this.trails = trails;
    return this;
  }

  public TgvalidatordTnPledgeWithdrawal addTrailsItem(TgvalidatordTnPledgeWithdrawalTrail trailsItem) {
    if (this.trails == null) {
      this.trails = new ArrayList<>();
    }
    this.trails.add(trailsItem);
    return this;
  }

  /**
   * Get trails
   * @return trails
   */
  @javax.annotation.Nullable
  public List<TgvalidatordTnPledgeWithdrawalTrail> getTrails() {
    return trails;
  }

  public void setTrails(List<TgvalidatordTnPledgeWithdrawalTrail> trails) {
    this.trails = trails;
  }


  public TgvalidatordTnPledgeWithdrawal createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnPledgeWithdrawal tgvalidatordTnPledgeWithdrawal = (TgvalidatordTnPledgeWithdrawal) o;
    return Objects.equals(this.id, tgvalidatordTnPledgeWithdrawal.id) &&
        Objects.equals(this.pledgeID, tgvalidatordTnPledgeWithdrawal.pledgeID) &&
        Objects.equals(this.destinationSharedAddressID, tgvalidatordTnPledgeWithdrawal.destinationSharedAddressID) &&
        Objects.equals(this.amount, tgvalidatordTnPledgeWithdrawal.amount) &&
        Objects.equals(this.status, tgvalidatordTnPledgeWithdrawal.status) &&
        Objects.equals(this.txHash, tgvalidatordTnPledgeWithdrawal.txHash) &&
        Objects.equals(this.txID, tgvalidatordTnPledgeWithdrawal.txID) &&
        Objects.equals(this.requestID, tgvalidatordTnPledgeWithdrawal.requestID) &&
        Objects.equals(this.txBlockNumber, tgvalidatordTnPledgeWithdrawal.txBlockNumber) &&
        Objects.equals(this.trails, tgvalidatordTnPledgeWithdrawal.trails) &&
        Objects.equals(this.createdAt, tgvalidatordTnPledgeWithdrawal.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, pledgeID, destinationSharedAddressID, amount, status, txHash, txID, requestID, txBlockNumber, trails, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnPledgeWithdrawal {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pledgeID: ").append(toIndentedString(pledgeID)).append("\n");
    sb.append("    destinationSharedAddressID: ").append(toIndentedString(destinationSharedAddressID)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    txHash: ").append(toIndentedString(txHash)).append("\n");
    sb.append("    txID: ").append(toIndentedString(txID)).append("\n");
    sb.append("    requestID: ").append(toIndentedString(requestID)).append("\n");
    sb.append("    txBlockNumber: ").append(toIndentedString(txBlockNumber)).append("\n");
    sb.append("    trails: ").append(toIndentedString(trails)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("pledgeID");
    openapiFields.add("destinationSharedAddressID");
    openapiFields.add("amount");
    openapiFields.add("status");
    openapiFields.add("txHash");
    openapiFields.add("txID");
    openapiFields.add("requestID");
    openapiFields.add("txBlockNumber");
    openapiFields.add("trails");
    openapiFields.add("createdAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnPledgeWithdrawal
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnPledgeWithdrawal.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnPledgeWithdrawal is not found in the empty JSON string", TgvalidatordTnPledgeWithdrawal.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnPledgeWithdrawal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnPledgeWithdrawal` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("pledgeID") != null && !jsonObj.get("pledgeID").isJsonNull()) && !jsonObj.get("pledgeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pledgeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pledgeID").toString()));
      }
      if ((jsonObj.get("destinationSharedAddressID") != null && !jsonObj.get("destinationSharedAddressID").isJsonNull()) && !jsonObj.get("destinationSharedAddressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationSharedAddressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationSharedAddressID").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("txHash") != null && !jsonObj.get("txHash").isJsonNull()) && !jsonObj.get("txHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `txHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("txHash").toString()));
      }
      if ((jsonObj.get("txID") != null && !jsonObj.get("txID").isJsonNull()) && !jsonObj.get("txID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `txID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("txID").toString()));
      }
      if ((jsonObj.get("requestID") != null && !jsonObj.get("requestID").isJsonNull()) && !jsonObj.get("requestID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestID").toString()));
      }
      if ((jsonObj.get("txBlockNumber") != null && !jsonObj.get("txBlockNumber").isJsonNull()) && !jsonObj.get("txBlockNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `txBlockNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("txBlockNumber").toString()));
      }
      if (jsonObj.get("trails") != null && !jsonObj.get("trails").isJsonNull()) {
        JsonArray jsonArraytrails = jsonObj.getAsJsonArray("trails");
        if (jsonArraytrails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trails` to be an array in the JSON string but got `%s`", jsonObj.get("trails").toString()));
          }

          // validate the optional field `trails` (array)
          for (int i = 0; i < jsonArraytrails.size(); i++) {
            TgvalidatordTnPledgeWithdrawalTrail.validateJsonElement(jsonArraytrails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnPledgeWithdrawal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnPledgeWithdrawal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnPledgeWithdrawal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnPledgeWithdrawal.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnPledgeWithdrawal>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnPledgeWithdrawal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnPledgeWithdrawal read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnPledgeWithdrawal given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnPledgeWithdrawal
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnPledgeWithdrawal
   */
  public static TgvalidatordTnPledgeWithdrawal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnPledgeWithdrawal.class);
  }

  /**
   * Convert an instance of TgvalidatordTnPledgeWithdrawal to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

