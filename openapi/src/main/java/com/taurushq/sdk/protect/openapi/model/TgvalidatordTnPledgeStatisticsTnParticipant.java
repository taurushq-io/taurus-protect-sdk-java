/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordTnPledgeStatisticsCurrency;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnPledgeStatisticsTnParticipant
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnPledgeStatisticsTnParticipant {
  public static final String SERIALIZED_NAME_COUNTERPARTY_TN_PARTICIPANT_I_D = "counterpartyTnParticipantID";
  @SerializedName(SERIALIZED_NAME_COUNTERPARTY_TN_PARTICIPANT_I_D)
  private String counterpartyTnParticipantID;

  public static final String SERIALIZED_NAME_OUTGOING_PLEDGES_TOTAL_VALUATION_BASE_CURRENCY = "outgoingPledgesTotalValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_OUTGOING_PLEDGES_TOTAL_VALUATION_BASE_CURRENCY)
  private String outgoingPledgesTotalValuationBaseCurrency;

  public static final String SERIALIZED_NAME_INCOMING_PLEDGES_TOTAL_VALUATION_BASE_CURRENCY = "incomingPledgesTotalValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_INCOMING_PLEDGES_TOTAL_VALUATION_BASE_CURRENCY)
  private String incomingPledgesTotalValuationBaseCurrency;

  public static final String SERIALIZED_NAME_PLEDGE_STATISTICS_CURRENCIES = "pledgeStatisticsCurrencies";
  @SerializedName(SERIALIZED_NAME_PLEDGE_STATISTICS_CURRENCIES)
  private List<TgvalidatordTnPledgeStatisticsCurrency> pledgeStatisticsCurrencies = new ArrayList<>();

  public TgvalidatordTnPledgeStatisticsTnParticipant() {
  }

  public TgvalidatordTnPledgeStatisticsTnParticipant counterpartyTnParticipantID(String counterpartyTnParticipantID) {
    this.counterpartyTnParticipantID = counterpartyTnParticipantID;
    return this;
  }

  /**
   * Get counterpartyTnParticipantID
   * @return counterpartyTnParticipantID
   */
  @javax.annotation.Nullable
  public String getCounterpartyTnParticipantID() {
    return counterpartyTnParticipantID;
  }

  public void setCounterpartyTnParticipantID(String counterpartyTnParticipantID) {
    this.counterpartyTnParticipantID = counterpartyTnParticipantID;
  }


  public TgvalidatordTnPledgeStatisticsTnParticipant outgoingPledgesTotalValuationBaseCurrency(String outgoingPledgesTotalValuationBaseCurrency) {
    this.outgoingPledgesTotalValuationBaseCurrency = outgoingPledgesTotalValuationBaseCurrency;
    return this;
  }

  /**
   * Get outgoingPledgesTotalValuationBaseCurrency
   * @return outgoingPledgesTotalValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getOutgoingPledgesTotalValuationBaseCurrency() {
    return outgoingPledgesTotalValuationBaseCurrency;
  }

  public void setOutgoingPledgesTotalValuationBaseCurrency(String outgoingPledgesTotalValuationBaseCurrency) {
    this.outgoingPledgesTotalValuationBaseCurrency = outgoingPledgesTotalValuationBaseCurrency;
  }


  public TgvalidatordTnPledgeStatisticsTnParticipant incomingPledgesTotalValuationBaseCurrency(String incomingPledgesTotalValuationBaseCurrency) {
    this.incomingPledgesTotalValuationBaseCurrency = incomingPledgesTotalValuationBaseCurrency;
    return this;
  }

  /**
   * Get incomingPledgesTotalValuationBaseCurrency
   * @return incomingPledgesTotalValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getIncomingPledgesTotalValuationBaseCurrency() {
    return incomingPledgesTotalValuationBaseCurrency;
  }

  public void setIncomingPledgesTotalValuationBaseCurrency(String incomingPledgesTotalValuationBaseCurrency) {
    this.incomingPledgesTotalValuationBaseCurrency = incomingPledgesTotalValuationBaseCurrency;
  }


  public TgvalidatordTnPledgeStatisticsTnParticipant pledgeStatisticsCurrencies(List<TgvalidatordTnPledgeStatisticsCurrency> pledgeStatisticsCurrencies) {
    this.pledgeStatisticsCurrencies = pledgeStatisticsCurrencies;
    return this;
  }

  public TgvalidatordTnPledgeStatisticsTnParticipant addPledgeStatisticsCurrenciesItem(TgvalidatordTnPledgeStatisticsCurrency pledgeStatisticsCurrenciesItem) {
    if (this.pledgeStatisticsCurrencies == null) {
      this.pledgeStatisticsCurrencies = new ArrayList<>();
    }
    this.pledgeStatisticsCurrencies.add(pledgeStatisticsCurrenciesItem);
    return this;
  }

  /**
   * Get pledgeStatisticsCurrencies
   * @return pledgeStatisticsCurrencies
   */
  @javax.annotation.Nullable
  public List<TgvalidatordTnPledgeStatisticsCurrency> getPledgeStatisticsCurrencies() {
    return pledgeStatisticsCurrencies;
  }

  public void setPledgeStatisticsCurrencies(List<TgvalidatordTnPledgeStatisticsCurrency> pledgeStatisticsCurrencies) {
    this.pledgeStatisticsCurrencies = pledgeStatisticsCurrencies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnPledgeStatisticsTnParticipant tgvalidatordTnPledgeStatisticsTnParticipant = (TgvalidatordTnPledgeStatisticsTnParticipant) o;
    return Objects.equals(this.counterpartyTnParticipantID, tgvalidatordTnPledgeStatisticsTnParticipant.counterpartyTnParticipantID) &&
        Objects.equals(this.outgoingPledgesTotalValuationBaseCurrency, tgvalidatordTnPledgeStatisticsTnParticipant.outgoingPledgesTotalValuationBaseCurrency) &&
        Objects.equals(this.incomingPledgesTotalValuationBaseCurrency, tgvalidatordTnPledgeStatisticsTnParticipant.incomingPledgesTotalValuationBaseCurrency) &&
        Objects.equals(this.pledgeStatisticsCurrencies, tgvalidatordTnPledgeStatisticsTnParticipant.pledgeStatisticsCurrencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counterpartyTnParticipantID, outgoingPledgesTotalValuationBaseCurrency, incomingPledgesTotalValuationBaseCurrency, pledgeStatisticsCurrencies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnPledgeStatisticsTnParticipant {\n");
    sb.append("    counterpartyTnParticipantID: ").append(toIndentedString(counterpartyTnParticipantID)).append("\n");
    sb.append("    outgoingPledgesTotalValuationBaseCurrency: ").append(toIndentedString(outgoingPledgesTotalValuationBaseCurrency)).append("\n");
    sb.append("    incomingPledgesTotalValuationBaseCurrency: ").append(toIndentedString(incomingPledgesTotalValuationBaseCurrency)).append("\n");
    sb.append("    pledgeStatisticsCurrencies: ").append(toIndentedString(pledgeStatisticsCurrencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("counterpartyTnParticipantID");
    openapiFields.add("outgoingPledgesTotalValuationBaseCurrency");
    openapiFields.add("incomingPledgesTotalValuationBaseCurrency");
    openapiFields.add("pledgeStatisticsCurrencies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnPledgeStatisticsTnParticipant
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnPledgeStatisticsTnParticipant.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnPledgeStatisticsTnParticipant is not found in the empty JSON string", TgvalidatordTnPledgeStatisticsTnParticipant.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnPledgeStatisticsTnParticipant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnPledgeStatisticsTnParticipant` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("counterpartyTnParticipantID") != null && !jsonObj.get("counterpartyTnParticipantID").isJsonNull()) && !jsonObj.get("counterpartyTnParticipantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `counterpartyTnParticipantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("counterpartyTnParticipantID").toString()));
      }
      if ((jsonObj.get("outgoingPledgesTotalValuationBaseCurrency") != null && !jsonObj.get("outgoingPledgesTotalValuationBaseCurrency").isJsonNull()) && !jsonObj.get("outgoingPledgesTotalValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outgoingPledgesTotalValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outgoingPledgesTotalValuationBaseCurrency").toString()));
      }
      if ((jsonObj.get("incomingPledgesTotalValuationBaseCurrency") != null && !jsonObj.get("incomingPledgesTotalValuationBaseCurrency").isJsonNull()) && !jsonObj.get("incomingPledgesTotalValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingPledgesTotalValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingPledgesTotalValuationBaseCurrency").toString()));
      }
      if (jsonObj.get("pledgeStatisticsCurrencies") != null && !jsonObj.get("pledgeStatisticsCurrencies").isJsonNull()) {
        JsonArray jsonArraypledgeStatisticsCurrencies = jsonObj.getAsJsonArray("pledgeStatisticsCurrencies");
        if (jsonArraypledgeStatisticsCurrencies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pledgeStatisticsCurrencies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pledgeStatisticsCurrencies` to be an array in the JSON string but got `%s`", jsonObj.get("pledgeStatisticsCurrencies").toString()));
          }

          // validate the optional field `pledgeStatisticsCurrencies` (array)
          for (int i = 0; i < jsonArraypledgeStatisticsCurrencies.size(); i++) {
            TgvalidatordTnPledgeStatisticsCurrency.validateJsonElement(jsonArraypledgeStatisticsCurrencies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnPledgeStatisticsTnParticipant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnPledgeStatisticsTnParticipant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnPledgeStatisticsTnParticipant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnPledgeStatisticsTnParticipant.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnPledgeStatisticsTnParticipant>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnPledgeStatisticsTnParticipant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnPledgeStatisticsTnParticipant read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnPledgeStatisticsTnParticipant given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnPledgeStatisticsTnParticipant
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnPledgeStatisticsTnParticipant
   */
  public static TgvalidatordTnPledgeStatisticsTnParticipant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnPledgeStatisticsTnParticipant.class);
  }

  /**
   * Convert an instance of TgvalidatordTnPledgeStatisticsTnParticipant to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

