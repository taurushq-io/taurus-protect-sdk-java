/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordContractCall;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordGenericCreateContract;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordCreateOutgoingDeployContractRequestRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordCreateOutgoingDeployContractRequestRequest {
  public static final String SERIALIZED_NAME_FROM_ADDRESS_ID = "fromAddressId";
  @SerializedName(SERIALIZED_NAME_FROM_ADDRESS_ID)
  private String fromAddressId;

  public static final String SERIALIZED_NAME_BYTECODE = "bytecode";
  @SerializedName(SERIALIZED_NAME_BYTECODE)
  private byte[] bytecode;

  public static final String SERIALIZED_NAME_CONSTRUCTOR = "constructor";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTOR)
  private TgvalidatordContractCall constructor;

  public static final String SERIALIZED_NAME_GENERATE_WHITELISTED_ADDRESS = "generateWhitelistedAddress";
  @SerializedName(SERIALIZED_NAME_GENERATE_WHITELISTED_ADDRESS)
  private Boolean generateWhitelistedAddress;

  public static final String SERIALIZED_NAME_GAS_LIMIT = "gasLimit";
  @SerializedName(SERIALIZED_NAME_GAS_LIMIT)
  private String gasLimit;

  public static final String SERIALIZED_NAME_GAS_PRICE_LIMIT = "gasPriceLimit";
  @SerializedName(SERIALIZED_NAME_GAS_PRICE_LIMIT)
  private String gasPriceLimit;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CONTRACT_TYPE = "contractType";
  @SerializedName(SERIALIZED_NAME_CONTRACT_TYPE)
  private String contractType;

  public static final String SERIALIZED_NAME_FEE_PAYER_ID = "feePayerId";
  @SerializedName(SERIALIZED_NAME_FEE_PAYER_ID)
  private String feePayerId;

  public static final String SERIALIZED_NAME_FEE_LIMIT = "feeLimit";
  @SerializedName(SERIALIZED_NAME_FEE_LIMIT)
  private String feeLimit;

  public static final String SERIALIZED_NAME_CONTRACT = "contract";
  @SerializedName(SERIALIZED_NAME_CONTRACT)
  private TgvalidatordGenericCreateContract contract;

  public static final String SERIALIZED_NAME_TRANSACTION_REFERENCE = "transactionReference";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REFERENCE)
  private String transactionReference;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUEST_ID = "externalRequestId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUEST_ID)
  private String externalRequestId;

  public TgvalidatordCreateOutgoingDeployContractRequestRequest() {
  }

  public TgvalidatordCreateOutgoingDeployContractRequestRequest fromAddressId(String fromAddressId) {
    this.fromAddressId = fromAddressId;
    return this;
  }

  /**
   * Get fromAddressId
   * @return fromAddressId
   */
  @javax.annotation.Nonnull
  public String getFromAddressId() {
    return fromAddressId;
  }

  public void setFromAddressId(String fromAddressId) {
    this.fromAddressId = fromAddressId;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest bytecode(byte[] bytecode) {
    this.bytecode = bytecode;
    return this;
  }

  /**
   * Get bytecode
   * @return bytecode
   */
  @javax.annotation.Nullable
  public byte[] getBytecode() {
    return bytecode;
  }

  public void setBytecode(byte[] bytecode) {
    this.bytecode = bytecode;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest constructor(TgvalidatordContractCall constructor) {
    this.constructor = constructor;
    return this;
  }

  /**
   * Get constructor
   * @return constructor
   */
  @javax.annotation.Nullable
  public TgvalidatordContractCall getConstructor() {
    return constructor;
  }

  public void setConstructor(TgvalidatordContractCall constructor) {
    this.constructor = constructor;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest generateWhitelistedAddress(Boolean generateWhitelistedAddress) {
    this.generateWhitelistedAddress = generateWhitelistedAddress;
    return this;
  }

  /**
   * Get generateWhitelistedAddress
   * @return generateWhitelistedAddress
   */
  @javax.annotation.Nullable
  public Boolean getGenerateWhitelistedAddress() {
    return generateWhitelistedAddress;
  }

  public void setGenerateWhitelistedAddress(Boolean generateWhitelistedAddress) {
    this.generateWhitelistedAddress = generateWhitelistedAddress;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest gasLimit(String gasLimit) {
    this.gasLimit = gasLimit;
    return this;
  }

  /**
   * Get gasLimit
   * @return gasLimit
   */
  @javax.annotation.Nullable
  public String getGasLimit() {
    return gasLimit;
  }

  public void setGasLimit(String gasLimit) {
    this.gasLimit = gasLimit;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest gasPriceLimit(String gasPriceLimit) {
    this.gasPriceLimit = gasPriceLimit;
    return this;
  }

  /**
   * Get gasPriceLimit
   * @return gasPriceLimit
   */
  @javax.annotation.Nullable
  public String getGasPriceLimit() {
    return gasPriceLimit;
  }

  public void setGasPriceLimit(String gasPriceLimit) {
    this.gasPriceLimit = gasPriceLimit;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest contractType(String contractType) {
    this.contractType = contractType;
    return this;
  }

  /**
   * Get contractType
   * @return contractType
   */
  @javax.annotation.Nullable
  public String getContractType() {
    return contractType;
  }

  public void setContractType(String contractType) {
    this.contractType = contractType;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest feePayerId(String feePayerId) {
    this.feePayerId = feePayerId;
    return this;
  }

  /**
   * Get feePayerId
   * @return feePayerId
   */
  @javax.annotation.Nullable
  public String getFeePayerId() {
    return feePayerId;
  }

  public void setFeePayerId(String feePayerId) {
    this.feePayerId = feePayerId;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest feeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
    return this;
  }

  /**
   * Get feeLimit
   * @return feeLimit
   */
  @javax.annotation.Nullable
  public String getFeeLimit() {
    return feeLimit;
  }

  public void setFeeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest contract(TgvalidatordGenericCreateContract contract) {
    this.contract = contract;
    return this;
  }

  /**
   * Get contract
   * @return contract
   */
  @javax.annotation.Nonnull
  public TgvalidatordGenericCreateContract getContract() {
    return contract;
  }

  public void setContract(TgvalidatordGenericCreateContract contract) {
    this.contract = contract;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest transactionReference(String transactionReference) {
    this.transactionReference = transactionReference;
    return this;
  }

  /**
   * DEPRECATED - use externalRequestId instead
   * @return transactionReference
   */
  @javax.annotation.Nullable
  public String getTransactionReference() {
    return transactionReference;
  }

  public void setTransactionReference(String transactionReference) {
    this.transactionReference = transactionReference;
  }


  public TgvalidatordCreateOutgoingDeployContractRequestRequest externalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
    return this;
  }

  /**
   * Identifier for the request in the user&#39;s system. This must be unique. Attempting to create a request with an existing externalRequestId will do nothing and return the originally created request
   * @return externalRequestId
   */
  @javax.annotation.Nullable
  public String getExternalRequestId() {
    return externalRequestId;
  }

  public void setExternalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordCreateOutgoingDeployContractRequestRequest tgvalidatordCreateOutgoingDeployContractRequestRequest = (TgvalidatordCreateOutgoingDeployContractRequestRequest) o;
    return Objects.equals(this.fromAddressId, tgvalidatordCreateOutgoingDeployContractRequestRequest.fromAddressId) &&
        Arrays.equals(this.bytecode, tgvalidatordCreateOutgoingDeployContractRequestRequest.bytecode) &&
        Objects.equals(this.constructor, tgvalidatordCreateOutgoingDeployContractRequestRequest.constructor) &&
        Objects.equals(this.generateWhitelistedAddress, tgvalidatordCreateOutgoingDeployContractRequestRequest.generateWhitelistedAddress) &&
        Objects.equals(this.gasLimit, tgvalidatordCreateOutgoingDeployContractRequestRequest.gasLimit) &&
        Objects.equals(this.gasPriceLimit, tgvalidatordCreateOutgoingDeployContractRequestRequest.gasPriceLimit) &&
        Objects.equals(this.comment, tgvalidatordCreateOutgoingDeployContractRequestRequest.comment) &&
        Objects.equals(this.contractType, tgvalidatordCreateOutgoingDeployContractRequestRequest.contractType) &&
        Objects.equals(this.feePayerId, tgvalidatordCreateOutgoingDeployContractRequestRequest.feePayerId) &&
        Objects.equals(this.feeLimit, tgvalidatordCreateOutgoingDeployContractRequestRequest.feeLimit) &&
        Objects.equals(this.contract, tgvalidatordCreateOutgoingDeployContractRequestRequest.contract) &&
        Objects.equals(this.transactionReference, tgvalidatordCreateOutgoingDeployContractRequestRequest.transactionReference) &&
        Objects.equals(this.externalRequestId, tgvalidatordCreateOutgoingDeployContractRequestRequest.externalRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromAddressId, Arrays.hashCode(bytecode), constructor, generateWhitelistedAddress, gasLimit, gasPriceLimit, comment, contractType, feePayerId, feeLimit, contract, transactionReference, externalRequestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordCreateOutgoingDeployContractRequestRequest {\n");
    sb.append("    fromAddressId: ").append(toIndentedString(fromAddressId)).append("\n");
    sb.append("    bytecode: ").append(toIndentedString(bytecode)).append("\n");
    sb.append("    constructor: ").append(toIndentedString(constructor)).append("\n");
    sb.append("    generateWhitelistedAddress: ").append(toIndentedString(generateWhitelistedAddress)).append("\n");
    sb.append("    gasLimit: ").append(toIndentedString(gasLimit)).append("\n");
    sb.append("    gasPriceLimit: ").append(toIndentedString(gasPriceLimit)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    contractType: ").append(toIndentedString(contractType)).append("\n");
    sb.append("    feePayerId: ").append(toIndentedString(feePayerId)).append("\n");
    sb.append("    feeLimit: ").append(toIndentedString(feeLimit)).append("\n");
    sb.append("    contract: ").append(toIndentedString(contract)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("    externalRequestId: ").append(toIndentedString(externalRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fromAddressId");
    openapiFields.add("bytecode");
    openapiFields.add("constructor");
    openapiFields.add("generateWhitelistedAddress");
    openapiFields.add("gasLimit");
    openapiFields.add("gasPriceLimit");
    openapiFields.add("comment");
    openapiFields.add("contractType");
    openapiFields.add("feePayerId");
    openapiFields.add("feeLimit");
    openapiFields.add("contract");
    openapiFields.add("transactionReference");
    openapiFields.add("externalRequestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fromAddressId");
    openapiRequiredFields.add("contract");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordCreateOutgoingDeployContractRequestRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordCreateOutgoingDeployContractRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordCreateOutgoingDeployContractRequestRequest is not found in the empty JSON string", TgvalidatordCreateOutgoingDeployContractRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordCreateOutgoingDeployContractRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordCreateOutgoingDeployContractRequestRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TgvalidatordCreateOutgoingDeployContractRequestRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("fromAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromAddressId").toString()));
      }
      // validate the optional field `constructor`
      if (jsonObj.get("constructor") != null && !jsonObj.get("constructor").isJsonNull()) {
        TgvalidatordContractCall.validateJsonElement(jsonObj.get("constructor"));
      }
      if ((jsonObj.get("gasLimit") != null && !jsonObj.get("gasLimit").isJsonNull()) && !jsonObj.get("gasLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gasLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gasLimit").toString()));
      }
      if ((jsonObj.get("gasPriceLimit") != null && !jsonObj.get("gasPriceLimit").isJsonNull()) && !jsonObj.get("gasPriceLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gasPriceLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gasPriceLimit").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("contractType") != null && !jsonObj.get("contractType").isJsonNull()) && !jsonObj.get("contractType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractType").toString()));
      }
      if ((jsonObj.get("feePayerId") != null && !jsonObj.get("feePayerId").isJsonNull()) && !jsonObj.get("feePayerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feePayerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feePayerId").toString()));
      }
      if ((jsonObj.get("feeLimit") != null && !jsonObj.get("feeLimit").isJsonNull()) && !jsonObj.get("feeLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feeLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feeLimit").toString()));
      }
      // validate the required field `contract`
      TgvalidatordGenericCreateContract.validateJsonElement(jsonObj.get("contract"));
      if ((jsonObj.get("transactionReference") != null && !jsonObj.get("transactionReference").isJsonNull()) && !jsonObj.get("transactionReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionReference").toString()));
      }
      if ((jsonObj.get("externalRequestId") != null && !jsonObj.get("externalRequestId").isJsonNull()) && !jsonObj.get("externalRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalRequestId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordCreateOutgoingDeployContractRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordCreateOutgoingDeployContractRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordCreateOutgoingDeployContractRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordCreateOutgoingDeployContractRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordCreateOutgoingDeployContractRequestRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordCreateOutgoingDeployContractRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordCreateOutgoingDeployContractRequestRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordCreateOutgoingDeployContractRequestRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordCreateOutgoingDeployContractRequestRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordCreateOutgoingDeployContractRequestRequest
   */
  public static TgvalidatordCreateOutgoingDeployContractRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordCreateOutgoingDeployContractRequestRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordCreateOutgoingDeployContractRequestRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

