/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TaurusNetworkServiceWithdrawPledgeBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TaurusNetworkServiceWithdrawPledgeBody {
  public static final String SERIALIZED_NAME_DESTINATION_SHARED_ADDRESS_I_D = "destinationSharedAddressID";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SHARED_ADDRESS_I_D)
  private String destinationSharedAddressID;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public TaurusNetworkServiceWithdrawPledgeBody() {
  }

  public TaurusNetworkServiceWithdrawPledgeBody destinationSharedAddressID(String destinationSharedAddressID) {
    this.destinationSharedAddressID = destinationSharedAddressID;
    return this;
  }

  /**
   * Get destinationSharedAddressID
   * @return destinationSharedAddressID
   */
  @javax.annotation.Nullable
  public String getDestinationSharedAddressID() {
    return destinationSharedAddressID;
  }

  public void setDestinationSharedAddressID(String destinationSharedAddressID) {
    this.destinationSharedAddressID = destinationSharedAddressID;
  }


  public TaurusNetworkServiceWithdrawPledgeBody amount(String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaurusNetworkServiceWithdrawPledgeBody taurusNetworkServiceWithdrawPledgeBody = (TaurusNetworkServiceWithdrawPledgeBody) o;
    return Objects.equals(this.destinationSharedAddressID, taurusNetworkServiceWithdrawPledgeBody.destinationSharedAddressID) &&
        Objects.equals(this.amount, taurusNetworkServiceWithdrawPledgeBody.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationSharedAddressID, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaurusNetworkServiceWithdrawPledgeBody {\n");
    sb.append("    destinationSharedAddressID: ").append(toIndentedString(destinationSharedAddressID)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destinationSharedAddressID");
    openapiFields.add("amount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaurusNetworkServiceWithdrawPledgeBody
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaurusNetworkServiceWithdrawPledgeBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaurusNetworkServiceWithdrawPledgeBody is not found in the empty JSON string", TaurusNetworkServiceWithdrawPledgeBody.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaurusNetworkServiceWithdrawPledgeBody.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaurusNetworkServiceWithdrawPledgeBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destinationSharedAddressID") != null && !jsonObj.get("destinationSharedAddressID").isJsonNull()) && !jsonObj.get("destinationSharedAddressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationSharedAddressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationSharedAddressID").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaurusNetworkServiceWithdrawPledgeBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaurusNetworkServiceWithdrawPledgeBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaurusNetworkServiceWithdrawPledgeBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaurusNetworkServiceWithdrawPledgeBody.class));

       return (TypeAdapter<T>) new TypeAdapter<TaurusNetworkServiceWithdrawPledgeBody>() {
           @Override
           public void write(JsonWriter out, TaurusNetworkServiceWithdrawPledgeBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaurusNetworkServiceWithdrawPledgeBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaurusNetworkServiceWithdrawPledgeBody given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaurusNetworkServiceWithdrawPledgeBody
   * @throws IOException if the JSON string is invalid with respect to TaurusNetworkServiceWithdrawPledgeBody
   */
  public static TaurusNetworkServiceWithdrawPledgeBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaurusNetworkServiceWithdrawPledgeBody.class);
  }

  /**
   * Convert an instance of TaurusNetworkServiceWithdrawPledgeBody to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

