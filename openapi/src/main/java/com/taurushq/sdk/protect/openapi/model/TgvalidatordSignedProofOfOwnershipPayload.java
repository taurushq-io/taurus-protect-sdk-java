/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordProofOfOwnershipPayload;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordSignedProofOfOwnershipPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordSignedProofOfOwnershipPayload {
  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private TgvalidatordProofOfOwnershipPayload payload;

  public static final String SERIALIZED_NAME_OWNER_PARTICIPANT_SIGNATURE = "ownerParticipantSignature";
  @SerializedName(SERIALIZED_NAME_OWNER_PARTICIPANT_SIGNATURE)
  private String ownerParticipantSignature;

  public TgvalidatordSignedProofOfOwnershipPayload() {
  }

  public TgvalidatordSignedProofOfOwnershipPayload payload(TgvalidatordProofOfOwnershipPayload payload) {
    this.payload = payload;
    return this;
  }

  /**
   * Get payload
   * @return payload
   */
  @javax.annotation.Nullable
  public TgvalidatordProofOfOwnershipPayload getPayload() {
    return payload;
  }

  public void setPayload(TgvalidatordProofOfOwnershipPayload payload) {
    this.payload = payload;
  }


  public TgvalidatordSignedProofOfOwnershipPayload ownerParticipantSignature(String ownerParticipantSignature) {
    this.ownerParticipantSignature = ownerParticipantSignature;
    return this;
  }

  /**
   * Signature of the payload signed by the owner participant.
   * @return ownerParticipantSignature
   */
  @javax.annotation.Nullable
  public String getOwnerParticipantSignature() {
    return ownerParticipantSignature;
  }

  public void setOwnerParticipantSignature(String ownerParticipantSignature) {
    this.ownerParticipantSignature = ownerParticipantSignature;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordSignedProofOfOwnershipPayload tgvalidatordSignedProofOfOwnershipPayload = (TgvalidatordSignedProofOfOwnershipPayload) o;
    return Objects.equals(this.payload, tgvalidatordSignedProofOfOwnershipPayload.payload) &&
        Objects.equals(this.ownerParticipantSignature, tgvalidatordSignedProofOfOwnershipPayload.ownerParticipantSignature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payload, ownerParticipantSignature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordSignedProofOfOwnershipPayload {\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    ownerParticipantSignature: ").append(toIndentedString(ownerParticipantSignature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payload");
    openapiFields.add("ownerParticipantSignature");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordSignedProofOfOwnershipPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordSignedProofOfOwnershipPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordSignedProofOfOwnershipPayload is not found in the empty JSON string", TgvalidatordSignedProofOfOwnershipPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordSignedProofOfOwnershipPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordSignedProofOfOwnershipPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `payload`
      if (jsonObj.get("payload") != null && !jsonObj.get("payload").isJsonNull()) {
        TgvalidatordProofOfOwnershipPayload.validateJsonElement(jsonObj.get("payload"));
      }
      if ((jsonObj.get("ownerParticipantSignature") != null && !jsonObj.get("ownerParticipantSignature").isJsonNull()) && !jsonObj.get("ownerParticipantSignature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerParticipantSignature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerParticipantSignature").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordSignedProofOfOwnershipPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordSignedProofOfOwnershipPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordSignedProofOfOwnershipPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordSignedProofOfOwnershipPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordSignedProofOfOwnershipPayload>() {
           @Override
           public void write(JsonWriter out, TgvalidatordSignedProofOfOwnershipPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordSignedProofOfOwnershipPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordSignedProofOfOwnershipPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordSignedProofOfOwnershipPayload
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordSignedProofOfOwnershipPayload
   */
  public static TgvalidatordSignedProofOfOwnershipPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordSignedProofOfOwnershipPayload.class);
  }

  /**
   * Convert an instance of TgvalidatordSignedProofOfOwnershipPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

