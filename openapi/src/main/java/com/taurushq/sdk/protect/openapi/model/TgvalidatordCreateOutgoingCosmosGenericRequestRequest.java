/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.CreateOutgoingCosmosGenericRequestRequestAccountInfo;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordCosmosMessageCall;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordCreateOutgoingCosmosGenericRequestRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordCreateOutgoingCosmosGenericRequestRequest {
  public static final String SERIALIZED_NAME_CHAIN_ID = "chainId";
  @SerializedName(SERIALIZED_NAME_CHAIN_ID)
  private String chainId;

  public static final String SERIALIZED_NAME_SIGNERS = "signers";
  @SerializedName(SERIALIZED_NAME_SIGNERS)
  private List<String> signers = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEE_DENOM = "feeDenom";
  @SerializedName(SERIALIZED_NAME_FEE_DENOM)
  private String feeDenom;

  public static final String SERIALIZED_NAME_FEE = "fee";
  @SerializedName(SERIALIZED_NAME_FEE)
  private String fee;

  public static final String SERIALIZED_NAME_FEE_PAYER = "feePayer";
  @SerializedName(SERIALIZED_NAME_FEE_PAYER)
  private String feePayer;

  public static final String SERIALIZED_NAME_GAS_LIMIT = "gasLimit";
  @SerializedName(SERIALIZED_NAME_GAS_LIMIT)
  private String gasLimit;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<TgvalidatordCosmosMessageCall> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_USE_UNCONFIRMED_FUNDS = "useUnconfirmedFunds";
  @SerializedName(SERIALIZED_NAME_USE_UNCONFIRMED_FUNDS)
  private Boolean useUnconfirmedFunds;

  public static final String SERIALIZED_NAME_TRANSACTION_REFERENCE = "transactionReference";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REFERENCE)
  private String transactionReference;

  public static final String SERIALIZED_NAME_BROADCAST_KIND = "broadcastKind";
  @SerializedName(SERIALIZED_NAME_BROADCAST_KIND)
  private String broadcastKind;

  public static final String SERIALIZED_NAME_ACCOUNTS_INFO = "accountsInfo";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS_INFO)
  private List<CreateOutgoingCosmosGenericRequestRequestAccountInfo> accountsInfo = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUEST_ID = "externalRequestId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUEST_ID)
  private String externalRequestId;

  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest() {
  }

  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest chainId(String chainId) {
    this.chainId = chainId;
    return this;
  }

  /**
   * Get chainId
   * @return chainId
   */
  @javax.annotation.Nonnull
  public String getChainId() {
    return chainId;
  }

  public void setChainId(String chainId) {
    this.chainId = chainId;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest signers(List<String> signers) {
    this.signers = signers;
    return this;
  }

  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest addSignersItem(String signersItem) {
    if (this.signers == null) {
      this.signers = new ArrayList<>();
    }
    this.signers.add(signersItem);
    return this;
  }

  /**
   * Get signers
   * @return signers
   */
  @javax.annotation.Nonnull
  public List<String> getSigners() {
    return signers;
  }

  public void setSigners(List<String> signers) {
    this.signers = signers;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest feeDenom(String feeDenom) {
    this.feeDenom = feeDenom;
    return this;
  }

  /**
   * Get feeDenom
   * @return feeDenom
   */
  @javax.annotation.Nullable
  public String getFeeDenom() {
    return feeDenom;
  }

  public void setFeeDenom(String feeDenom) {
    this.feeDenom = feeDenom;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest fee(String fee) {
    this.fee = fee;
    return this;
  }

  /**
   * Get fee
   * @return fee
   */
  @javax.annotation.Nullable
  public String getFee() {
    return fee;
  }

  public void setFee(String fee) {
    this.fee = fee;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest feePayer(String feePayer) {
    this.feePayer = feePayer;
    return this;
  }

  /**
   * Get feePayer
   * @return feePayer
   */
  @javax.annotation.Nullable
  public String getFeePayer() {
    return feePayer;
  }

  public void setFeePayer(String feePayer) {
    this.feePayer = feePayer;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest gasLimit(String gasLimit) {
    this.gasLimit = gasLimit;
    return this;
  }

  /**
   * Get gasLimit
   * @return gasLimit
   */
  @javax.annotation.Nullable
  public String getGasLimit() {
    return gasLimit;
  }

  public void setGasLimit(String gasLimit) {
    this.gasLimit = gasLimit;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest messages(List<TgvalidatordCosmosMessageCall> messages) {
    this.messages = messages;
    return this;
  }

  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest addMessagesItem(TgvalidatordCosmosMessageCall messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * Get messages
   * @return messages
   */
  @javax.annotation.Nonnull
  public List<TgvalidatordCosmosMessageCall> getMessages() {
    return messages;
  }

  public void setMessages(List<TgvalidatordCosmosMessageCall> messages) {
    this.messages = messages;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest useUnconfirmedFunds(Boolean useUnconfirmedFunds) {
    this.useUnconfirmedFunds = useUnconfirmedFunds;
    return this;
  }

  /**
   * Get useUnconfirmedFunds
   * @return useUnconfirmedFunds
   */
  @javax.annotation.Nullable
  public Boolean getUseUnconfirmedFunds() {
    return useUnconfirmedFunds;
  }

  public void setUseUnconfirmedFunds(Boolean useUnconfirmedFunds) {
    this.useUnconfirmedFunds = useUnconfirmedFunds;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest transactionReference(String transactionReference) {
    this.transactionReference = transactionReference;
    return this;
  }

  /**
   * DEPRECATED - use externalRequestId instead
   * @return transactionReference
   */
  @javax.annotation.Nullable
  public String getTransactionReference() {
    return transactionReference;
  }

  public void setTransactionReference(String transactionReference) {
    this.transactionReference = transactionReference;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest broadcastKind(String broadcastKind) {
    this.broadcastKind = broadcastKind;
    return this;
  }

  /**
   * Get broadcastKind
   * @return broadcastKind
   */
  @javax.annotation.Nullable
  public String getBroadcastKind() {
    return broadcastKind;
  }

  public void setBroadcastKind(String broadcastKind) {
    this.broadcastKind = broadcastKind;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest accountsInfo(List<CreateOutgoingCosmosGenericRequestRequestAccountInfo> accountsInfo) {
    this.accountsInfo = accountsInfo;
    return this;
  }

  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest addAccountsInfoItem(CreateOutgoingCosmosGenericRequestRequestAccountInfo accountsInfoItem) {
    if (this.accountsInfo == null) {
      this.accountsInfo = new ArrayList<>();
    }
    this.accountsInfo.add(accountsInfoItem);
    return this;
  }

  /**
   * Get accountsInfo
   * @return accountsInfo
   */
  @javax.annotation.Nullable
  public List<CreateOutgoingCosmosGenericRequestRequestAccountInfo> getAccountsInfo() {
    return accountsInfo;
  }

  public void setAccountsInfo(List<CreateOutgoingCosmosGenericRequestRequestAccountInfo> accountsInfo) {
    this.accountsInfo = accountsInfo;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest memo(String memo) {
    this.memo = memo;
    return this;
  }

  /**
   * Get memo
   * @return memo
   */
  @javax.annotation.Nullable
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }


  public TgvalidatordCreateOutgoingCosmosGenericRequestRequest externalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
    return this;
  }

  /**
   * Identifier for the request in the user&#39;s system. This must be unique. Attempting to create a request with an existing externalRequestId will do nothing and return the originally created request
   * @return externalRequestId
   */
  @javax.annotation.Nullable
  public String getExternalRequestId() {
    return externalRequestId;
  }

  public void setExternalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordCreateOutgoingCosmosGenericRequestRequest tgvalidatordCreateOutgoingCosmosGenericRequestRequest = (TgvalidatordCreateOutgoingCosmosGenericRequestRequest) o;
    return Objects.equals(this.chainId, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.chainId) &&
        Objects.equals(this.signers, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.signers) &&
        Objects.equals(this.feeDenom, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.feeDenom) &&
        Objects.equals(this.fee, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.fee) &&
        Objects.equals(this.feePayer, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.feePayer) &&
        Objects.equals(this.gasLimit, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.gasLimit) &&
        Objects.equals(this.messages, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.messages) &&
        Objects.equals(this.comment, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.comment) &&
        Objects.equals(this.useUnconfirmedFunds, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.useUnconfirmedFunds) &&
        Objects.equals(this.transactionReference, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.transactionReference) &&
        Objects.equals(this.broadcastKind, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.broadcastKind) &&
        Objects.equals(this.accountsInfo, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.accountsInfo) &&
        Objects.equals(this.memo, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.memo) &&
        Objects.equals(this.externalRequestId, tgvalidatordCreateOutgoingCosmosGenericRequestRequest.externalRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chainId, signers, feeDenom, fee, feePayer, gasLimit, messages, comment, useUnconfirmedFunds, transactionReference, broadcastKind, accountsInfo, memo, externalRequestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordCreateOutgoingCosmosGenericRequestRequest {\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("    signers: ").append(toIndentedString(signers)).append("\n");
    sb.append("    feeDenom: ").append(toIndentedString(feeDenom)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    feePayer: ").append(toIndentedString(feePayer)).append("\n");
    sb.append("    gasLimit: ").append(toIndentedString(gasLimit)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    useUnconfirmedFunds: ").append(toIndentedString(useUnconfirmedFunds)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("    broadcastKind: ").append(toIndentedString(broadcastKind)).append("\n");
    sb.append("    accountsInfo: ").append(toIndentedString(accountsInfo)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    externalRequestId: ").append(toIndentedString(externalRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chainId");
    openapiFields.add("signers");
    openapiFields.add("feeDenom");
    openapiFields.add("fee");
    openapiFields.add("feePayer");
    openapiFields.add("gasLimit");
    openapiFields.add("messages");
    openapiFields.add("comment");
    openapiFields.add("useUnconfirmedFunds");
    openapiFields.add("transactionReference");
    openapiFields.add("broadcastKind");
    openapiFields.add("accountsInfo");
    openapiFields.add("memo");
    openapiFields.add("externalRequestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("chainId");
    openapiRequiredFields.add("signers");
    openapiRequiredFields.add("messages");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordCreateOutgoingCosmosGenericRequestRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordCreateOutgoingCosmosGenericRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordCreateOutgoingCosmosGenericRequestRequest is not found in the empty JSON string", TgvalidatordCreateOutgoingCosmosGenericRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordCreateOutgoingCosmosGenericRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordCreateOutgoingCosmosGenericRequestRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TgvalidatordCreateOutgoingCosmosGenericRequestRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("chainId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chainId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chainId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("signers") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("signers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `signers` to be an array in the JSON string but got `%s`", jsonObj.get("signers").toString()));
      }
      if ((jsonObj.get("feeDenom") != null && !jsonObj.get("feeDenom").isJsonNull()) && !jsonObj.get("feeDenom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feeDenom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feeDenom").toString()));
      }
      if ((jsonObj.get("fee") != null && !jsonObj.get("fee").isJsonNull()) && !jsonObj.get("fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fee").toString()));
      }
      if ((jsonObj.get("feePayer") != null && !jsonObj.get("feePayer").isJsonNull()) && !jsonObj.get("feePayer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feePayer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feePayer").toString()));
      }
      if ((jsonObj.get("gasLimit") != null && !jsonObj.get("gasLimit").isJsonNull()) && !jsonObj.get("gasLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gasLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gasLimit").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("messages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
      }

      JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
      // validate the required field `messages` (array)
      for (int i = 0; i < jsonArraymessages.size(); i++) {
        TgvalidatordCosmosMessageCall.validateJsonElement(jsonArraymessages.get(i));
      };
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("transactionReference") != null && !jsonObj.get("transactionReference").isJsonNull()) && !jsonObj.get("transactionReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionReference").toString()));
      }
      if ((jsonObj.get("broadcastKind") != null && !jsonObj.get("broadcastKind").isJsonNull()) && !jsonObj.get("broadcastKind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `broadcastKind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("broadcastKind").toString()));
      }
      if (jsonObj.get("accountsInfo") != null && !jsonObj.get("accountsInfo").isJsonNull()) {
        JsonArray jsonArrayaccountsInfo = jsonObj.getAsJsonArray("accountsInfo");
        if (jsonArrayaccountsInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("accountsInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `accountsInfo` to be an array in the JSON string but got `%s`", jsonObj.get("accountsInfo").toString()));
          }

          // validate the optional field `accountsInfo` (array)
          for (int i = 0; i < jsonArrayaccountsInfo.size(); i++) {
            CreateOutgoingCosmosGenericRequestRequestAccountInfo.validateJsonElement(jsonArrayaccountsInfo.get(i));
          };
        }
      }
      if ((jsonObj.get("memo") != null && !jsonObj.get("memo").isJsonNull()) && !jsonObj.get("memo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo").toString()));
      }
      if ((jsonObj.get("externalRequestId") != null && !jsonObj.get("externalRequestId").isJsonNull()) && !jsonObj.get("externalRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalRequestId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordCreateOutgoingCosmosGenericRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordCreateOutgoingCosmosGenericRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordCreateOutgoingCosmosGenericRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordCreateOutgoingCosmosGenericRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordCreateOutgoingCosmosGenericRequestRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordCreateOutgoingCosmosGenericRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordCreateOutgoingCosmosGenericRequestRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordCreateOutgoingCosmosGenericRequestRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordCreateOutgoingCosmosGenericRequestRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordCreateOutgoingCosmosGenericRequestRequest
   */
  public static TgvalidatordCreateOutgoingCosmosGenericRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordCreateOutgoingCosmosGenericRequestRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordCreateOutgoingCosmosGenericRequestRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

