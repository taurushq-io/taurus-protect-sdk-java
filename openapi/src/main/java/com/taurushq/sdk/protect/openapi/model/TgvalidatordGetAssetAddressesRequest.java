/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordAsset;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordGetAssetAddressesRequestSorting;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordRequestCursor;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordGetAssetAddressesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordGetAssetAddressesRequest {
  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private TgvalidatordAsset asset;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private String limit;

  public static final String SERIALIZED_NAME_CURSOR = "cursor";
  @SerializedName(SERIALIZED_NAME_CURSOR)
  private byte[] cursor;

  public static final String SERIALIZED_NAME_SORTING = "sorting";
  @SerializedName(SERIALIZED_NAME_SORTING)
  private TgvalidatordGetAssetAddressesRequestSorting sorting;

  public static final String SERIALIZED_NAME_REQUEST_CURSOR = "requestCursor";
  @SerializedName(SERIALIZED_NAME_REQUEST_CURSOR)
  private TgvalidatordRequestCursor requestCursor;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  private String walletId;

  public static final String SERIALIZED_NAME_ADDRESS_ID = "addressId";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ID)
  private String addressId;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<String> addresses = new ArrayList<>();

  public TgvalidatordGetAssetAddressesRequest() {
  }

  public TgvalidatordGetAssetAddressesRequest asset(TgvalidatordAsset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nonnull
  public TgvalidatordAsset getAsset() {
    return asset;
  }

  public void setAsset(TgvalidatordAsset asset) {
    this.asset = asset;
  }


  public TgvalidatordGetAssetAddressesRequest limit(String limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * @return limit
   */
  @javax.annotation.Nullable
  public String getLimit() {
    return limit;
  }

  public void setLimit(String limit) {
    this.limit = limit;
  }


  public TgvalidatordGetAssetAddressesRequest cursor(byte[] cursor) {
    this.cursor = cursor;
    return this;
  }

  /**
   * Get cursor
   * @return cursor
   */
  @javax.annotation.Nullable
  public byte[] getCursor() {
    return cursor;
  }

  public void setCursor(byte[] cursor) {
    this.cursor = cursor;
  }


  public TgvalidatordGetAssetAddressesRequest sorting(TgvalidatordGetAssetAddressesRequestSorting sorting) {
    this.sorting = sorting;
    return this;
  }

  /**
   * Get sorting
   * @return sorting
   */
  @javax.annotation.Nullable
  public TgvalidatordGetAssetAddressesRequestSorting getSorting() {
    return sorting;
  }

  public void setSorting(TgvalidatordGetAssetAddressesRequestSorting sorting) {
    this.sorting = sorting;
  }


  public TgvalidatordGetAssetAddressesRequest requestCursor(TgvalidatordRequestCursor requestCursor) {
    this.requestCursor = requestCursor;
    return this;
  }

  /**
   * Get requestCursor
   * @return requestCursor
   */
  @javax.annotation.Nullable
  public TgvalidatordRequestCursor getRequestCursor() {
    return requestCursor;
  }

  public void setRequestCursor(TgvalidatordRequestCursor requestCursor) {
    this.requestCursor = requestCursor;
  }


  public TgvalidatordGetAssetAddressesRequest walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Filters for asset positions of a specific wallet
   * @return walletId
   */
  @javax.annotation.Nullable
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }


  public TgvalidatordGetAssetAddressesRequest addressId(String addressId) {
    this.addressId = addressId;
    return this;
  }

  /**
   * Filters for asset positions of a specific address
   * @return addressId
   */
  @javax.annotation.Nullable
  public String getAddressId() {
    return addressId;
  }

  public void setAddressId(String addressId) {
    this.addressId = addressId;
  }


  public TgvalidatordGetAssetAddressesRequest addresses(List<String> addresses) {
    this.addresses = addresses;
    return this;
  }

  public TgvalidatordGetAssetAddressesRequest addAddressesItem(String addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Filter on the asset addresses to return
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<String> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordGetAssetAddressesRequest tgvalidatordGetAssetAddressesRequest = (TgvalidatordGetAssetAddressesRequest) o;
    return Objects.equals(this.asset, tgvalidatordGetAssetAddressesRequest.asset) &&
        Objects.equals(this.limit, tgvalidatordGetAssetAddressesRequest.limit) &&
        Arrays.equals(this.cursor, tgvalidatordGetAssetAddressesRequest.cursor) &&
        Objects.equals(this.sorting, tgvalidatordGetAssetAddressesRequest.sorting) &&
        Objects.equals(this.requestCursor, tgvalidatordGetAssetAddressesRequest.requestCursor) &&
        Objects.equals(this.walletId, tgvalidatordGetAssetAddressesRequest.walletId) &&
        Objects.equals(this.addressId, tgvalidatordGetAssetAddressesRequest.addressId) &&
        Objects.equals(this.addresses, tgvalidatordGetAssetAddressesRequest.addresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, limit, Arrays.hashCode(cursor), sorting, requestCursor, walletId, addressId, addresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordGetAssetAddressesRequest {\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
    sb.append("    requestCursor: ").append(toIndentedString(requestCursor)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asset");
    openapiFields.add("limit");
    openapiFields.add("cursor");
    openapiFields.add("sorting");
    openapiFields.add("requestCursor");
    openapiFields.add("walletId");
    openapiFields.add("addressId");
    openapiFields.add("addresses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("asset");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordGetAssetAddressesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordGetAssetAddressesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordGetAssetAddressesRequest is not found in the empty JSON string", TgvalidatordGetAssetAddressesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordGetAssetAddressesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordGetAssetAddressesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TgvalidatordGetAssetAddressesRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `asset`
      TgvalidatordAsset.validateJsonElement(jsonObj.get("asset"));
      if ((jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) && !jsonObj.get("limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limit").toString()));
      }
      // validate the optional field `sorting`
      if (jsonObj.get("sorting") != null && !jsonObj.get("sorting").isJsonNull()) {
        TgvalidatordGetAssetAddressesRequestSorting.validateJsonElement(jsonObj.get("sorting"));
      }
      // validate the optional field `requestCursor`
      if (jsonObj.get("requestCursor") != null && !jsonObj.get("requestCursor").isJsonNull()) {
        TgvalidatordRequestCursor.validateJsonElement(jsonObj.get("requestCursor"));
      }
      if ((jsonObj.get("walletId") != null && !jsonObj.get("walletId").isJsonNull()) && !jsonObj.get("walletId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletId").toString()));
      }
      if ((jsonObj.get("addressId") != null && !jsonObj.get("addressId").isJsonNull()) && !jsonObj.get("addressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull() && !jsonObj.get("addresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordGetAssetAddressesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordGetAssetAddressesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordGetAssetAddressesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordGetAssetAddressesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordGetAssetAddressesRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordGetAssetAddressesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordGetAssetAddressesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordGetAssetAddressesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordGetAssetAddressesRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordGetAssetAddressesRequest
   */
  public static TgvalidatordGetAssetAddressesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordGetAssetAddressesRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordGetAssetAddressesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

