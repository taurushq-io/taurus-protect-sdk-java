/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordRequestBatchSignatureRequestSignature
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordRequestBatchSignatureRequestSignature {
  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_TENANT_I_D = "TenantID";
  @SerializedName(SERIALIZED_NAME_TENANT_I_D)
  private String tenantID;

  public static final String SERIALIZED_NAME_BATCH_SIGNATURE_I_D = "BatchSignatureID";
  @SerializedName(SERIALIZED_NAME_BATCH_SIGNATURE_I_D)
  private String batchSignatureID;

  public static final String SERIALIZED_NAME_REQUEST_I_D = "RequestID";
  @SerializedName(SERIALIZED_NAME_REQUEST_I_D)
  private String requestID;

  public static final String SERIALIZED_NAME_METADATA_HASH = "MetadataHash";
  @SerializedName(SERIALIZED_NAME_METADATA_HASH)
  private String metadataHash;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "UpdateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public TgvalidatordRequestBatchSignatureRequestSignature() {
  }

  public TgvalidatordRequestBatchSignatureRequestSignature ID(String ID) {
    this.ID = ID;
    return this;
  }

  /**
   * Get ID
   * @return ID
   */
  @javax.annotation.Nullable
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature tenantID(String tenantID) {
    this.tenantID = tenantID;
    return this;
  }

  /**
   * Get tenantID
   * @return tenantID
   */
  @javax.annotation.Nullable
  public String getTenantID() {
    return tenantID;
  }

  public void setTenantID(String tenantID) {
    this.tenantID = tenantID;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature batchSignatureID(String batchSignatureID) {
    this.batchSignatureID = batchSignatureID;
    return this;
  }

  /**
   * Get batchSignatureID
   * @return batchSignatureID
   */
  @javax.annotation.Nullable
  public String getBatchSignatureID() {
    return batchSignatureID;
  }

  public void setBatchSignatureID(String batchSignatureID) {
    this.batchSignatureID = batchSignatureID;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature requestID(String requestID) {
    this.requestID = requestID;
    return this;
  }

  /**
   * Get requestID
   * @return requestID
   */
  @javax.annotation.Nullable
  public String getRequestID() {
    return requestID;
  }

  public void setRequestID(String requestID) {
    this.requestID = requestID;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature metadataHash(String metadataHash) {
    this.metadataHash = metadataHash;
    return this;
  }

  /**
   * Get metadataHash
   * @return metadataHash
   */
  @javax.annotation.Nullable
  public String getMetadataHash() {
    return metadataHash;
  }

  public void setMetadataHash(String metadataHash) {
    this.metadataHash = metadataHash;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public TgvalidatordRequestBatchSignatureRequestSignature updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordRequestBatchSignatureRequestSignature tgvalidatordRequestBatchSignatureRequestSignature = (TgvalidatordRequestBatchSignatureRequestSignature) o;
    return Objects.equals(this.ID, tgvalidatordRequestBatchSignatureRequestSignature.ID) &&
        Objects.equals(this.tenantID, tgvalidatordRequestBatchSignatureRequestSignature.tenantID) &&
        Objects.equals(this.batchSignatureID, tgvalidatordRequestBatchSignatureRequestSignature.batchSignatureID) &&
        Objects.equals(this.requestID, tgvalidatordRequestBatchSignatureRequestSignature.requestID) &&
        Objects.equals(this.metadataHash, tgvalidatordRequestBatchSignatureRequestSignature.metadataHash) &&
        Objects.equals(this.status, tgvalidatordRequestBatchSignatureRequestSignature.status) &&
        Objects.equals(this.message, tgvalidatordRequestBatchSignatureRequestSignature.message) &&
        Objects.equals(this.creationDate, tgvalidatordRequestBatchSignatureRequestSignature.creationDate) &&
        Objects.equals(this.updateDate, tgvalidatordRequestBatchSignatureRequestSignature.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, tenantID, batchSignatureID, requestID, metadataHash, status, message, creationDate, updateDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordRequestBatchSignatureRequestSignature {\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("    batchSignatureID: ").append(toIndentedString(batchSignatureID)).append("\n");
    sb.append("    requestID: ").append(toIndentedString(requestID)).append("\n");
    sb.append("    metadataHash: ").append(toIndentedString(metadataHash)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ID");
    openapiFields.add("TenantID");
    openapiFields.add("BatchSignatureID");
    openapiFields.add("RequestID");
    openapiFields.add("MetadataHash");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("CreationDate");
    openapiFields.add("UpdateDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordRequestBatchSignatureRequestSignature
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordRequestBatchSignatureRequestSignature.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordRequestBatchSignatureRequestSignature is not found in the empty JSON string", TgvalidatordRequestBatchSignatureRequestSignature.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordRequestBatchSignatureRequestSignature.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordRequestBatchSignatureRequestSignature` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ID") != null && !jsonObj.get("ID").isJsonNull()) && !jsonObj.get("ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ID").toString()));
      }
      if ((jsonObj.get("TenantID") != null && !jsonObj.get("TenantID").isJsonNull()) && !jsonObj.get("TenantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TenantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TenantID").toString()));
      }
      if ((jsonObj.get("BatchSignatureID") != null && !jsonObj.get("BatchSignatureID").isJsonNull()) && !jsonObj.get("BatchSignatureID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BatchSignatureID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BatchSignatureID").toString()));
      }
      if ((jsonObj.get("RequestID") != null && !jsonObj.get("RequestID").isJsonNull()) && !jsonObj.get("RequestID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RequestID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RequestID").toString()));
      }
      if ((jsonObj.get("MetadataHash") != null && !jsonObj.get("MetadataHash").isJsonNull()) && !jsonObj.get("MetadataHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MetadataHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MetadataHash").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) && !jsonObj.get("Message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Message").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordRequestBatchSignatureRequestSignature.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordRequestBatchSignatureRequestSignature' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordRequestBatchSignatureRequestSignature> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordRequestBatchSignatureRequestSignature.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordRequestBatchSignatureRequestSignature>() {
           @Override
           public void write(JsonWriter out, TgvalidatordRequestBatchSignatureRequestSignature value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordRequestBatchSignatureRequestSignature read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordRequestBatchSignatureRequestSignature given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordRequestBatchSignatureRequestSignature
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordRequestBatchSignatureRequestSignature
   */
  public static TgvalidatordRequestBatchSignatureRequestSignature fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordRequestBatchSignatureRequestSignature.class);
  }

  /**
   * Convert an instance of TgvalidatordRequestBatchSignatureRequestSignature to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

