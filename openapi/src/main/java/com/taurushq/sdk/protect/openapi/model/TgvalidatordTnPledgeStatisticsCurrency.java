/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnPledgeStatisticsCurrency
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnPledgeStatisticsCurrency {
  public static final String SERIALIZED_NAME_CURRENCY_I_D = "currencyID";
  @SerializedName(SERIALIZED_NAME_CURRENCY_I_D)
  private String currencyID;

  public static final String SERIALIZED_NAME_OUTGOING_PLEDGES_AMOUNT = "outgoingPledgesAmount";
  @SerializedName(SERIALIZED_NAME_OUTGOING_PLEDGES_AMOUNT)
  private String outgoingPledgesAmount;

  public static final String SERIALIZED_NAME_OUTGOING_PLEDGES_VALUATION_BASE_CURRENCY = "outgoingPledgesValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_OUTGOING_PLEDGES_VALUATION_BASE_CURRENCY)
  private String outgoingPledgesValuationBaseCurrency;

  public static final String SERIALIZED_NAME_INCOMING_PLEDGES_AMOUNT = "incomingPledgesAmount";
  @SerializedName(SERIALIZED_NAME_INCOMING_PLEDGES_AMOUNT)
  private String incomingPledgesAmount;

  public static final String SERIALIZED_NAME_INCOMING_PLEDGES_VALUATION_BASE_CURRENCY = "incomingPledgesValuationBaseCurrency";
  @SerializedName(SERIALIZED_NAME_INCOMING_PLEDGES_VALUATION_BASE_CURRENCY)
  private String incomingPledgesValuationBaseCurrency;

  public TgvalidatordTnPledgeStatisticsCurrency() {
  }

  public TgvalidatordTnPledgeStatisticsCurrency currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

  /**
   * Get currencyID
   * @return currencyID
   */
  @javax.annotation.Nullable
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }


  public TgvalidatordTnPledgeStatisticsCurrency outgoingPledgesAmount(String outgoingPledgesAmount) {
    this.outgoingPledgesAmount = outgoingPledgesAmount;
    return this;
  }

  /**
   * Get outgoingPledgesAmount
   * @return outgoingPledgesAmount
   */
  @javax.annotation.Nullable
  public String getOutgoingPledgesAmount() {
    return outgoingPledgesAmount;
  }

  public void setOutgoingPledgesAmount(String outgoingPledgesAmount) {
    this.outgoingPledgesAmount = outgoingPledgesAmount;
  }


  public TgvalidatordTnPledgeStatisticsCurrency outgoingPledgesValuationBaseCurrency(String outgoingPledgesValuationBaseCurrency) {
    this.outgoingPledgesValuationBaseCurrency = outgoingPledgesValuationBaseCurrency;
    return this;
  }

  /**
   * Get outgoingPledgesValuationBaseCurrency
   * @return outgoingPledgesValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getOutgoingPledgesValuationBaseCurrency() {
    return outgoingPledgesValuationBaseCurrency;
  }

  public void setOutgoingPledgesValuationBaseCurrency(String outgoingPledgesValuationBaseCurrency) {
    this.outgoingPledgesValuationBaseCurrency = outgoingPledgesValuationBaseCurrency;
  }


  public TgvalidatordTnPledgeStatisticsCurrency incomingPledgesAmount(String incomingPledgesAmount) {
    this.incomingPledgesAmount = incomingPledgesAmount;
    return this;
  }

  /**
   * Get incomingPledgesAmount
   * @return incomingPledgesAmount
   */
  @javax.annotation.Nullable
  public String getIncomingPledgesAmount() {
    return incomingPledgesAmount;
  }

  public void setIncomingPledgesAmount(String incomingPledgesAmount) {
    this.incomingPledgesAmount = incomingPledgesAmount;
  }


  public TgvalidatordTnPledgeStatisticsCurrency incomingPledgesValuationBaseCurrency(String incomingPledgesValuationBaseCurrency) {
    this.incomingPledgesValuationBaseCurrency = incomingPledgesValuationBaseCurrency;
    return this;
  }

  /**
   * Get incomingPledgesValuationBaseCurrency
   * @return incomingPledgesValuationBaseCurrency
   */
  @javax.annotation.Nullable
  public String getIncomingPledgesValuationBaseCurrency() {
    return incomingPledgesValuationBaseCurrency;
  }

  public void setIncomingPledgesValuationBaseCurrency(String incomingPledgesValuationBaseCurrency) {
    this.incomingPledgesValuationBaseCurrency = incomingPledgesValuationBaseCurrency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnPledgeStatisticsCurrency tgvalidatordTnPledgeStatisticsCurrency = (TgvalidatordTnPledgeStatisticsCurrency) o;
    return Objects.equals(this.currencyID, tgvalidatordTnPledgeStatisticsCurrency.currencyID) &&
        Objects.equals(this.outgoingPledgesAmount, tgvalidatordTnPledgeStatisticsCurrency.outgoingPledgesAmount) &&
        Objects.equals(this.outgoingPledgesValuationBaseCurrency, tgvalidatordTnPledgeStatisticsCurrency.outgoingPledgesValuationBaseCurrency) &&
        Objects.equals(this.incomingPledgesAmount, tgvalidatordTnPledgeStatisticsCurrency.incomingPledgesAmount) &&
        Objects.equals(this.incomingPledgesValuationBaseCurrency, tgvalidatordTnPledgeStatisticsCurrency.incomingPledgesValuationBaseCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyID, outgoingPledgesAmount, outgoingPledgesValuationBaseCurrency, incomingPledgesAmount, incomingPledgesValuationBaseCurrency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnPledgeStatisticsCurrency {\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    outgoingPledgesAmount: ").append(toIndentedString(outgoingPledgesAmount)).append("\n");
    sb.append("    outgoingPledgesValuationBaseCurrency: ").append(toIndentedString(outgoingPledgesValuationBaseCurrency)).append("\n");
    sb.append("    incomingPledgesAmount: ").append(toIndentedString(incomingPledgesAmount)).append("\n");
    sb.append("    incomingPledgesValuationBaseCurrency: ").append(toIndentedString(incomingPledgesValuationBaseCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currencyID");
    openapiFields.add("outgoingPledgesAmount");
    openapiFields.add("outgoingPledgesValuationBaseCurrency");
    openapiFields.add("incomingPledgesAmount");
    openapiFields.add("incomingPledgesValuationBaseCurrency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnPledgeStatisticsCurrency
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnPledgeStatisticsCurrency.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnPledgeStatisticsCurrency is not found in the empty JSON string", TgvalidatordTnPledgeStatisticsCurrency.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnPledgeStatisticsCurrency.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnPledgeStatisticsCurrency` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("currencyID") != null && !jsonObj.get("currencyID").isJsonNull()) && !jsonObj.get("currencyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyID").toString()));
      }
      if ((jsonObj.get("outgoingPledgesAmount") != null && !jsonObj.get("outgoingPledgesAmount").isJsonNull()) && !jsonObj.get("outgoingPledgesAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outgoingPledgesAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outgoingPledgesAmount").toString()));
      }
      if ((jsonObj.get("outgoingPledgesValuationBaseCurrency") != null && !jsonObj.get("outgoingPledgesValuationBaseCurrency").isJsonNull()) && !jsonObj.get("outgoingPledgesValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outgoingPledgesValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outgoingPledgesValuationBaseCurrency").toString()));
      }
      if ((jsonObj.get("incomingPledgesAmount") != null && !jsonObj.get("incomingPledgesAmount").isJsonNull()) && !jsonObj.get("incomingPledgesAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingPledgesAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingPledgesAmount").toString()));
      }
      if ((jsonObj.get("incomingPledgesValuationBaseCurrency") != null && !jsonObj.get("incomingPledgesValuationBaseCurrency").isJsonNull()) && !jsonObj.get("incomingPledgesValuationBaseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingPledgesValuationBaseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingPledgesValuationBaseCurrency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnPledgeStatisticsCurrency.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnPledgeStatisticsCurrency' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnPledgeStatisticsCurrency> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnPledgeStatisticsCurrency.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnPledgeStatisticsCurrency>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnPledgeStatisticsCurrency value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnPledgeStatisticsCurrency read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnPledgeStatisticsCurrency given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnPledgeStatisticsCurrency
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnPledgeStatisticsCurrency
   */
  public static TgvalidatordTnPledgeStatisticsCurrency fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnPledgeStatisticsCurrency.class);
  }

  /**
   * Convert an instance of TgvalidatordTnPledgeStatisticsCurrency to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

