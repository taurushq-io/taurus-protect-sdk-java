/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordCreateOutgoingXLMManageDataRequestRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordCreateOutgoingXLMManageDataRequestRequest {
  public static final String SERIALIZED_NAME_FROM_ADDRESS_ID = "fromAddressId";
  @SerializedName(SERIALIZED_NAME_FROM_ADDRESS_ID)
  private String fromAddressId;

  public static final String SERIALIZED_NAME_DATA_NAME = "dataName";
  @SerializedName(SERIALIZED_NAME_DATA_NAME)
  private String dataName;

  public static final String SERIALIZED_NAME_DATA_VALUE = "dataValue";
  @SerializedName(SERIALIZED_NAME_DATA_VALUE)
  private String dataValue;

  public static final String SERIALIZED_NAME_FEE_LIMIT = "feeLimit";
  @SerializedName(SERIALIZED_NAME_FEE_LIMIT)
  private String feeLimit;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUEST_ID = "externalRequestId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUEST_ID)
  private String externalRequestId;

  public static final String SERIALIZED_NAME_SPONSORED_BY_ADDRESS_ID = "sponsoredByAddressId";
  @SerializedName(SERIALIZED_NAME_SPONSORED_BY_ADDRESS_ID)
  private String sponsoredByAddressId;

  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest() {
  }

  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest fromAddressId(String fromAddressId) {
    this.fromAddressId = fromAddressId;
    return this;
  }

  /**
   * Get fromAddressId
   * @return fromAddressId
   */
  @javax.annotation.Nonnull
  public String getFromAddressId() {
    return fromAddressId;
  }

  public void setFromAddressId(String fromAddressId) {
    this.fromAddressId = fromAddressId;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest dataName(String dataName) {
    this.dataName = dataName;
    return this;
  }

  /**
   * name of the XLM data entry
   * @return dataName
   */
  @javax.annotation.Nonnull
  public String getDataName() {
    return dataName;
  }

  public void setDataName(String dataName) {
    this.dataName = dataName;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest dataValue(String dataValue) {
    this.dataValue = dataValue;
    return this;
  }

  /**
   * base64 encoded byte array
   * @return dataValue
   */
  @javax.annotation.Nullable
  public String getDataValue() {
    return dataValue;
  }

  public void setDataValue(String dataValue) {
    this.dataValue = dataValue;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest feeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
    return this;
  }

  /**
   * Get feeLimit
   * @return feeLimit
   */
  @javax.annotation.Nullable
  public String getFeeLimit() {
    return feeLimit;
  }

  public void setFeeLimit(String feeLimit) {
    this.feeLimit = feeLimit;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest externalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
    return this;
  }

  /**
   * Identifier for the request in the user&#39;s system. This must be unique. Attempting to create a request with an existing externalRequestId will do nothing and return the originally created request
   * @return externalRequestId
   */
  @javax.annotation.Nullable
  public String getExternalRequestId() {
    return externalRequestId;
  }

  public void setExternalRequestId(String externalRequestId) {
    this.externalRequestId = externalRequestId;
  }


  public TgvalidatordCreateOutgoingXLMManageDataRequestRequest sponsoredByAddressId(String sponsoredByAddressId) {
    this.sponsoredByAddressId = sponsoredByAddressId;
    return this;
  }

  /**
   * If set, is the ID of the address who will sponsor the cost of the operation on the minimum balance of the source address
   * @return sponsoredByAddressId
   */
  @javax.annotation.Nullable
  public String getSponsoredByAddressId() {
    return sponsoredByAddressId;
  }

  public void setSponsoredByAddressId(String sponsoredByAddressId) {
    this.sponsoredByAddressId = sponsoredByAddressId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordCreateOutgoingXLMManageDataRequestRequest tgvalidatordCreateOutgoingXLMManageDataRequestRequest = (TgvalidatordCreateOutgoingXLMManageDataRequestRequest) o;
    return Objects.equals(this.fromAddressId, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.fromAddressId) &&
        Objects.equals(this.dataName, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.dataName) &&
        Objects.equals(this.dataValue, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.dataValue) &&
        Objects.equals(this.feeLimit, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.feeLimit) &&
        Objects.equals(this.comment, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.comment) &&
        Objects.equals(this.externalRequestId, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.externalRequestId) &&
        Objects.equals(this.sponsoredByAddressId, tgvalidatordCreateOutgoingXLMManageDataRequestRequest.sponsoredByAddressId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromAddressId, dataName, dataValue, feeLimit, comment, externalRequestId, sponsoredByAddressId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordCreateOutgoingXLMManageDataRequestRequest {\n");
    sb.append("    fromAddressId: ").append(toIndentedString(fromAddressId)).append("\n");
    sb.append("    dataName: ").append(toIndentedString(dataName)).append("\n");
    sb.append("    dataValue: ").append(toIndentedString(dataValue)).append("\n");
    sb.append("    feeLimit: ").append(toIndentedString(feeLimit)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    externalRequestId: ").append(toIndentedString(externalRequestId)).append("\n");
    sb.append("    sponsoredByAddressId: ").append(toIndentedString(sponsoredByAddressId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fromAddressId");
    openapiFields.add("dataName");
    openapiFields.add("dataValue");
    openapiFields.add("feeLimit");
    openapiFields.add("comment");
    openapiFields.add("externalRequestId");
    openapiFields.add("sponsoredByAddressId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fromAddressId");
    openapiRequiredFields.add("dataName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordCreateOutgoingXLMManageDataRequestRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordCreateOutgoingXLMManageDataRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordCreateOutgoingXLMManageDataRequestRequest is not found in the empty JSON string", TgvalidatordCreateOutgoingXLMManageDataRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordCreateOutgoingXLMManageDataRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordCreateOutgoingXLMManageDataRequestRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TgvalidatordCreateOutgoingXLMManageDataRequestRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("fromAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromAddressId").toString()));
      }
      if (!jsonObj.get("dataName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataName").toString()));
      }
      if ((jsonObj.get("dataValue") != null && !jsonObj.get("dataValue").isJsonNull()) && !jsonObj.get("dataValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataValue").toString()));
      }
      if ((jsonObj.get("feeLimit") != null && !jsonObj.get("feeLimit").isJsonNull()) && !jsonObj.get("feeLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feeLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feeLimit").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("externalRequestId") != null && !jsonObj.get("externalRequestId").isJsonNull()) && !jsonObj.get("externalRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalRequestId").toString()));
      }
      if ((jsonObj.get("sponsoredByAddressId") != null && !jsonObj.get("sponsoredByAddressId").isJsonNull()) && !jsonObj.get("sponsoredByAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sponsoredByAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sponsoredByAddressId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordCreateOutgoingXLMManageDataRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordCreateOutgoingXLMManageDataRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordCreateOutgoingXLMManageDataRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordCreateOutgoingXLMManageDataRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordCreateOutgoingXLMManageDataRequestRequest>() {
           @Override
           public void write(JsonWriter out, TgvalidatordCreateOutgoingXLMManageDataRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordCreateOutgoingXLMManageDataRequestRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordCreateOutgoingXLMManageDataRequestRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordCreateOutgoingXLMManageDataRequestRequest
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordCreateOutgoingXLMManageDataRequestRequest
   */
  public static TgvalidatordCreateOutgoingXLMManageDataRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordCreateOutgoingXLMManageDataRequestRequest.class);
  }

  /**
   * Convert an instance of TgvalidatordCreateOutgoingXLMManageDataRequestRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

