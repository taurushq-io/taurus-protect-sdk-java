/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordUTXO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordUTXO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_OUTPUT_INDEX = "outputIndex";
  @SerializedName(SERIALIZED_NAME_OUTPUT_INDEX)
  private Long outputIndex;

  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  private String script;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_BLOCK_HEIGHT = "blockHeight";
  @SerializedName(SERIALIZED_NAME_BLOCK_HEIGHT)
  private String blockHeight;

  public static final String SERIALIZED_NAME_RESERVED_BY_REQUEST_ID = "reservedByRequestId";
  @SerializedName(SERIALIZED_NAME_RESERVED_BY_REQUEST_ID)
  private String reservedByRequestId;

  public static final String SERIALIZED_NAME_RESERVATION_ID = "reservationId";
  @SerializedName(SERIALIZED_NAME_RESERVATION_ID)
  private String reservationId;

  public TgvalidatordUTXO() {
  }

  public TgvalidatordUTXO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordUTXO hash(String hash) {
    this.hash = hash;
    return this;
  }

  /**
   * Get hash
   * @return hash
   */
  @javax.annotation.Nullable
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }


  public TgvalidatordUTXO outputIndex(Long outputIndex) {
    this.outputIndex = outputIndex;
    return this;
  }

  /**
   * Get outputIndex
   * @return outputIndex
   */
  @javax.annotation.Nullable
  public Long getOutputIndex() {
    return outputIndex;
  }

  public void setOutputIndex(Long outputIndex) {
    this.outputIndex = outputIndex;
  }


  public TgvalidatordUTXO script(String script) {
    this.script = script;
    return this;
  }

  /**
   * Get script
   * @return script
   */
  @javax.annotation.Nullable
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }


  public TgvalidatordUTXO value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  public TgvalidatordUTXO blockHeight(String blockHeight) {
    this.blockHeight = blockHeight;
    return this;
  }

  /**
   * Get blockHeight
   * @return blockHeight
   */
  @javax.annotation.Nullable
  public String getBlockHeight() {
    return blockHeight;
  }

  public void setBlockHeight(String blockHeight) {
    this.blockHeight = blockHeight;
  }


  public TgvalidatordUTXO reservedByRequestId(String reservedByRequestId) {
    this.reservedByRequestId = reservedByRequestId;
    return this;
  }

  /**
   * reservedByRequestId has been replaced by reservationId since 3.22. It will always be empty since 3.22.
   * @return reservedByRequestId
   */
  @javax.annotation.Nullable
  public String getReservedByRequestId() {
    return reservedByRequestId;
  }

  public void setReservedByRequestId(String reservedByRequestId) {
    this.reservedByRequestId = reservedByRequestId;
  }


  public TgvalidatordUTXO reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

  /**
   * Get reservationId
   * @return reservationId
   */
  @javax.annotation.Nullable
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordUTXO tgvalidatordUTXO = (TgvalidatordUTXO) o;
    return Objects.equals(this.id, tgvalidatordUTXO.id) &&
        Objects.equals(this.hash, tgvalidatordUTXO.hash) &&
        Objects.equals(this.outputIndex, tgvalidatordUTXO.outputIndex) &&
        Objects.equals(this.script, tgvalidatordUTXO.script) &&
        Objects.equals(this.value, tgvalidatordUTXO.value) &&
        Objects.equals(this.blockHeight, tgvalidatordUTXO.blockHeight) &&
        Objects.equals(this.reservedByRequestId, tgvalidatordUTXO.reservedByRequestId) &&
        Objects.equals(this.reservationId, tgvalidatordUTXO.reservationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hash, outputIndex, script, value, blockHeight, reservedByRequestId, reservationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordUTXO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    outputIndex: ").append(toIndentedString(outputIndex)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    blockHeight: ").append(toIndentedString(blockHeight)).append("\n");
    sb.append("    reservedByRequestId: ").append(toIndentedString(reservedByRequestId)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("hash");
    openapiFields.add("outputIndex");
    openapiFields.add("script");
    openapiFields.add("value");
    openapiFields.add("blockHeight");
    openapiFields.add("reservedByRequestId");
    openapiFields.add("reservationId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordUTXO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordUTXO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordUTXO is not found in the empty JSON string", TgvalidatordUTXO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordUTXO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordUTXO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("hash") != null && !jsonObj.get("hash").isJsonNull()) && !jsonObj.get("hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hash").toString()));
      }
      if ((jsonObj.get("script") != null && !jsonObj.get("script").isJsonNull()) && !jsonObj.get("script").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `script` to be a primitive type in the JSON string but got `%s`", jsonObj.get("script").toString()));
      }
      if ((jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
      if ((jsonObj.get("blockHeight") != null && !jsonObj.get("blockHeight").isJsonNull()) && !jsonObj.get("blockHeight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockHeight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blockHeight").toString()));
      }
      if ((jsonObj.get("reservedByRequestId") != null && !jsonObj.get("reservedByRequestId").isJsonNull()) && !jsonObj.get("reservedByRequestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservedByRequestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reservedByRequestId").toString()));
      }
      if ((jsonObj.get("reservationId") != null && !jsonObj.get("reservationId").isJsonNull()) && !jsonObj.get("reservationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reservationId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordUTXO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordUTXO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordUTXO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordUTXO.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordUTXO>() {
           @Override
           public void write(JsonWriter out, TgvalidatordUTXO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordUTXO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordUTXO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordUTXO
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordUTXO
   */
  public static TgvalidatordUTXO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordUTXO.class);
  }

  /**
   * Convert an instance of TgvalidatordUTXO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

