/*
 * Taurus-PROTECT APIs
 * Taurus-PROTECT APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.taurushq.sdk.protect.openapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.taurushq.sdk.protect.openapi.model.TgvalidatordProofOfOwnership;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.taurushq.sdk.protect.openapi.JSON;

/**
 * TgvalidatordTnSharedAddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T17:07:27.988152+02:00[Europe/Zurich]", comments = "Generator version: 7.9.0")
public class TgvalidatordTnSharedAddress {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTERNAL_ADDRESS_I_D = "internalAddressID";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ADDRESS_I_D)
  private String internalAddressID;

  public static final String SERIALIZED_NAME_WLADDRESS_I_D = "wladdressID";
  @SerializedName(SERIALIZED_NAME_WLADDRESS_I_D)
  private String wladdressID;

  public static final String SERIALIZED_NAME_OWNER_PARTICIPANT_ID = "ownerParticipantId";
  @SerializedName(SERIALIZED_NAME_OWNER_PARTICIPANT_ID)
  private String ownerParticipantId;

  public static final String SERIALIZED_NAME_TARGET_PARTICIPANT_ID = "targetParticipantId";
  @SerializedName(SERIALIZED_NAME_TARGET_PARTICIPANT_ID)
  private String targetParticipantId;

  public static final String SERIALIZED_NAME_BLOCKCHAIN = "blockchain";
  @SerializedName(SERIALIZED_NAME_BLOCKCHAIN)
  private String blockchain;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_ORIGIN_LABEL = "originLabel";
  @SerializedName(SERIALIZED_NAME_ORIGIN_LABEL)
  private String originLabel;

  public static final String SERIALIZED_NAME_ORIGIN_CREATION_DATE = "originCreationDate";
  @SerializedName(SERIALIZED_NAME_ORIGIN_CREATION_DATE)
  private OffsetDateTime originCreationDate;

  public static final String SERIALIZED_NAME_ORIGIN_DELETION_DATE = "originDeletionDate";
  @SerializedName(SERIALIZED_NAME_ORIGIN_DELETION_DATE)
  private OffsetDateTime originDeletionDate;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_TARGET_ACCEPTED_AT = "targetAcceptedAt";
  @SerializedName(SERIALIZED_NAME_TARGET_ACCEPTED_AT)
  private OffsetDateTime targetAcceptedAt;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PROOF_OF_OWNERSHIP = "proofOfOwnership";
  @SerializedName(SERIALIZED_NAME_PROOF_OF_OWNERSHIP)
  private TgvalidatordProofOfOwnership proofOfOwnership;

  public static final String SERIALIZED_NAME_PLEDGES_COUNT = "pledgesCount";
  @SerializedName(SERIALIZED_NAME_PLEDGES_COUNT)
  private String pledgesCount;

  public TgvalidatordTnSharedAddress() {
  }

  public TgvalidatordTnSharedAddress id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TgvalidatordTnSharedAddress internalAddressID(String internalAddressID) {
    this.internalAddressID = internalAddressID;
    return this;
  }

  /**
   * Represent the id of a deposit address if your participant is the owner participant of the shared address. internalAddressID and wladdressID can not be set simultaneously.
   * @return internalAddressID
   */
  @javax.annotation.Nullable
  public String getInternalAddressID() {
    return internalAddressID;
  }

  public void setInternalAddressID(String internalAddressID) {
    this.internalAddressID = internalAddressID;
  }


  public TgvalidatordTnSharedAddress wladdressID(String wladdressID) {
    this.wladdressID = wladdressID;
    return this;
  }

  /**
   * Represent the id of a whitelisted address if your participant is the target participant of the shared address. can be empty if the whitelisted address is not yet created or was rejected. internalAddressID and wladdressID can not be set simultaneously.
   * @return wladdressID
   */
  @javax.annotation.Nullable
  public String getWladdressID() {
    return wladdressID;
  }

  public void setWladdressID(String wladdressID) {
    this.wladdressID = wladdressID;
  }


  public TgvalidatordTnSharedAddress ownerParticipantId(String ownerParticipantId) {
    this.ownerParticipantId = ownerParticipantId;
    return this;
  }

  /**
   * Get ownerParticipantId
   * @return ownerParticipantId
   */
  @javax.annotation.Nullable
  public String getOwnerParticipantId() {
    return ownerParticipantId;
  }

  public void setOwnerParticipantId(String ownerParticipantId) {
    this.ownerParticipantId = ownerParticipantId;
  }


  public TgvalidatordTnSharedAddress targetParticipantId(String targetParticipantId) {
    this.targetParticipantId = targetParticipantId;
    return this;
  }

  /**
   * Get targetParticipantId
   * @return targetParticipantId
   */
  @javax.annotation.Nullable
  public String getTargetParticipantId() {
    return targetParticipantId;
  }

  public void setTargetParticipantId(String targetParticipantId) {
    this.targetParticipantId = targetParticipantId;
  }


  public TgvalidatordTnSharedAddress blockchain(String blockchain) {
    this.blockchain = blockchain;
    return this;
  }

  /**
   * Get blockchain
   * @return blockchain
   */
  @javax.annotation.Nullable
  public String getBlockchain() {
    return blockchain;
  }

  public void setBlockchain(String blockchain) {
    this.blockchain = blockchain;
  }


  public TgvalidatordTnSharedAddress network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public TgvalidatordTnSharedAddress address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public TgvalidatordTnSharedAddress originLabel(String originLabel) {
    this.originLabel = originLabel;
    return this;
  }

  /**
   * Get originLabel
   * @return originLabel
   */
  @javax.annotation.Nullable
  public String getOriginLabel() {
    return originLabel;
  }

  public void setOriginLabel(String originLabel) {
    this.originLabel = originLabel;
  }


  public TgvalidatordTnSharedAddress originCreationDate(OffsetDateTime originCreationDate) {
    this.originCreationDate = originCreationDate;
    return this;
  }

  /**
   * Get originCreationDate
   * @return originCreationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOriginCreationDate() {
    return originCreationDate;
  }

  public void setOriginCreationDate(OffsetDateTime originCreationDate) {
    this.originCreationDate = originCreationDate;
  }


  public TgvalidatordTnSharedAddress originDeletionDate(OffsetDateTime originDeletionDate) {
    this.originDeletionDate = originDeletionDate;
    return this;
  }

  /**
   * Get originDeletionDate
   * @return originDeletionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOriginDeletionDate() {
    return originDeletionDate;
  }

  public void setOriginDeletionDate(OffsetDateTime originDeletionDate) {
    this.originDeletionDate = originDeletionDate;
  }


  public TgvalidatordTnSharedAddress createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public TgvalidatordTnSharedAddress updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public TgvalidatordTnSharedAddress targetAcceptedAt(OffsetDateTime targetAcceptedAt) {
    this.targetAcceptedAt = targetAcceptedAt;
    return this;
  }

  /**
   * Get targetAcceptedAt
   * @return targetAcceptedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTargetAcceptedAt() {
    return targetAcceptedAt;
  }

  public void setTargetAcceptedAt(OffsetDateTime targetAcceptedAt) {
    this.targetAcceptedAt = targetAcceptedAt;
  }


  public TgvalidatordTnSharedAddress status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TgvalidatordTnSharedAddress proofOfOwnership(TgvalidatordProofOfOwnership proofOfOwnership) {
    this.proofOfOwnership = proofOfOwnership;
    return this;
  }

  /**
   * Get proofOfOwnership
   * @return proofOfOwnership
   */
  @javax.annotation.Nullable
  public TgvalidatordProofOfOwnership getProofOfOwnership() {
    return proofOfOwnership;
  }

  public void setProofOfOwnership(TgvalidatordProofOfOwnership proofOfOwnership) {
    this.proofOfOwnership = proofOfOwnership;
  }


  public TgvalidatordTnSharedAddress pledgesCount(String pledgesCount) {
    this.pledgesCount = pledgesCount;
    return this;
  }

  /**
   * Count of active pledges linked to the shared address.
   * @return pledgesCount
   */
  @javax.annotation.Nullable
  public String getPledgesCount() {
    return pledgesCount;
  }

  public void setPledgesCount(String pledgesCount) {
    this.pledgesCount = pledgesCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TgvalidatordTnSharedAddress tgvalidatordTnSharedAddress = (TgvalidatordTnSharedAddress) o;
    return Objects.equals(this.id, tgvalidatordTnSharedAddress.id) &&
        Objects.equals(this.internalAddressID, tgvalidatordTnSharedAddress.internalAddressID) &&
        Objects.equals(this.wladdressID, tgvalidatordTnSharedAddress.wladdressID) &&
        Objects.equals(this.ownerParticipantId, tgvalidatordTnSharedAddress.ownerParticipantId) &&
        Objects.equals(this.targetParticipantId, tgvalidatordTnSharedAddress.targetParticipantId) &&
        Objects.equals(this.blockchain, tgvalidatordTnSharedAddress.blockchain) &&
        Objects.equals(this.network, tgvalidatordTnSharedAddress.network) &&
        Objects.equals(this.address, tgvalidatordTnSharedAddress.address) &&
        Objects.equals(this.originLabel, tgvalidatordTnSharedAddress.originLabel) &&
        Objects.equals(this.originCreationDate, tgvalidatordTnSharedAddress.originCreationDate) &&
        Objects.equals(this.originDeletionDate, tgvalidatordTnSharedAddress.originDeletionDate) &&
        Objects.equals(this.createdAt, tgvalidatordTnSharedAddress.createdAt) &&
        Objects.equals(this.updatedAt, tgvalidatordTnSharedAddress.updatedAt) &&
        Objects.equals(this.targetAcceptedAt, tgvalidatordTnSharedAddress.targetAcceptedAt) &&
        Objects.equals(this.status, tgvalidatordTnSharedAddress.status) &&
        Objects.equals(this.proofOfOwnership, tgvalidatordTnSharedAddress.proofOfOwnership) &&
        Objects.equals(this.pledgesCount, tgvalidatordTnSharedAddress.pledgesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, internalAddressID, wladdressID, ownerParticipantId, targetParticipantId, blockchain, network, address, originLabel, originCreationDate, originDeletionDate, createdAt, updatedAt, targetAcceptedAt, status, proofOfOwnership, pledgesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TgvalidatordTnSharedAddress {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalAddressID: ").append(toIndentedString(internalAddressID)).append("\n");
    sb.append("    wladdressID: ").append(toIndentedString(wladdressID)).append("\n");
    sb.append("    ownerParticipantId: ").append(toIndentedString(ownerParticipantId)).append("\n");
    sb.append("    targetParticipantId: ").append(toIndentedString(targetParticipantId)).append("\n");
    sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    originLabel: ").append(toIndentedString(originLabel)).append("\n");
    sb.append("    originCreationDate: ").append(toIndentedString(originCreationDate)).append("\n");
    sb.append("    originDeletionDate: ").append(toIndentedString(originDeletionDate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    targetAcceptedAt: ").append(toIndentedString(targetAcceptedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    proofOfOwnership: ").append(toIndentedString(proofOfOwnership)).append("\n");
    sb.append("    pledgesCount: ").append(toIndentedString(pledgesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("internalAddressID");
    openapiFields.add("wladdressID");
    openapiFields.add("ownerParticipantId");
    openapiFields.add("targetParticipantId");
    openapiFields.add("blockchain");
    openapiFields.add("network");
    openapiFields.add("address");
    openapiFields.add("originLabel");
    openapiFields.add("originCreationDate");
    openapiFields.add("originDeletionDate");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("targetAcceptedAt");
    openapiFields.add("status");
    openapiFields.add("proofOfOwnership");
    openapiFields.add("pledgesCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TgvalidatordTnSharedAddress
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TgvalidatordTnSharedAddress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TgvalidatordTnSharedAddress is not found in the empty JSON string", TgvalidatordTnSharedAddress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TgvalidatordTnSharedAddress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TgvalidatordTnSharedAddress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("internalAddressID") != null && !jsonObj.get("internalAddressID").isJsonNull()) && !jsonObj.get("internalAddressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalAddressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalAddressID").toString()));
      }
      if ((jsonObj.get("wladdressID") != null && !jsonObj.get("wladdressID").isJsonNull()) && !jsonObj.get("wladdressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wladdressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wladdressID").toString()));
      }
      if ((jsonObj.get("ownerParticipantId") != null && !jsonObj.get("ownerParticipantId").isJsonNull()) && !jsonObj.get("ownerParticipantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerParticipantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerParticipantId").toString()));
      }
      if ((jsonObj.get("targetParticipantId") != null && !jsonObj.get("targetParticipantId").isJsonNull()) && !jsonObj.get("targetParticipantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetParticipantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetParticipantId").toString()));
      }
      if ((jsonObj.get("blockchain") != null && !jsonObj.get("blockchain").isJsonNull()) && !jsonObj.get("blockchain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockchain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blockchain").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("originLabel") != null && !jsonObj.get("originLabel").isJsonNull()) && !jsonObj.get("originLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originLabel").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `proofOfOwnership`
      if (jsonObj.get("proofOfOwnership") != null && !jsonObj.get("proofOfOwnership").isJsonNull()) {
        TgvalidatordProofOfOwnership.validateJsonElement(jsonObj.get("proofOfOwnership"));
      }
      if ((jsonObj.get("pledgesCount") != null && !jsonObj.get("pledgesCount").isJsonNull()) && !jsonObj.get("pledgesCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pledgesCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pledgesCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TgvalidatordTnSharedAddress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TgvalidatordTnSharedAddress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TgvalidatordTnSharedAddress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TgvalidatordTnSharedAddress.class));

       return (TypeAdapter<T>) new TypeAdapter<TgvalidatordTnSharedAddress>() {
           @Override
           public void write(JsonWriter out, TgvalidatordTnSharedAddress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TgvalidatordTnSharedAddress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TgvalidatordTnSharedAddress given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TgvalidatordTnSharedAddress
   * @throws IOException if the JSON string is invalid with respect to TgvalidatordTnSharedAddress
   */
  public static TgvalidatordTnSharedAddress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TgvalidatordTnSharedAddress.class);
  }

  /**
   * Convert an instance of TgvalidatordTnSharedAddress to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

